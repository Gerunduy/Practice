//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExpertiseWPFApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="myExpertiseExaminationTables", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class myExpertiseExaminationTables : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CritCompare[] ListCritCompareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Criterions[] ListCriterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Marks[] ListMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Projects[] ListProjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Experts expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Expertises expertiseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Err {
            get {
                return this.ErrField;
            }
            set {
                if ((this.ErrField.Equals(value) != true)) {
                    this.ErrField = value;
                    this.RaisePropertyChanged("Err");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CritCompare[] ListCritCompare {
            get {
                return this.ListCritCompareField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCritCompareField, value) != true)) {
                    this.ListCritCompareField = value;
                    this.RaisePropertyChanged("ListCritCompare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Criterions[] ListCriterions {
            get {
                return this.ListCriterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCriterionsField, value) != true)) {
                    this.ListCriterionsField = value;
                    this.RaisePropertyChanged("ListCriterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Marks[] ListMark {
            get {
                return this.ListMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.ListMarkField, value) != true)) {
                    this.ListMarkField = value;
                    this.RaisePropertyChanged("ListMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Projects[] ListProjects {
            get {
                return this.ListProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListProjectsField, value) != true)) {
                    this.ListProjectsField = value;
                    this.RaisePropertyChanged("ListProjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Experts expert {
            get {
                return this.expertField;
            }
            set {
                if ((object.ReferenceEquals(this.expertField, value) != true)) {
                    this.expertField = value;
                    this.RaisePropertyChanged("expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Expertises expertise {
            get {
                return this.expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.expertiseField, value) != true)) {
                    this.expertiseField = value;
                    this.RaisePropertyChanged("expertise");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Experts", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class Experts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CritCompare[] CritCompareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpertFos[] ExpertFosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] ExpertiseExpertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Marks[] MarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool comission_chairmanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contacts_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string degree_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool delete_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string job_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string login_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string password_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patronymic_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string post_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rank_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surname_expertField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CritCompare[] CritCompare {
            get {
                return this.CritCompareField;
            }
            set {
                if ((object.ReferenceEquals(this.CritCompareField, value) != true)) {
                    this.CritCompareField = value;
                    this.RaisePropertyChanged("CritCompare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpertFos[] ExpertFos {
            get {
                return this.ExpertFosField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertFosField, value) != true)) {
                    this.ExpertFosField = value;
                    this.RaisePropertyChanged("ExpertFos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] ExpertiseExpert {
            get {
                return this.ExpertiseExpertField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertiseExpertField, value) != true)) {
                    this.ExpertiseExpertField = value;
                    this.RaisePropertyChanged("ExpertiseExpert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Marks[] Marks {
            get {
                return this.MarksField;
            }
            set {
                if ((object.ReferenceEquals(this.MarksField, value) != true)) {
                    this.MarksField = value;
                    this.RaisePropertyChanged("Marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool comission_chairman {
            get {
                return this.comission_chairmanField;
            }
            set {
                if ((this.comission_chairmanField.Equals(value) != true)) {
                    this.comission_chairmanField = value;
                    this.RaisePropertyChanged("comission_chairman");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contacts_expert {
            get {
                return this.contacts_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.contacts_expertField, value) != true)) {
                    this.contacts_expertField = value;
                    this.RaisePropertyChanged("contacts_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string degree_expert {
            get {
                return this.degree_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.degree_expertField, value) != true)) {
                    this.degree_expertField = value;
                    this.RaisePropertyChanged("degree_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool delete_expert {
            get {
                return this.delete_expertField;
            }
            set {
                if ((this.delete_expertField.Equals(value) != true)) {
                    this.delete_expertField = value;
                    this.RaisePropertyChanged("delete_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string job_expert {
            get {
                return this.job_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.job_expertField, value) != true)) {
                    this.job_expertField = value;
                    this.RaisePropertyChanged("job_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string login_expert {
            get {
                return this.login_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.login_expertField, value) != true)) {
                    this.login_expertField = value;
                    this.RaisePropertyChanged("login_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_expert {
            get {
                return this.name_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.name_expertField, value) != true)) {
                    this.name_expertField = value;
                    this.RaisePropertyChanged("name_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password_expert {
            get {
                return this.password_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.password_expertField, value) != true)) {
                    this.password_expertField = value;
                    this.RaisePropertyChanged("password_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patronymic_expert {
            get {
                return this.patronymic_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.patronymic_expertField, value) != true)) {
                    this.patronymic_expertField = value;
                    this.RaisePropertyChanged("patronymic_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string post_expert {
            get {
                return this.post_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.post_expertField, value) != true)) {
                    this.post_expertField = value;
                    this.RaisePropertyChanged("post_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rank_expert {
            get {
                return this.rank_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.rank_expertField, value) != true)) {
                    this.rank_expertField = value;
                    this.RaisePropertyChanged("rank_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname_expert {
            get {
                return this.surname_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.surname_expertField, value) != true)) {
                    this.surname_expertField = value;
                    this.RaisePropertyChanged("surname_expert");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Expertises", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class Expertises : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CritCompare[] CritCompareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpCrit[] ExpCritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] ExpertiseExpertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[] ExpertiseMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] ProjectExpertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool begin_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int count_proj_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime end_date_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool end_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_fosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_expertiseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CritCompare[] CritCompare {
            get {
                return this.CritCompareField;
            }
            set {
                if ((object.ReferenceEquals(this.CritCompareField, value) != true)) {
                    this.CritCompareField = value;
                    this.RaisePropertyChanged("CritCompare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpCrit[] ExpCrit {
            get {
                return this.ExpCritField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpCritField, value) != true)) {
                    this.ExpCritField = value;
                    this.RaisePropertyChanged("ExpCrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] ExpertiseExpert {
            get {
                return this.ExpertiseExpertField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertiseExpertField, value) != true)) {
                    this.ExpertiseExpertField = value;
                    this.RaisePropertyChanged("ExpertiseExpert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[] ExpertiseMark {
            get {
                return this.ExpertiseMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertiseMarkField, value) != true)) {
                    this.ExpertiseMarkField = value;
                    this.RaisePropertyChanged("ExpertiseMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] ProjectExpertise {
            get {
                return this.ProjectExpertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectExpertiseField, value) != true)) {
                    this.ProjectExpertiseField = value;
                    this.RaisePropertyChanged("ProjectExpertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool begin_expertise {
            get {
                return this.begin_expertiseField;
            }
            set {
                if ((this.begin_expertiseField.Equals(value) != true)) {
                    this.begin_expertiseField = value;
                    this.RaisePropertyChanged("begin_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count_proj_expertise {
            get {
                return this.count_proj_expertiseField;
            }
            set {
                if ((this.count_proj_expertiseField.Equals(value) != true)) {
                    this.count_proj_expertiseField = value;
                    this.RaisePropertyChanged("count_proj_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_expertise {
            get {
                return this.date_expertiseField;
            }
            set {
                if ((this.date_expertiseField.Equals(value) != true)) {
                    this.date_expertiseField = value;
                    this.RaisePropertyChanged("date_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end_date_expertise {
            get {
                return this.end_date_expertiseField;
            }
            set {
                if ((this.end_date_expertiseField.Equals(value) != true)) {
                    this.end_date_expertiseField = value;
                    this.RaisePropertyChanged("end_date_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool end_expertise {
            get {
                return this.end_expertiseField;
            }
            set {
                if ((this.end_expertiseField.Equals(value) != true)) {
                    this.end_expertiseField = value;
                    this.RaisePropertyChanged("end_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_fos {
            get {
                return this.id_fosField;
            }
            set {
                if ((this.id_fosField.Equals(value) != true)) {
                    this.id_fosField = value;
                    this.RaisePropertyChanged("id_fos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_expertise {
            get {
                return this.name_expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.name_expertiseField, value) != true)) {
                    this.name_expertiseField = value;
                    this.RaisePropertyChanged("name_expertise");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CritCompare", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class CritCompare : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CritCompareCrit[] CritCompareCritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Expertises ExpertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Experts ExpertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_compareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double mark_compareField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CritCompareCrit[] CritCompareCrit {
            get {
                return this.CritCompareCritField;
            }
            set {
                if ((object.ReferenceEquals(this.CritCompareCritField, value) != true)) {
                    this.CritCompareCritField = value;
                    this.RaisePropertyChanged("CritCompareCrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Expertises Expertises {
            get {
                return this.ExpertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertisesField, value) != true)) {
                    this.ExpertisesField = value;
                    this.RaisePropertyChanged("Expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Experts Experts {
            get {
                return this.ExpertsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertsField, value) != true)) {
                    this.ExpertsField = value;
                    this.RaisePropertyChanged("Experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_compare {
            get {
                return this.id_compareField;
            }
            set {
                if ((this.id_compareField.Equals(value) != true)) {
                    this.id_compareField = value;
                    this.RaisePropertyChanged("id_compare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double mark_compare {
            get {
                return this.mark_compareField;
            }
            set {
                if ((this.mark_compareField.Equals(value) != true)) {
                    this.mark_compareField = value;
                    this.RaisePropertyChanged("mark_compare");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Criterions", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class Criterions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CatCrit[] CatCritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CritCompareCrit[] CritCompareCritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CritValues[] CritValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpCrit[] ExpCritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Marks[] MarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_critField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_critField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool qualit_critField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] CatCrit {
            get {
                return this.CatCritField;
            }
            set {
                if ((object.ReferenceEquals(this.CatCritField, value) != true)) {
                    this.CatCritField = value;
                    this.RaisePropertyChanged("CatCrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CritCompareCrit[] CritCompareCrit {
            get {
                return this.CritCompareCritField;
            }
            set {
                if ((object.ReferenceEquals(this.CritCompareCritField, value) != true)) {
                    this.CritCompareCritField = value;
                    this.RaisePropertyChanged("CritCompareCrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CritValues[] CritValues {
            get {
                return this.CritValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.CritValuesField, value) != true)) {
                    this.CritValuesField = value;
                    this.RaisePropertyChanged("CritValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpCrit[] ExpCrit {
            get {
                return this.ExpCritField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpCritField, value) != true)) {
                    this.ExpCritField = value;
                    this.RaisePropertyChanged("ExpCrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Marks[] Marks {
            get {
                return this.MarksField;
            }
            set {
                if ((object.ReferenceEquals(this.MarksField, value) != true)) {
                    this.MarksField = value;
                    this.RaisePropertyChanged("Marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_crit {
            get {
                return this.id_critField;
            }
            set {
                if ((this.id_critField.Equals(value) != true)) {
                    this.id_critField = value;
                    this.RaisePropertyChanged("id_crit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_crit {
            get {
                return this.name_critField;
            }
            set {
                if ((object.ReferenceEquals(this.name_critField, value) != true)) {
                    this.name_critField = value;
                    this.RaisePropertyChanged("name_crit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool qualit_crit {
            get {
                return this.qualit_critField;
            }
            set {
                if ((this.qualit_critField.Equals(value) != true)) {
                    this.qualit_critField = value;
                    this.RaisePropertyChanged("qualit_crit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Marks", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class Marks : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Criterions CriterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[] ExpertiseMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Experts ExpertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_critField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_markField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ratingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Criterions Criterions {
            get {
                return this.CriterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.CriterionsField, value) != true)) {
                    this.CriterionsField = value;
                    this.RaisePropertyChanged("Criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[] ExpertiseMark {
            get {
                return this.ExpertiseMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertiseMarkField, value) != true)) {
                    this.ExpertiseMarkField = value;
                    this.RaisePropertyChanged("ExpertiseMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Experts Experts {
            get {
                return this.ExpertsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertsField, value) != true)) {
                    this.ExpertsField = value;
                    this.RaisePropertyChanged("Experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_crit {
            get {
                return this.id_critField;
            }
            set {
                if ((this.id_critField.Equals(value) != true)) {
                    this.id_critField = value;
                    this.RaisePropertyChanged("id_crit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_mark {
            get {
                return this.id_markField;
            }
            set {
                if ((this.id_markField.Equals(value) != true)) {
                    this.id_markField = value;
                    this.RaisePropertyChanged("id_mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rating {
            get {
                return this.ratingField;
            }
            set {
                if ((this.ratingField.Equals(value) != true)) {
                    this.ratingField = value;
                    this.RaisePropertyChanged("rating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Projects", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class Projects : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.GRNTI GRNTIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[] ProjectAuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] ProjectExpertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ProjectFos[] ProjectFosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime begin_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool delete_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string email_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime end_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool exsist_exp_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string grnti_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lead_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string money_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_projectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.GRNTI GRNTI {
            get {
                return this.GRNTIField;
            }
            set {
                if ((object.ReferenceEquals(this.GRNTIField, value) != true)) {
                    this.GRNTIField = value;
                    this.RaisePropertyChanged("GRNTI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[] ProjectAuthors {
            get {
                return this.ProjectAuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectAuthorsField, value) != true)) {
                    this.ProjectAuthorsField = value;
                    this.RaisePropertyChanged("ProjectAuthors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] ProjectExpertise {
            get {
                return this.ProjectExpertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectExpertiseField, value) != true)) {
                    this.ProjectExpertiseField = value;
                    this.RaisePropertyChanged("ProjectExpertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ProjectFos[] ProjectFos {
            get {
                return this.ProjectFosField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectFosField, value) != true)) {
                    this.ProjectFosField = value;
                    this.RaisePropertyChanged("ProjectFos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime begin_project {
            get {
                return this.begin_projectField;
            }
            set {
                if ((this.begin_projectField.Equals(value) != true)) {
                    this.begin_projectField = value;
                    this.RaisePropertyChanged("begin_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool delete_project {
            get {
                return this.delete_projectField;
            }
            set {
                if ((this.delete_projectField.Equals(value) != true)) {
                    this.delete_projectField = value;
                    this.RaisePropertyChanged("delete_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email_project {
            get {
                return this.email_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.email_projectField, value) != true)) {
                    this.email_projectField = value;
                    this.RaisePropertyChanged("email_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end_project {
            get {
                return this.end_projectField;
            }
            set {
                if ((this.end_projectField.Equals(value) != true)) {
                    this.end_projectField = value;
                    this.RaisePropertyChanged("end_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool exsist_exp_project {
            get {
                return this.exsist_exp_projectField;
            }
            set {
                if ((this.exsist_exp_projectField.Equals(value) != true)) {
                    this.exsist_exp_projectField = value;
                    this.RaisePropertyChanged("exsist_exp_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string grnti_project {
            get {
                return this.grnti_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.grnti_projectField, value) != true)) {
                    this.grnti_projectField = value;
                    this.RaisePropertyChanged("grnti_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lead_project {
            get {
                return this.lead_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.lead_projectField, value) != true)) {
                    this.lead_projectField = value;
                    this.RaisePropertyChanged("lead_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string money_project {
            get {
                return this.money_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.money_projectField, value) != true)) {
                    this.money_projectField = value;
                    this.RaisePropertyChanged("money_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_project {
            get {
                return this.name_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.name_projectField, value) != true)) {
                    this.name_projectField = value;
                    this.RaisePropertyChanged("name_project");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CritCompareCrit", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class CritCompareCrit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CritCompare CritCompareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Criterions CriterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_compareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_critField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_crit_crcompareField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CritCompare CritCompare {
            get {
                return this.CritCompareField;
            }
            set {
                if ((object.ReferenceEquals(this.CritCompareField, value) != true)) {
                    this.CritCompareField = value;
                    this.RaisePropertyChanged("CritCompare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Criterions Criterions {
            get {
                return this.CriterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.CriterionsField, value) != true)) {
                    this.CriterionsField = value;
                    this.RaisePropertyChanged("Criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_compare {
            get {
                return this.id_compareField;
            }
            set {
                if ((this.id_compareField.Equals(value) != true)) {
                    this.id_compareField = value;
                    this.RaisePropertyChanged("id_compare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_crit {
            get {
                return this.id_critField;
            }
            set {
                if ((this.id_critField.Equals(value) != true)) {
                    this.id_critField = value;
                    this.RaisePropertyChanged("id_crit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_crit_crcompare {
            get {
                return this.id_crit_crcompareField;
            }
            set {
                if ((this.id_crit_crcompareField.Equals(value) != true)) {
                    this.id_crit_crcompareField = value;
                    this.RaisePropertyChanged("id_crit_crcompare");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatCrit", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class CatCrit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Categories CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Criterions CriterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_catField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_cat_critField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_critField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Categories Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Criterions Criterions {
            get {
                return this.CriterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.CriterionsField, value) != true)) {
                    this.CriterionsField = value;
                    this.RaisePropertyChanged("Criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_cat {
            get {
                return this.id_catField;
            }
            set {
                if ((this.id_catField.Equals(value) != true)) {
                    this.id_catField = value;
                    this.RaisePropertyChanged("id_cat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_cat_crit {
            get {
                return this.id_cat_critField;
            }
            set {
                if ((this.id_cat_critField.Equals(value) != true)) {
                    this.id_cat_critField = value;
                    this.RaisePropertyChanged("id_cat_crit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_crit {
            get {
                return this.id_critField;
            }
            set {
                if ((this.id_critField.Equals(value) != true)) {
                    this.id_critField = value;
                    this.RaisePropertyChanged("id_crit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CritValues", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class CritValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Criterions CriterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_critField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_valueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valid_valuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Criterions Criterions {
            get {
                return this.CriterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.CriterionsField, value) != true)) {
                    this.CriterionsField = value;
                    this.RaisePropertyChanged("Criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_crit {
            get {
                return this.id_critField;
            }
            set {
                if ((this.id_critField.Equals(value) != true)) {
                    this.id_critField = value;
                    this.RaisePropertyChanged("id_crit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_value {
            get {
                return this.id_valueField;
            }
            set {
                if ((this.id_valueField.Equals(value) != true)) {
                    this.id_valueField = value;
                    this.RaisePropertyChanged("id_value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string valid_values {
            get {
                return this.valid_valuesField;
            }
            set {
                if ((object.ReferenceEquals(this.valid_valuesField, value) != true)) {
                    this.valid_valuesField = value;
                    this.RaisePropertyChanged("valid_values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpCrit", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class ExpCrit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Criterions CriterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Expertises ExpertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_critField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_exp_critField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Criterions Criterions {
            get {
                return this.CriterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.CriterionsField, value) != true)) {
                    this.CriterionsField = value;
                    this.RaisePropertyChanged("Criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Expertises Expertises {
            get {
                return this.ExpertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertisesField, value) != true)) {
                    this.ExpertisesField = value;
                    this.RaisePropertyChanged("Expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_crit {
            get {
                return this.id_critField;
            }
            set {
                if ((this.id_critField.Equals(value) != true)) {
                    this.id_critField = value;
                    this.RaisePropertyChanged("id_crit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_exp {
            get {
                return this.id_expField;
            }
            set {
                if ((this.id_expField.Equals(value) != true)) {
                    this.id_expField = value;
                    this.RaisePropertyChanged("id_exp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_exp_crit {
            get {
                return this.id_exp_critField;
            }
            set {
                if ((this.id_exp_critField.Equals(value) != true)) {
                    this.id_exp_critField = value;
                    this.RaisePropertyChanged("id_exp_crit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Categories", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class Categories : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CatCrit[] CatCritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_categoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] CatCrit {
            get {
                return this.CatCritField;
            }
            set {
                if ((object.ReferenceEquals(this.CatCritField, value) != true)) {
                    this.CatCritField = value;
                    this.RaisePropertyChanged("CatCrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_category {
            get {
                return this.id_categoryField;
            }
            set {
                if ((this.id_categoryField.Equals(value) != true)) {
                    this.id_categoryField = value;
                    this.RaisePropertyChanged("id_category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_category {
            get {
                return this.name_categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.name_categoryField, value) != true)) {
                    this.name_categoryField = value;
                    this.RaisePropertyChanged("name_category");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpertiseExpert", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class ExpertiseExpert : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Expertises ExpertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Experts ExpertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool end_markingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertise_expertField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Expertises Expertises {
            get {
                return this.ExpertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertisesField, value) != true)) {
                    this.ExpertisesField = value;
                    this.RaisePropertyChanged("Expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Experts Experts {
            get {
                return this.ExpertsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertsField, value) != true)) {
                    this.ExpertsField = value;
                    this.RaisePropertyChanged("Experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool end_marking {
            get {
                return this.end_markingField;
            }
            set {
                if ((this.end_markingField.Equals(value) != true)) {
                    this.end_markingField = value;
                    this.RaisePropertyChanged("end_marking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise_expert {
            get {
                return this.id_expertise_expertField;
            }
            set {
                if ((this.id_expertise_expertField.Equals(value) != true)) {
                    this.id_expertise_expertField = value;
                    this.RaisePropertyChanged("id_expertise_expert");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpertiseMark", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class ExpertiseMark : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Expertises ExpertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Marks MarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertise_markField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_markField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Expertises Expertises {
            get {
                return this.ExpertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertisesField, value) != true)) {
                    this.ExpertisesField = value;
                    this.RaisePropertyChanged("Expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Marks Marks {
            get {
                return this.MarksField;
            }
            set {
                if ((object.ReferenceEquals(this.MarksField, value) != true)) {
                    this.MarksField = value;
                    this.RaisePropertyChanged("Marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise_mark {
            get {
                return this.id_expertise_markField;
            }
            set {
                if ((this.id_expertise_markField.Equals(value) != true)) {
                    this.id_expertise_markField = value;
                    this.RaisePropertyChanged("id_expertise_mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_mark {
            get {
                return this.id_markField;
            }
            set {
                if ((this.id_markField.Equals(value) != true)) {
                    this.id_markField = value;
                    this.RaisePropertyChanged("id_mark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectExpertise", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class ProjectExpertise : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Expertises ExpertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Projects ProjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool acceptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_project_expertiseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Expertises Expertises {
            get {
                return this.ExpertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertisesField, value) != true)) {
                    this.ExpertisesField = value;
                    this.RaisePropertyChanged("Expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Projects Projects {
            get {
                return this.ProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectsField, value) != true)) {
                    this.ProjectsField = value;
                    this.RaisePropertyChanged("Projects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool accept {
            get {
                return this.acceptField;
            }
            set {
                if ((this.acceptField.Equals(value) != true)) {
                    this.acceptField = value;
                    this.RaisePropertyChanged("accept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project_expertise {
            get {
                return this.id_project_expertiseField;
            }
            set {
                if ((this.id_project_expertiseField.Equals(value) != true)) {
                    this.id_project_expertiseField = value;
                    this.RaisePropertyChanged("id_project_expertise");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpertFos", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class ExpertFos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Experts ExpertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.FiledsOfScience FiledsOfScienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expert_fosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_fosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Experts Experts {
            get {
                return this.ExpertsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertsField, value) != true)) {
                    this.ExpertsField = value;
                    this.RaisePropertyChanged("Experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience FiledsOfScience {
            get {
                return this.FiledsOfScienceField;
            }
            set {
                if ((object.ReferenceEquals(this.FiledsOfScienceField, value) != true)) {
                    this.FiledsOfScienceField = value;
                    this.RaisePropertyChanged("FiledsOfScience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert_fos {
            get {
                return this.id_expert_fosField;
            }
            set {
                if ((this.id_expert_fosField.Equals(value) != true)) {
                    this.id_expert_fosField = value;
                    this.RaisePropertyChanged("id_expert_fos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_fos {
            get {
                return this.id_fosField;
            }
            set {
                if ((this.id_fosField.Equals(value) != true)) {
                    this.id_fosField = value;
                    this.RaisePropertyChanged("id_fos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FiledsOfScience", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class FiledsOfScience : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpertFos[] ExpertFosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ProjectFos[] ProjectFosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_fosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_fosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpertFos[] ExpertFos {
            get {
                return this.ExpertFosField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertFosField, value) != true)) {
                    this.ExpertFosField = value;
                    this.RaisePropertyChanged("ExpertFos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ProjectFos[] ProjectFos {
            get {
                return this.ProjectFosField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectFosField, value) != true)) {
                    this.ProjectFosField = value;
                    this.RaisePropertyChanged("ProjectFos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_fos {
            get {
                return this.id_fosField;
            }
            set {
                if ((this.id_fosField.Equals(value) != true)) {
                    this.id_fosField = value;
                    this.RaisePropertyChanged("id_fos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_fos {
            get {
                return this.name_fosField;
            }
            set {
                if ((object.ReferenceEquals(this.name_fosField, value) != true)) {
                    this.name_fosField = value;
                    this.RaisePropertyChanged("name_fos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectFos", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class ProjectFos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.FiledsOfScience FiledsOfScienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Projects ProjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_fosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_project_fosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience FiledsOfScience {
            get {
                return this.FiledsOfScienceField;
            }
            set {
                if ((object.ReferenceEquals(this.FiledsOfScienceField, value) != true)) {
                    this.FiledsOfScienceField = value;
                    this.RaisePropertyChanged("FiledsOfScience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Projects Projects {
            get {
                return this.ProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectsField, value) != true)) {
                    this.ProjectsField = value;
                    this.RaisePropertyChanged("Projects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_fos {
            get {
                return this.id_fosField;
            }
            set {
                if ((this.id_fosField.Equals(value) != true)) {
                    this.id_fosField = value;
                    this.RaisePropertyChanged("id_fos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project_fos {
            get {
                return this.id_project_fosField;
            }
            set {
                if ((this.id_project_fosField.Equals(value) != true)) {
                    this.id_project_fosField = value;
                    this.RaisePropertyChanged("id_project_fos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GRNTI", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class GRNTI : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Projects[] ProjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string code_grntiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_grntiField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Projects[] Projects {
            get {
                return this.ProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectsField, value) != true)) {
                    this.ProjectsField = value;
                    this.RaisePropertyChanged("Projects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string code_grnti {
            get {
                return this.code_grntiField;
            }
            set {
                if ((object.ReferenceEquals(this.code_grntiField, value) != true)) {
                    this.code_grntiField = value;
                    this.RaisePropertyChanged("code_grnti");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_grnti {
            get {
                return this.name_grntiField;
            }
            set {
                if ((object.ReferenceEquals(this.name_grntiField, value) != true)) {
                    this.name_grntiField = value;
                    this.RaisePropertyChanged("name_grnti");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectAuthors", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class ProjectAuthors : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Authors AuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Projects ProjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_proj_authorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Authors Authors {
            get {
                return this.AuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorsField, value) != true)) {
                    this.AuthorsField = value;
                    this.RaisePropertyChanged("Authors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Projects Projects {
            get {
                return this.ProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectsField, value) != true)) {
                    this.ProjectsField = value;
                    this.RaisePropertyChanged("Projects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_author {
            get {
                return this.id_authorField;
            }
            set {
                if ((this.id_authorField.Equals(value) != true)) {
                    this.id_authorField = value;
                    this.RaisePropertyChanged("id_author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_proj {
            get {
                return this.id_projField;
            }
            set {
                if ((this.id_projField.Equals(value) != true)) {
                    this.id_projField = value;
                    this.RaisePropertyChanged("id_proj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_proj_author {
            get {
                return this.id_proj_authorField;
            }
            set {
                if ((this.id_proj_authorField.Equals(value) != true)) {
                    this.id_proj_authorField = value;
                    this.RaisePropertyChanged("id_proj_author");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Authors", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class Authors : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[] ProjectAuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patronymic_authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surname_authorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[] ProjectAuthors {
            get {
                return this.ProjectAuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectAuthorsField, value) != true)) {
                    this.ProjectAuthorsField = value;
                    this.RaisePropertyChanged("ProjectAuthors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_author {
            get {
                return this.id_authorField;
            }
            set {
                if ((this.id_authorField.Equals(value) != true)) {
                    this.id_authorField = value;
                    this.RaisePropertyChanged("id_author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_author {
            get {
                return this.name_authorField;
            }
            set {
                if ((object.ReferenceEquals(this.name_authorField, value) != true)) {
                    this.name_authorField = value;
                    this.RaisePropertyChanged("name_author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patronymic_author {
            get {
                return this.patronymic_authorField;
            }
            set {
                if ((object.ReferenceEquals(this.patronymic_authorField, value) != true)) {
                    this.patronymic_authorField = value;
                    this.RaisePropertyChanged("patronymic_author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname_author {
            get {
                return this.surname_authorField;
            }
            set {
                if ((object.ReferenceEquals(this.surname_authorField, value) != true)) {
                    this.surname_authorField = value;
                    this.RaisePropertyChanged("surname_author");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="myAuthors", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class myAuthors : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patronymic_authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surname_authorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FIO {
            get {
                return this.FIOField;
            }
            set {
                if ((object.ReferenceEquals(this.FIOField, value) != true)) {
                    this.FIOField = value;
                    this.RaisePropertyChanged("FIO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_author {
            get {
                return this.id_authorField;
            }
            set {
                if ((this.id_authorField.Equals(value) != true)) {
                    this.id_authorField = value;
                    this.RaisePropertyChanged("id_author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_author {
            get {
                return this.name_authorField;
            }
            set {
                if ((object.ReferenceEquals(this.name_authorField, value) != true)) {
                    this.name_authorField = value;
                    this.RaisePropertyChanged("name_author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patronymic_author {
            get {
                return this.patronymic_authorField;
            }
            set {
                if ((object.ReferenceEquals(this.patronymic_authorField, value) != true)) {
                    this.patronymic_authorField = value;
                    this.RaisePropertyChanged("patronymic_author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname_author {
            get {
                return this.surname_authorField;
            }
            set {
                if ((object.ReferenceEquals(this.surname_authorField, value) != true)) {
                    this.surname_authorField = value;
                    this.RaisePropertyChanged("surname_author");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpertsWithCountExpertise", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class ExpertsWithCountExpertise : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] ListFOSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contacts_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int countexpertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string degree_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string degree_rank_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool delete_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string job_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string login_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string password_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patronymic_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string post_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rank_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surname_expertField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FIO {
            get {
                return this.FIOField;
            }
            set {
                if ((object.ReferenceEquals(this.FIOField, value) != true)) {
                    this.FIOField = value;
                    this.RaisePropertyChanged("FIO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] ListFOS {
            get {
                return this.ListFOSField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFOSField, value) != true)) {
                    this.ListFOSField = value;
                    this.RaisePropertyChanged("ListFOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contacts_expert {
            get {
                return this.contacts_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.contacts_expertField, value) != true)) {
                    this.contacts_expertField = value;
                    this.RaisePropertyChanged("contacts_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int countexpertise {
            get {
                return this.countexpertiseField;
            }
            set {
                if ((this.countexpertiseField.Equals(value) != true)) {
                    this.countexpertiseField = value;
                    this.RaisePropertyChanged("countexpertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string degree_expert {
            get {
                return this.degree_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.degree_expertField, value) != true)) {
                    this.degree_expertField = value;
                    this.RaisePropertyChanged("degree_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string degree_rank_expert {
            get {
                return this.degree_rank_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.degree_rank_expertField, value) != true)) {
                    this.degree_rank_expertField = value;
                    this.RaisePropertyChanged("degree_rank_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool delete_expert {
            get {
                return this.delete_expertField;
            }
            set {
                if ((this.delete_expertField.Equals(value) != true)) {
                    this.delete_expertField = value;
                    this.RaisePropertyChanged("delete_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string job_expert {
            get {
                return this.job_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.job_expertField, value) != true)) {
                    this.job_expertField = value;
                    this.RaisePropertyChanged("job_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string login_expert {
            get {
                return this.login_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.login_expertField, value) != true)) {
                    this.login_expertField = value;
                    this.RaisePropertyChanged("login_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_expert {
            get {
                return this.name_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.name_expertField, value) != true)) {
                    this.name_expertField = value;
                    this.RaisePropertyChanged("name_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password_expert {
            get {
                return this.password_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.password_expertField, value) != true)) {
                    this.password_expertField = value;
                    this.RaisePropertyChanged("password_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patronymic_expert {
            get {
                return this.patronymic_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.patronymic_expertField, value) != true)) {
                    this.patronymic_expertField = value;
                    this.RaisePropertyChanged("patronymic_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string post_expert {
            get {
                return this.post_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.post_expertField, value) != true)) {
                    this.post_expertField = value;
                    this.RaisePropertyChanged("post_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rank_expert {
            get {
                return this.rank_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.rank_expertField, value) != true)) {
                    this.rank_expertField = value;
                    this.RaisePropertyChanged("rank_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname_expert {
            get {
                return this.surname_expertField;
            }
            set {
                if ((object.ReferenceEquals(this.surname_expertField, value) != true)) {
                    this.surname_expertField = value;
                    this.RaisePropertyChanged("surname_expert");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="myProject", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class myProject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime begin_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string email_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime end_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool expertisaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string grnti_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lead_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string money_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime begin_project {
            get {
                return this.begin_projectField;
            }
            set {
                if ((this.begin_projectField.Equals(value) != true)) {
                    this.begin_projectField = value;
                    this.RaisePropertyChanged("begin_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_expertise {
            get {
                return this.date_expertiseField;
            }
            set {
                if ((this.date_expertiseField.Equals(value) != true)) {
                    this.date_expertiseField = value;
                    this.RaisePropertyChanged("date_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email_project {
            get {
                return this.email_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.email_projectField, value) != true)) {
                    this.email_projectField = value;
                    this.RaisePropertyChanged("email_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end_project {
            get {
                return this.end_projectField;
            }
            set {
                if ((this.end_projectField.Equals(value) != true)) {
                    this.end_projectField = value;
                    this.RaisePropertyChanged("end_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool expertisa {
            get {
                return this.expertisaField;
            }
            set {
                if ((this.expertisaField.Equals(value) != true)) {
                    this.expertisaField = value;
                    this.RaisePropertyChanged("expertisa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fos {
            get {
                return this.fosField;
            }
            set {
                if ((object.ReferenceEquals(this.fosField, value) != true)) {
                    this.fosField = value;
                    this.RaisePropertyChanged("fos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string grnti_project {
            get {
                return this.grnti_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.grnti_projectField, value) != true)) {
                    this.grnti_projectField = value;
                    this.RaisePropertyChanged("grnti_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lead_project {
            get {
                return this.lead_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.lead_projectField, value) != true)) {
                    this.lead_projectField = value;
                    this.RaisePropertyChanged("lead_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string money_project {
            get {
                return this.money_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.money_projectField, value) != true)) {
                    this.money_projectField = value;
                    this.RaisePropertyChanged("money_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_expertise {
            get {
                return this.name_expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.name_expertiseField, value) != true)) {
                    this.name_expertiseField = value;
                    this.RaisePropertyChanged("name_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_project {
            get {
                return this.name_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.name_projectField, value) != true)) {
                    this.name_projectField = value;
                    this.RaisePropertyChanged("name_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="myCurrentexpertises", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class myCurrentexpertises : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ListExpertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int count_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool end_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ListExperts {
            get {
                return this.ListExpertsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListExpertsField, value) != true)) {
                    this.ListExpertsField = value;
                    this.RaisePropertyChanged("ListExperts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count_project {
            get {
                return this.count_projectField;
            }
            set {
                if ((this.count_projectField.Equals(value) != true)) {
                    this.count_projectField = value;
                    this.RaisePropertyChanged("count_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_expertise {
            get {
                return this.date_expertiseField;
            }
            set {
                if ((this.date_expertiseField.Equals(value) != true)) {
                    this.date_expertiseField = value;
                    this.RaisePropertyChanged("date_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool end_expertise {
            get {
                return this.end_expertiseField;
            }
            set {
                if ((this.end_expertiseField.Equals(value) != true)) {
                    this.end_expertiseField = value;
                    this.RaisePropertyChanged("end_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_expertise {
            get {
                return this.name_expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.name_expertiseField, value) != true)) {
                    this.name_expertiseField = value;
                    this.RaisePropertyChanged("name_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="myExpertiseForCard", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class myExpertiseForCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CatCrit[] ListCatCritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Categories[] ListCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Criterions[] ListCriterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Experts[] ListExpertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.myProjectForExpertiseCard[] ListProjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MarkIsCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool begin_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int count_project_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime end_date_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fos_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] ListCatCrit {
            get {
                return this.ListCatCritField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCatCritField, value) != true)) {
                    this.ListCatCritField = value;
                    this.RaisePropertyChanged("ListCatCrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Categories[] ListCategories {
            get {
                return this.ListCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCategoriesField, value) != true)) {
                    this.ListCategoriesField = value;
                    this.RaisePropertyChanged("ListCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Criterions[] ListCriterions {
            get {
                return this.ListCriterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCriterionsField, value) != true)) {
                    this.ListCriterionsField = value;
                    this.RaisePropertyChanged("ListCriterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Experts[] ListExperts {
            get {
                return this.ListExpertsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListExpertsField, value) != true)) {
                    this.ListExpertsField = value;
                    this.RaisePropertyChanged("ListExperts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.myProjectForExpertiseCard[] ListProjects {
            get {
                return this.ListProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListProjectsField, value) != true)) {
                    this.ListProjectsField = value;
                    this.RaisePropertyChanged("ListProjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MarkIsCompleted {
            get {
                return this.MarkIsCompletedField;
            }
            set {
                if ((this.MarkIsCompletedField.Equals(value) != true)) {
                    this.MarkIsCompletedField = value;
                    this.RaisePropertyChanged("MarkIsCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool begin_expertise {
            get {
                return this.begin_expertiseField;
            }
            set {
                if ((this.begin_expertiseField.Equals(value) != true)) {
                    this.begin_expertiseField = value;
                    this.RaisePropertyChanged("begin_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count_project_expertise {
            get {
                return this.count_project_expertiseField;
            }
            set {
                if ((this.count_project_expertiseField.Equals(value) != true)) {
                    this.count_project_expertiseField = value;
                    this.RaisePropertyChanged("count_project_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_expertise {
            get {
                return this.date_expertiseField;
            }
            set {
                if ((this.date_expertiseField.Equals(value) != true)) {
                    this.date_expertiseField = value;
                    this.RaisePropertyChanged("date_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end_date_expertise {
            get {
                return this.end_date_expertiseField;
            }
            set {
                if ((this.end_date_expertiseField.Equals(value) != true)) {
                    this.end_date_expertiseField = value;
                    this.RaisePropertyChanged("end_date_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fos_expertise {
            get {
                return this.fos_expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.fos_expertiseField, value) != true)) {
                    this.fos_expertiseField = value;
                    this.RaisePropertyChanged("fos_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_expertise {
            get {
                return this.name_expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.name_expertiseField, value) != true)) {
                    this.name_expertiseField = value;
                    this.RaisePropertyChanged("name_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="myProjectForExpertiseCard", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class myProjectForExpertiseCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lead_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string organizationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingField, value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lead_project {
            get {
                return this.lead_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.lead_projectField, value) != true)) {
                    this.lead_projectField = value;
                    this.RaisePropertyChanged("lead_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_project {
            get {
                return this.name_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.name_projectField, value) != true)) {
                    this.name_projectField = value;
                    this.RaisePropertyChanged("name_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string organization {
            get {
                return this.organizationField;
            }
            set {
                if ((object.ReferenceEquals(this.organizationField, value) != true)) {
                    this.organizationField = value;
                    this.RaisePropertyChanged("organization");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="myCompletedexpertises", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class myCompletedexpertises : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ListExpertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.myCompletedexpertisesProject[] ListProjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime end_date_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ListExperts {
            get {
                return this.ListExpertsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListExpertsField, value) != true)) {
                    this.ListExpertsField = value;
                    this.RaisePropertyChanged("ListExperts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.myCompletedexpertisesProject[] ListProject {
            get {
                return this.ListProjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ListProjectField, value) != true)) {
                    this.ListProjectField = value;
                    this.RaisePropertyChanged("ListProject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_expertise {
            get {
                return this.date_expertiseField;
            }
            set {
                if ((this.date_expertiseField.Equals(value) != true)) {
                    this.date_expertiseField = value;
                    this.RaisePropertyChanged("date_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end_date_expertise {
            get {
                return this.end_date_expertiseField;
            }
            set {
                if ((this.end_date_expertiseField.Equals(value) != true)) {
                    this.end_date_expertiseField = value;
                    this.RaisePropertyChanged("end_date_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_expertise {
            get {
                return this.name_expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.name_expertiseField, value) != true)) {
                    this.name_expertiseField = value;
                    this.RaisePropertyChanged("name_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="myCompletedexpertisesProject", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class myCompletedexpertisesProject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime begin_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool delete_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string email_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime end_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string grnti_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string is_acceptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lead_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string money_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_projectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime begin_project {
            get {
                return this.begin_projectField;
            }
            set {
                if ((this.begin_projectField.Equals(value) != true)) {
                    this.begin_projectField = value;
                    this.RaisePropertyChanged("begin_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool delete_project {
            get {
                return this.delete_projectField;
            }
            set {
                if ((this.delete_projectField.Equals(value) != true)) {
                    this.delete_projectField = value;
                    this.RaisePropertyChanged("delete_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email_project {
            get {
                return this.email_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.email_projectField, value) != true)) {
                    this.email_projectField = value;
                    this.RaisePropertyChanged("email_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end_project {
            get {
                return this.end_projectField;
            }
            set {
                if ((this.end_projectField.Equals(value) != true)) {
                    this.end_projectField = value;
                    this.RaisePropertyChanged("end_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string grnti_project {
            get {
                return this.grnti_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.grnti_projectField, value) != true)) {
                    this.grnti_projectField = value;
                    this.RaisePropertyChanged("grnti_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string is_accept {
            get {
                return this.is_acceptField;
            }
            set {
                if ((object.ReferenceEquals(this.is_acceptField, value) != true)) {
                    this.is_acceptField = value;
                    this.RaisePropertyChanged("is_accept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lead_project {
            get {
                return this.lead_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.lead_projectField, value) != true)) {
                    this.lead_projectField = value;
                    this.RaisePropertyChanged("lead_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string money_project {
            get {
                return this.money_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.money_projectField, value) != true)) {
                    this.money_projectField = value;
                    this.RaisePropertyChanged("money_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_project {
            get {
                return this.name_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.name_projectField, value) != true)) {
                    this.name_projectField = value;
                    this.RaisePropertyChanged("name_project");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TablesForEditExpertise", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class TablesForEditExpertise : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Expertises ExpertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CatCrit[] lCatCritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Categories[] lCatigoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CritValues[] lCritValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Criterions[] lCriterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpCrit[] lExpCritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpertFos[] lExpertFosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] lExpertiseExpertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Experts[] lExpertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] lFOSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] lProjectExpertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ProjectFos[] lProjectFosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Projects[] lProjectsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Err {
            get {
                return this.ErrField;
            }
            set {
                if ((this.ErrField.Equals(value) != true)) {
                    this.ErrField = value;
                    this.RaisePropertyChanged("Err");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Expertises Expertise {
            get {
                return this.ExpertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertiseField, value) != true)) {
                    this.ExpertiseField = value;
                    this.RaisePropertyChanged("Expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] lCatCrit {
            get {
                return this.lCatCritField;
            }
            set {
                if ((object.ReferenceEquals(this.lCatCritField, value) != true)) {
                    this.lCatCritField = value;
                    this.RaisePropertyChanged("lCatCrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Categories[] lCatigories {
            get {
                return this.lCatigoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.lCatigoriesField, value) != true)) {
                    this.lCatigoriesField = value;
                    this.RaisePropertyChanged("lCatigories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CritValues[] lCritValues {
            get {
                return this.lCritValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.lCritValuesField, value) != true)) {
                    this.lCritValuesField = value;
                    this.RaisePropertyChanged("lCritValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Criterions[] lCriterions {
            get {
                return this.lCriterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.lCriterionsField, value) != true)) {
                    this.lCriterionsField = value;
                    this.RaisePropertyChanged("lCriterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpCrit[] lExpCrit {
            get {
                return this.lExpCritField;
            }
            set {
                if ((object.ReferenceEquals(this.lExpCritField, value) != true)) {
                    this.lExpCritField = value;
                    this.RaisePropertyChanged("lExpCrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpertFos[] lExpertFos {
            get {
                return this.lExpertFosField;
            }
            set {
                if ((object.ReferenceEquals(this.lExpertFosField, value) != true)) {
                    this.lExpertFosField = value;
                    this.RaisePropertyChanged("lExpertFos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] lExpertiseExpert {
            get {
                return this.lExpertiseExpertField;
            }
            set {
                if ((object.ReferenceEquals(this.lExpertiseExpertField, value) != true)) {
                    this.lExpertiseExpertField = value;
                    this.RaisePropertyChanged("lExpertiseExpert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Experts[] lExperts {
            get {
                return this.lExpertsField;
            }
            set {
                if ((object.ReferenceEquals(this.lExpertsField, value) != true)) {
                    this.lExpertsField = value;
                    this.RaisePropertyChanged("lExperts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] lFOS {
            get {
                return this.lFOSField;
            }
            set {
                if ((object.ReferenceEquals(this.lFOSField, value) != true)) {
                    this.lFOSField = value;
                    this.RaisePropertyChanged("lFOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] lProjectExpertise {
            get {
                return this.lProjectExpertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.lProjectExpertiseField, value) != true)) {
                    this.lProjectExpertiseField = value;
                    this.RaisePropertyChanged("lProjectExpertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ProjectFos[] lProjectFos {
            get {
                return this.lProjectFosField;
            }
            set {
                if ((object.ReferenceEquals(this.lProjectFosField, value) != true)) {
                    this.lProjectFosField = value;
                    this.RaisePropertyChanged("lProjectFos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Projects[] lProjects {
            get {
                return this.lProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.lProjectsField, value) != true)) {
                    this.lProjectsField = value;
                    this.RaisePropertyChanged("lProjects");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TablesForExpertise", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class TablesForExpertise : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CatCrit[] lCatCritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Categories[] lCatigoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.CritValues[] lCritValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Criterions[] lCriterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ExpertFos[] lExpertFosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Experts[] lExpertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] lFOSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.ProjectFos[] lProjectFosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpertiseWPFApplication.ServiceReference1.Projects[] lProjectsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Err {
            get {
                return this.ErrField;
            }
            set {
                if ((this.ErrField.Equals(value) != true)) {
                    this.ErrField = value;
                    this.RaisePropertyChanged("Err");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] lCatCrit {
            get {
                return this.lCatCritField;
            }
            set {
                if ((object.ReferenceEquals(this.lCatCritField, value) != true)) {
                    this.lCatCritField = value;
                    this.RaisePropertyChanged("lCatCrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Categories[] lCatigories {
            get {
                return this.lCatigoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.lCatigoriesField, value) != true)) {
                    this.lCatigoriesField = value;
                    this.RaisePropertyChanged("lCatigories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.CritValues[] lCritValues {
            get {
                return this.lCritValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.lCritValuesField, value) != true)) {
                    this.lCritValuesField = value;
                    this.RaisePropertyChanged("lCritValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Criterions[] lCriterions {
            get {
                return this.lCriterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.lCriterionsField, value) != true)) {
                    this.lCriterionsField = value;
                    this.RaisePropertyChanged("lCriterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ExpertFos[] lExpertFos {
            get {
                return this.lExpertFosField;
            }
            set {
                if ((object.ReferenceEquals(this.lExpertFosField, value) != true)) {
                    this.lExpertFosField = value;
                    this.RaisePropertyChanged("lExpertFos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Experts[] lExperts {
            get {
                return this.lExpertsField;
            }
            set {
                if ((object.ReferenceEquals(this.lExpertsField, value) != true)) {
                    this.lExpertsField = value;
                    this.RaisePropertyChanged("lExperts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] lFOS {
            get {
                return this.lFOSField;
            }
            set {
                if ((object.ReferenceEquals(this.lFOSField, value) != true)) {
                    this.lFOSField = value;
                    this.RaisePropertyChanged("lFOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.ProjectFos[] lProjectFos {
            get {
                return this.lProjectFosField;
            }
            set {
                if ((object.ReferenceEquals(this.lProjectFosField, value) != true)) {
                    this.lProjectFosField = value;
                    this.RaisePropertyChanged("lProjectFos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpertiseWPFApplication.ServiceReference1.Projects[] lProjects {
            get {
                return this.lProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.lProjectsField, value) != true)) {
                    this.lProjectsField = value;
                    this.RaisePropertyChanged("lProjects");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="myRaitinfExpert", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class myRaitinfExpert : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_critField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string raiting_critField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_crit {
            get {
                return this.name_critField;
            }
            set {
                if ((object.ReferenceEquals(this.name_critField, value) != true)) {
                    this.name_critField = value;
                    this.RaisePropertyChanged("name_crit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string raiting_crit {
            get {
                return this.raiting_critField;
            }
            set {
                if ((object.ReferenceEquals(this.raiting_critField, value) != true)) {
                    this.raiting_critField = value;
                    this.RaisePropertyChanged("raiting_crit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Expertise_Expert", Namespace="http://schemas.datacontract.org/2004/07/ExpertiseWCFService")]
    [System.SerializableAttribute()]
    public partial class Expertise_Expert : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_fosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string status_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] victory_projectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_expertise {
            get {
                return this.date_expertiseField;
            }
            set {
                if ((this.date_expertiseField.Equals(value) != true)) {
                    this.date_expertiseField = value;
                    this.RaisePropertyChanged("date_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_expertise {
            get {
                return this.name_expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.name_expertiseField, value) != true)) {
                    this.name_expertiseField = value;
                    this.RaisePropertyChanged("name_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_fos {
            get {
                return this.name_fosField;
            }
            set {
                if ((object.ReferenceEquals(this.name_fosField, value) != true)) {
                    this.name_fosField = value;
                    this.RaisePropertyChanged("name_fos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status_expertise {
            get {
                return this.status_expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.status_expertiseField, value) != true)) {
                    this.status_expertiseField = value;
                    this.RaisePropertyChanged("status_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] victory_project {
            get {
                return this.victory_projectField;
            }
            set {
                if ((object.ReferenceEquals(this.victory_projectField, value) != true)) {
                    this.victory_projectField = value;
                    this.RaisePropertyChanged("victory_project");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ExpertiseWPFApplication.ServiceReference1.CompositeType GetDataUsingDataContract(ExpertiseWPFApplication.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.IAsyncResult BeginGetDataUsingDataContract(ExpertiseWPFApplication.ServiceReference1.CompositeType composite, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExpertiseExaminationTablesByID", ReplyAction="http://tempuri.org/IService1/GetExpertiseExaminationTablesByIDResponse")]
        ExpertiseWPFApplication.ServiceReference1.myExpertiseExaminationTables GetExpertiseExaminationTablesByID(int id_expertise, int id_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetExpertiseExaminationTablesByID", ReplyAction="http://tempuri.org/IService1/GetExpertiseExaminationTablesByIDResponse")]
        System.IAsyncResult BeginGetExpertiseExaminationTablesByID(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.myExpertiseExaminationTables EndGetExpertiseExaminationTablesByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewCritCompare", ReplyAction="http://tempuri.org/IService1/AddNewCritCompareResponse")]
        bool AddNewCritCompare(ExpertiseWPFApplication.ServiceReference1.CritCompare[] arrCompare);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewCritCompare", ReplyAction="http://tempuri.org/IService1/AddNewCritCompareResponse")]
        System.IAsyncResult BeginAddNewCritCompare(ExpertiseWPFApplication.ServiceReference1.CritCompare[] arrCompare, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewCritCompare(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewMark", ReplyAction="http://tempuri.org/IService1/AddNewMarkResponse")]
        bool AddNewMark(int id_expertise, ExpertiseWPFApplication.ServiceReference1.Marks[] arrMarks);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewMark", ReplyAction="http://tempuri.org/IService1/AddNewMarkResponse")]
        System.IAsyncResult BeginAddNewMark(int id_expertise, ExpertiseWPFApplication.ServiceReference1.Marks[] arrMarks, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewMark(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditExpertiseExpertStatus", ReplyAction="http://tempuri.org/IService1/EditExpertiseExpertStatusResponse")]
        bool EditExpertiseExpertStatus(int id_expertise, int id_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditExpertiseExpertStatus", ReplyAction="http://tempuri.org/IService1/EditExpertiseExpertStatusResponse")]
        System.IAsyncResult BeginEditExpertiseExpertStatus(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState);
        
        bool EndEditExpertiseExpertStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditExpertiseStatusToComplete", ReplyAction="http://tempuri.org/IService1/EditExpertiseStatusToCompleteResponse")]
        bool EditExpertiseStatusToComplete(int id_expertise);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditExpertiseStatusToComplete", ReplyAction="http://tempuri.org/IService1/EditExpertiseStatusToCompleteResponse")]
        System.IAsyncResult BeginEditExpertiseStatusToComplete(int id_expertise, System.AsyncCallback callback, object asyncState);
        
        bool EndEditExpertiseStatusToComplete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditExpertiseStatusToStart", ReplyAction="http://tempuri.org/IService1/EditExpertiseStatusToStartResponse")]
        bool EditExpertiseStatusToStart(int id_expertise);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditExpertiseStatusToStart", ReplyAction="http://tempuri.org/IService1/EditExpertiseStatusToStartResponse")]
        System.IAsyncResult BeginEditExpertiseStatusToStart(int id_expertise, System.AsyncCallback callback, object asyncState);
        
        bool EndEditExpertiseStatusToStart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAuthors", ReplyAction="http://tempuri.org/IService1/GetListAuthorsResponse")]
        ExpertiseWPFApplication.ServiceReference1.myAuthors[] GetListAuthors();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAuthors", ReplyAction="http://tempuri.org/IService1/GetListAuthorsResponse")]
        System.IAsyncResult BeginGetListAuthors(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.myAuthors[] EndGetListAuthors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAuthorsForProject", ReplyAction="http://tempuri.org/IService1/GetListAuthorsForProjectResponse")]
        ExpertiseWPFApplication.ServiceReference1.myAuthors[] GetListAuthorsForProject(int id_project);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAuthorsForProject", ReplyAction="http://tempuri.org/IService1/GetListAuthorsForProjectResponse")]
        System.IAsyncResult BeginGetListAuthorsForProject(int id_project, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.myAuthors[] EndGetListAuthorsForProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListExpertForProject", ReplyAction="http://tempuri.org/IService1/GetListExpertForProjectResponse")]
        ExpertiseWPFApplication.ServiceReference1.Experts[] GetListExpertForProject(int id_project);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListExpertForProject", ReplyAction="http://tempuri.org/IService1/GetListExpertForProjectResponse")]
        System.IAsyncResult BeginGetListExpertForProject(int id_project, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Experts[] EndGetListExpertForProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListCatCrit", ReplyAction="http://tempuri.org/IService1/GetListCatCritResponse")]
        ExpertiseWPFApplication.ServiceReference1.CatCrit[] GetListCatCrit();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListCatCrit", ReplyAction="http://tempuri.org/IService1/GetListCatCritResponse")]
        System.IAsyncResult BeginGetListCatCrit(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.CatCrit[] EndGetListCatCrit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListCategories", ReplyAction="http://tempuri.org/IService1/GetListCategoriesResponse")]
        ExpertiseWPFApplication.ServiceReference1.Categories[] GetListCategories();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListCategories", ReplyAction="http://tempuri.org/IService1/GetListCategoriesResponse")]
        System.IAsyncResult BeginGetListCategories(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Categories[] EndGetListCategories(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListCriterions", ReplyAction="http://tempuri.org/IService1/GetListCriterionsResponse")]
        ExpertiseWPFApplication.ServiceReference1.Criterions[] GetListCriterions(int id_category);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListCriterions", ReplyAction="http://tempuri.org/IService1/GetListCriterionsResponse")]
        System.IAsyncResult BeginGetListCriterions(int id_category, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Criterions[] EndGetListCriterions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListCritValues", ReplyAction="http://tempuri.org/IService1/GetListCritValuesResponse")]
        ExpertiseWPFApplication.ServiceReference1.CritValues[] GetListCritValues(int id_crit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListCritValues", ReplyAction="http://tempuri.org/IService1/GetListCritValuesResponse")]
        System.IAsyncResult BeginGetListCritValues(int id_crit, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.CritValues[] EndGetListCritValues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListGRNTI", ReplyAction="http://tempuri.org/IService1/GetListGRNTIResponse")]
        ExpertiseWPFApplication.ServiceReference1.GRNTI[] GetListGRNTI();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListGRNTI", ReplyAction="http://tempuri.org/IService1/GetListGRNTIResponse")]
        System.IAsyncResult BeginGetListGRNTI(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.GRNTI[] EndGetListGRNTI(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListExperts", ReplyAction="http://tempuri.org/IService1/GetListExpertsResponse")]
        ExpertiseWPFApplication.ServiceReference1.Experts[] GetListExperts();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListExperts", ReplyAction="http://tempuri.org/IService1/GetListExpertsResponse")]
        System.IAsyncResult BeginGetListExperts(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Experts[] EndGetListExperts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListExpertsWithCountExpertise", ReplyAction="http://tempuri.org/IService1/GetListExpertsWithCountExpertiseResponse")]
        ExpertiseWPFApplication.ServiceReference1.ExpertsWithCountExpertise[] GetListExpertsWithCountExpertise();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListExpertsWithCountExpertise", ReplyAction="http://tempuri.org/IService1/GetListExpertsWithCountExpertiseResponse")]
        System.IAsyncResult BeginGetListExpertsWithCountExpertise(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.ExpertsWithCountExpertise[] EndGetListExpertsWithCountExpertise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListFOS", ReplyAction="http://tempuri.org/IService1/GetListFOSResponse")]
        ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] GetListFOS();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListFOS", ReplyAction="http://tempuri.org/IService1/GetListFOSResponse")]
        System.IAsyncResult BeginGetListFOS(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] EndGetListFOS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListProjects", ReplyAction="http://tempuri.org/IService1/GetListProjectsResponse")]
        ExpertiseWPFApplication.ServiceReference1.myProject[] GetListProjects();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListProjects", ReplyAction="http://tempuri.org/IService1/GetListProjectsResponse")]
        System.IAsyncResult BeginGetListProjects(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.myProject[] EndGetListProjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListProjectFos", ReplyAction="http://tempuri.org/IService1/GetListProjectFosResponse")]
        ExpertiseWPFApplication.ServiceReference1.ProjectFos[] GetListProjectFos();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListProjectFos", ReplyAction="http://tempuri.org/IService1/GetListProjectFosResponse")]
        System.IAsyncResult BeginGetListProjectFos(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.ProjectFos[] EndGetListProjectFos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListExpertisesForExpert", ReplyAction="http://tempuri.org/IService1/GetListExpertisesForExpertResponse")]
        ExpertiseWPFApplication.ServiceReference1.Expertises[] GetListExpertisesForExpert(int id_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListExpertisesForExpert", ReplyAction="http://tempuri.org/IService1/GetListExpertisesForExpertResponse")]
        System.IAsyncResult BeginGetListExpertisesForExpert(int id_expert, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Expertises[] EndGetListExpertisesForExpert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListCurrentExpertises", ReplyAction="http://tempuri.org/IService1/GetListCurrentExpertisesResponse")]
        ExpertiseWPFApplication.ServiceReference1.myCurrentexpertises[] GetListCurrentExpertises();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListCurrentExpertises", ReplyAction="http://tempuri.org/IService1/GetListCurrentExpertisesResponse")]
        System.IAsyncResult BeginGetListCurrentExpertises(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.myCurrentexpertises[] EndGetListCurrentExpertises(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllAuthors", ReplyAction="http://tempuri.org/IService1/GetListAllAuthorsResponse")]
        ExpertiseWPFApplication.ServiceReference1.Authors[] GetListAllAuthors();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllAuthors", ReplyAction="http://tempuri.org/IService1/GetListAllAuthorsResponse")]
        System.IAsyncResult BeginGetListAllAuthors(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Authors[] EndGetListAllAuthors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllCatCrit", ReplyAction="http://tempuri.org/IService1/GetListAllCatCritResponse")]
        ExpertiseWPFApplication.ServiceReference1.CatCrit[] GetListAllCatCrit();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllCatCrit", ReplyAction="http://tempuri.org/IService1/GetListAllCatCritResponse")]
        System.IAsyncResult BeginGetListAllCatCrit(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.CatCrit[] EndGetListAllCatCrit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllCategories", ReplyAction="http://tempuri.org/IService1/GetListAllCategoriesResponse")]
        ExpertiseWPFApplication.ServiceReference1.Categories[] GetListAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllCategories", ReplyAction="http://tempuri.org/IService1/GetListAllCategoriesResponse")]
        System.IAsyncResult BeginGetListAllCategories(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Categories[] EndGetListAllCategories(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllCriterions", ReplyAction="http://tempuri.org/IService1/GetListAllCriterionsResponse")]
        ExpertiseWPFApplication.ServiceReference1.Criterions[] GetListAllCriterions();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllCriterions", ReplyAction="http://tempuri.org/IService1/GetListAllCriterionsResponse")]
        System.IAsyncResult BeginGetListAllCriterions(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Criterions[] EndGetListAllCriterions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllCritValues", ReplyAction="http://tempuri.org/IService1/GetListAllCritValuesResponse")]
        ExpertiseWPFApplication.ServiceReference1.CritValues[] GetListAllCritValues();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllCritValues", ReplyAction="http://tempuri.org/IService1/GetListAllCritValuesResponse")]
        System.IAsyncResult BeginGetListAllCritValues(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.CritValues[] EndGetListAllCritValues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllExpCrit", ReplyAction="http://tempuri.org/IService1/GetListAllExpCritResponse")]
        ExpertiseWPFApplication.ServiceReference1.ExpCrit[] GetListAllExpCrit();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllExpCrit", ReplyAction="http://tempuri.org/IService1/GetListAllExpCritResponse")]
        System.IAsyncResult BeginGetListAllExpCrit(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.ExpCrit[] EndGetListAllExpCrit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllExpertFos", ReplyAction="http://tempuri.org/IService1/GetListAllExpertFosResponse")]
        ExpertiseWPFApplication.ServiceReference1.ExpertFos[] GetListAllExpertFos();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllExpertFos", ReplyAction="http://tempuri.org/IService1/GetListAllExpertFosResponse")]
        System.IAsyncResult BeginGetListAllExpertFos(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.ExpertFos[] EndGetListAllExpertFos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllExpertiseExpert", ReplyAction="http://tempuri.org/IService1/GetListAllExpertiseExpertResponse")]
        ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] GetListAllExpertiseExpert();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllExpertiseExpert", ReplyAction="http://tempuri.org/IService1/GetListAllExpertiseExpertResponse")]
        System.IAsyncResult BeginGetListAllExpertiseExpert(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] EndGetListAllExpertiseExpert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllExpertiseMark", ReplyAction="http://tempuri.org/IService1/GetListAllExpertiseMarkResponse")]
        ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[] GetListAllExpertiseMark();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllExpertiseMark", ReplyAction="http://tempuri.org/IService1/GetListAllExpertiseMarkResponse")]
        System.IAsyncResult BeginGetListAllExpertiseMark(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[] EndGetListAllExpertiseMark(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllExpertises", ReplyAction="http://tempuri.org/IService1/GetListAllExpertisesResponse")]
        ExpertiseWPFApplication.ServiceReference1.Expertises[] GetListAllExpertises();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllExpertises", ReplyAction="http://tempuri.org/IService1/GetListAllExpertisesResponse")]
        System.IAsyncResult BeginGetListAllExpertises(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Expertises[] EndGetListAllExpertises(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllExperts", ReplyAction="http://tempuri.org/IService1/GetListAllExpertsResponse")]
        ExpertiseWPFApplication.ServiceReference1.Experts[] GetListAllExperts();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllExperts", ReplyAction="http://tempuri.org/IService1/GetListAllExpertsResponse")]
        System.IAsyncResult BeginGetListAllExperts(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Experts[] EndGetListAllExperts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllFiledsOfScience", ReplyAction="http://tempuri.org/IService1/GetListAllFiledsOfScienceResponse")]
        ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] GetListAllFiledsOfScience();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllFiledsOfScience", ReplyAction="http://tempuri.org/IService1/GetListAllFiledsOfScienceResponse")]
        System.IAsyncResult BeginGetListAllFiledsOfScience(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] EndGetListAllFiledsOfScience(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllGRNTI", ReplyAction="http://tempuri.org/IService1/GetListAllGRNTIResponse")]
        ExpertiseWPFApplication.ServiceReference1.GRNTI[] GetListAllGRNTI();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllGRNTI", ReplyAction="http://tempuri.org/IService1/GetListAllGRNTIResponse")]
        System.IAsyncResult BeginGetListAllGRNTI(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.GRNTI[] EndGetListAllGRNTI(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllMarks", ReplyAction="http://tempuri.org/IService1/GetListAllMarksResponse")]
        ExpertiseWPFApplication.ServiceReference1.Marks[] GetListAllMarks();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllMarks", ReplyAction="http://tempuri.org/IService1/GetListAllMarksResponse")]
        System.IAsyncResult BeginGetListAllMarks(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Marks[] EndGetListAllMarks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllProjectAuthors", ReplyAction="http://tempuri.org/IService1/GetListAllProjectAuthorsResponse")]
        ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[] GetListAllProjectAuthors();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllProjectAuthors", ReplyAction="http://tempuri.org/IService1/GetListAllProjectAuthorsResponse")]
        System.IAsyncResult BeginGetListAllProjectAuthors(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[] EndGetListAllProjectAuthors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllProjectExpertise", ReplyAction="http://tempuri.org/IService1/GetListAllProjectExpertiseResponse")]
        ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] GetListAllProjectExpertise();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllProjectExpertise", ReplyAction="http://tempuri.org/IService1/GetListAllProjectExpertiseResponse")]
        System.IAsyncResult BeginGetListAllProjectExpertise(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] EndGetListAllProjectExpertise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllProjectFos", ReplyAction="http://tempuri.org/IService1/GetListAllProjectFosResponse")]
        ExpertiseWPFApplication.ServiceReference1.ProjectFos[] GetListAllProjectFos();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllProjectFos", ReplyAction="http://tempuri.org/IService1/GetListAllProjectFosResponse")]
        System.IAsyncResult BeginGetListAllProjectFos(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.ProjectFos[] EndGetListAllProjectFos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListAllProjects", ReplyAction="http://tempuri.org/IService1/GetListAllProjectsResponse")]
        ExpertiseWPFApplication.ServiceReference1.Projects[] GetListAllProjects();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListAllProjects", ReplyAction="http://tempuri.org/IService1/GetListAllProjectsResponse")]
        System.IAsyncResult BeginGetListAllProjects(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Projects[] EndGetListAllProjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewAuthors", ReplyAction="http://tempuri.org/IService1/AddNewAuthorsResponse")]
        bool AddNewAuthors(string surname_author, string name_author, string patronymic_author);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewAuthors", ReplyAction="http://tempuri.org/IService1/AddNewAuthorsResponse")]
        System.IAsyncResult BeginAddNewAuthors(string surname_author, string name_author, string patronymic_author, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewAuthors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewCatCrit", ReplyAction="http://tempuri.org/IService1/AddNewCatCritResponse")]
        bool AddNewCatCrit(int id_cat, int id_crit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewCatCrit", ReplyAction="http://tempuri.org/IService1/AddNewCatCritResponse")]
        System.IAsyncResult BeginAddNewCatCrit(int id_cat, int id_crit, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewCatCrit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewCategories", ReplyAction="http://tempuri.org/IService1/AddNewCategoriesResponse")]
        bool AddNewCategories(string name_category);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewCategories", ReplyAction="http://tempuri.org/IService1/AddNewCategoriesResponse")]
        System.IAsyncResult BeginAddNewCategories(string name_category, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewCategories(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewCriterions", ReplyAction="http://tempuri.org/IService1/AddNewCriterionsResponse")]
        bool AddNewCriterions(string name_crit, bool qualit_crit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewCriterions", ReplyAction="http://tempuri.org/IService1/AddNewCriterionsResponse")]
        System.IAsyncResult BeginAddNewCriterions(string name_crit, bool qualit_crit, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewCriterions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewCritValues", ReplyAction="http://tempuri.org/IService1/AddNewCritValuesResponse")]
        bool AddNewCritValues(int id_crit, string valid_values);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewCritValues", ReplyAction="http://tempuri.org/IService1/AddNewCritValuesResponse")]
        System.IAsyncResult BeginAddNewCritValues(int id_crit, string valid_values, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewCritValues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewExpCrit", ReplyAction="http://tempuri.org/IService1/AddNewExpCritResponse")]
        bool AddNewExpCrit(int id_exp, int id_crit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewExpCrit", ReplyAction="http://tempuri.org/IService1/AddNewExpCritResponse")]
        System.IAsyncResult BeginAddNewExpCrit(int id_exp, int id_crit, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewExpCrit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewExpertFos", ReplyAction="http://tempuri.org/IService1/AddNewExpertFosResponse")]
        bool AddNewExpertFos(int id_expert, int id_fos);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewExpertFos", ReplyAction="http://tempuri.org/IService1/AddNewExpertFosResponse")]
        System.IAsyncResult BeginAddNewExpertFos(int id_expert, int id_fos, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewExpertFos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewExpertiseExpert", ReplyAction="http://tempuri.org/IService1/AddNewExpertiseExpertResponse")]
        bool AddNewExpertiseExpert(int id_expertise, int id_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewExpertiseExpert", ReplyAction="http://tempuri.org/IService1/AddNewExpertiseExpertResponse")]
        System.IAsyncResult BeginAddNewExpertiseExpert(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewExpertiseExpert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewExpertiseMark", ReplyAction="http://tempuri.org/IService1/AddNewExpertiseMarkResponse")]
        bool AddNewExpertiseMark(int id_expertise, int id_mark);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewExpertiseMark", ReplyAction="http://tempuri.org/IService1/AddNewExpertiseMarkResponse")]
        System.IAsyncResult BeginAddNewExpertiseMark(int id_expertise, int id_mark, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewExpertiseMark(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewExpertises", ReplyAction="http://tempuri.org/IService1/AddNewExpertisesResponse")]
        bool AddNewExpertises(string name_expertise, System.DateTime date_expertise);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewExpertises", ReplyAction="http://tempuri.org/IService1/AddNewExpertisesResponse")]
        System.IAsyncResult BeginAddNewExpertises(string name_expertise, System.DateTime date_expertise, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewExpertises(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewExperts", ReplyAction="http://tempuri.org/IService1/AddNewExpertsResponse")]
        bool AddNewExperts(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewExperts", ReplyAction="http://tempuri.org/IService1/AddNewExpertsResponse")]
        System.IAsyncResult BeginAddNewExperts(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewExperts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewFiledsOfScience", ReplyAction="http://tempuri.org/IService1/AddNewFiledsOfScienceResponse")]
        bool AddNewFiledsOfScience(string name_fos);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewFiledsOfScience", ReplyAction="http://tempuri.org/IService1/AddNewFiledsOfScienceResponse")]
        System.IAsyncResult BeginAddNewFiledsOfScience(string name_fos, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewFiledsOfScience(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewGRNTI", ReplyAction="http://tempuri.org/IService1/AddNewGRNTIResponse")]
        bool AddNewGRNTI(string name_grnti);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewGRNTI", ReplyAction="http://tempuri.org/IService1/AddNewGRNTIResponse")]
        System.IAsyncResult BeginAddNewGRNTI(string name_grnti, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewGRNTI(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewMarks", ReplyAction="http://tempuri.org/IService1/AddNewMarksResponse")]
        bool AddNewMarks(int id_expert, int id_crit, int id_project, int rating);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewMarks", ReplyAction="http://tempuri.org/IService1/AddNewMarksResponse")]
        System.IAsyncResult BeginAddNewMarks(int id_expert, int id_crit, int id_project, int rating, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewMarks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewProjectAuthors", ReplyAction="http://tempuri.org/IService1/AddNewProjectAuthorsResponse")]
        bool AddNewProjectAuthors(int id_proj, int id_author);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewProjectAuthors", ReplyAction="http://tempuri.org/IService1/AddNewProjectAuthorsResponse")]
        System.IAsyncResult BeginAddNewProjectAuthors(int id_proj, int id_author, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewProjectAuthors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewProjectExpertise", ReplyAction="http://tempuri.org/IService1/AddNewProjectExpertiseResponse")]
        bool AddNewProjectExpertise(int id_expertise, int id_project, bool accept);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewProjectExpertise", ReplyAction="http://tempuri.org/IService1/AddNewProjectExpertiseResponse")]
        System.IAsyncResult BeginAddNewProjectExpertise(int id_expertise, int id_project, bool accept, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewProjectExpertise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewProjectFos", ReplyAction="http://tempuri.org/IService1/AddNewProjectFosResponse")]
        bool AddNewProjectFos(int id_project, int id_fos);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewProjectFos", ReplyAction="http://tempuri.org/IService1/AddNewProjectFosResponse")]
        System.IAsyncResult BeginAddNewProjectFos(int id_project, int id_fos, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewProjectFos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewProjects", ReplyAction="http://tempuri.org/IService1/AddNewProjectsResponse")]
        bool AddNewProjects(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddNewProjects", ReplyAction="http://tempuri.org/IService1/AddNewProjectsResponse")]
        System.IAsyncResult BeginAddNewProjects(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewProjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateNewExpertise", ReplyAction="http://tempuri.org/IService1/CreateNewExpertiseResponse")]
        bool CreateNewExpertise(string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, int[] projectsId, int[] critsId, int[] expertsId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/CreateNewExpertise", ReplyAction="http://tempuri.org/IService1/CreateNewExpertiseResponse")]
        System.IAsyncResult BeginCreateNewExpertise(string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, int[] projectsId, int[] critsId, int[] expertsId, System.AsyncCallback callback, object asyncState);
        
        bool EndCreateNewExpertise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditExpertiseByID", ReplyAction="http://tempuri.org/IService1/EditExpertiseByIDResponse")]
        bool EditExpertiseByID(int id_expertise, string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] lprojects, ExpertiseWPFApplication.ServiceReference1.ExpCrit[] lcrits, ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] lexperts);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditExpertiseByID", ReplyAction="http://tempuri.org/IService1/EditExpertiseByIDResponse")]
        System.IAsyncResult BeginEditExpertiseByID(int id_expertise, string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] lprojects, ExpertiseWPFApplication.ServiceReference1.ExpCrit[] lcrits, ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] lexperts, System.AsyncCallback callback, object asyncState);
        
        bool EndEditExpertiseByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMyExpertiseForCardByID", ReplyAction="http://tempuri.org/IService1/GetMyExpertiseForCardByIDResponse")]
        ExpertiseWPFApplication.ServiceReference1.myExpertiseForCard GetMyExpertiseForCardByID(int id_expertise);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetMyExpertiseForCardByID", ReplyAction="http://tempuri.org/IService1/GetMyExpertiseForCardByIDResponse")]
        System.IAsyncResult BeginGetMyExpertiseForCardByID(int id_expertise, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.myExpertiseForCard EndGetMyExpertiseForCardByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListComoletedExpertises", ReplyAction="http://tempuri.org/IService1/GetListComoletedExpertisesResponse")]
        ExpertiseWPFApplication.ServiceReference1.myCompletedexpertises[] GetListComoletedExpertises();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListComoletedExpertises", ReplyAction="http://tempuri.org/IService1/GetListComoletedExpertisesResponse")]
        System.IAsyncResult BeginGetListComoletedExpertises(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.myCompletedexpertises[] EndGetListComoletedExpertises(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTabelsForEditExpertiseByID", ReplyAction="http://tempuri.org/IService1/GetTabelsForEditExpertiseByIDResponse")]
        ExpertiseWPFApplication.ServiceReference1.TablesForEditExpertise GetTabelsForEditExpertiseByID(int id_expertise);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetTabelsForEditExpertiseByID", ReplyAction="http://tempuri.org/IService1/GetTabelsForEditExpertiseByIDResponse")]
        System.IAsyncResult BeginGetTabelsForEditExpertiseByID(int id_expertise, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.TablesForEditExpertise EndGetTabelsForEditExpertiseByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProjectExpertise", ReplyAction="http://tempuri.org/IService1/UpdateProjectExpertiseResponse")]
        bool UpdateProjectExpertise(int id_project_expertise, int id_expertise, int id_project, bool accept);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/UpdateProjectExpertise", ReplyAction="http://tempuri.org/IService1/UpdateProjectExpertiseResponse")]
        System.IAsyncResult BeginUpdateProjectExpertise(int id_project_expertise, int id_expertise, int id_project, bool accept, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateProjectExpertise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTablesForExpertise", ReplyAction="http://tempuri.org/IService1/GetTablesForExpertiseResponse")]
        ExpertiseWPFApplication.ServiceReference1.TablesForExpertise GetTablesForExpertise();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetTablesForExpertise", ReplyAction="http://tempuri.org/IService1/GetTablesForExpertiseResponse")]
        System.IAsyncResult BeginGetTablesForExpertise(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.TablesForExpertise EndGetTablesForExpertise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListRaitingForExpertise", ReplyAction="http://tempuri.org/IService1/GetListRaitingForExpertiseResponse")]
        ExpertiseWPFApplication.ServiceReference1.myRaitinfExpert[] GetListRaitingForExpertise(int id_project);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListRaitingForExpertise", ReplyAction="http://tempuri.org/IService1/GetListRaitingForExpertiseResponse")]
        System.IAsyncResult BeginGetListRaitingForExpertise(int id_project, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.myRaitinfExpert[] EndGetListRaitingForExpertise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/test", ReplyAction="http://tempuri.org/IService1/testResponse")]
        ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] test();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/test", ReplyAction="http://tempuri.org/IService1/testResponse")]
        System.IAsyncResult Begintest(System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] Endtest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/test2", ReplyAction="http://tempuri.org/IService1/test2Response")]
        void test2();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/test2", ReplyAction="http://tempuri.org/IService1/test2Response")]
        System.IAsyncResult Begintest2(System.AsyncCallback callback, object asyncState);
        
        void Endtest2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateExpertCard", ReplyAction="http://tempuri.org/IService1/UpdateExpertCardResponse")]
        void UpdateExpertCard(int id_expert, string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, bool delete_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/UpdateExpertCard", ReplyAction="http://tempuri.org/IService1/UpdateExpertCardResponse")]
        System.IAsyncResult BeginUpdateExpertCard(int id_expert, string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, bool delete_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateExpertCard(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCriterions", ReplyAction="http://tempuri.org/IService1/EditCriterionsResponse")]
        bool EditCriterions(int id_crit, string name_crit, bool qualit_crit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditCriterions", ReplyAction="http://tempuri.org/IService1/EditCriterionsResponse")]
        System.IAsyncResult BeginEditCriterions(int id_crit, string name_crit, bool qualit_crit, System.AsyncCallback callback, object asyncState);
        
        bool EndEditCriterions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCritValues", ReplyAction="http://tempuri.org/IService1/EditCritValuesResponse")]
        bool EditCritValues(int id_value, int id_crit, string valid_values);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditCritValues", ReplyAction="http://tempuri.org/IService1/EditCritValuesResponse")]
        System.IAsyncResult BeginEditCritValues(int id_value, int id_crit, string valid_values, System.AsyncCallback callback, object asyncState);
        
        bool EndEditCritValues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditFiledsOfScience", ReplyAction="http://tempuri.org/IService1/EditFiledsOfScienceResponse")]
        bool EditFiledsOfScience(int id_fos, string name_fos);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditFiledsOfScience", ReplyAction="http://tempuri.org/IService1/EditFiledsOfScienceResponse")]
        System.IAsyncResult BeginEditFiledsOfScience(int id_fos, string name_fos, System.AsyncCallback callback, object asyncState);
        
        bool EndEditFiledsOfScience(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditProject", ReplyAction="http://tempuri.org/IService1/EditProjectResponse")]
        bool EditProject(int id_project, string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditProject", ReplyAction="http://tempuri.org/IService1/EditProjectResponse")]
        System.IAsyncResult BeginEditProject(int id_project, string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos, System.AsyncCallback callback, object asyncState);
        
        bool EndEditProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Expertise_Expert", ReplyAction="http://tempuri.org/IService1/Expertise_ExpertResponse")]
        ExpertiseWPFApplication.ServiceReference1.Expertise_Expert[] Expertise_Expert(int id_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Expertise_Expert", ReplyAction="http://tempuri.org/IService1/Expertise_ExpertResponse")]
        System.IAsyncResult BeginExpertise_Expert(int id_expert, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Expertise_Expert[] EndExpertise_Expert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProjects", ReplyAction="http://tempuri.org/IService1/AddProjectsResponse")]
        bool AddProjects(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddProjects", ReplyAction="http://tempuri.org/IService1/AddProjectsResponse")]
        System.IAsyncResult BeginAddProjects(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos, System.AsyncCallback callback, object asyncState);
        
        bool EndAddProjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAuthors", ReplyAction="http://tempuri.org/IService1/AddAuthorsResponse")]
        bool AddAuthors(string surname_author, string name_author, string patronymic_author);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddAuthors", ReplyAction="http://tempuri.org/IService1/AddAuthorsResponse")]
        System.IAsyncResult BeginAddAuthors(string surname_author, string name_author, string patronymic_author, System.AsyncCallback callback, object asyncState);
        
        bool EndAddAuthors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCategories", ReplyAction="http://tempuri.org/IService1/AddCategoriesResponse")]
        bool AddCategories(string name_category);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddCategories", ReplyAction="http://tempuri.org/IService1/AddCategoriesResponse")]
        System.IAsyncResult BeginAddCategories(string name_category, System.AsyncCallback callback, object asyncState);
        
        bool EndAddCategories(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExpertises", ReplyAction="http://tempuri.org/IService1/AddExpertisesResponse")]
        bool AddExpertises(string name_expertise, System.DateTime date_expertise, int[] arrExperts);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddExpertises", ReplyAction="http://tempuri.org/IService1/AddExpertisesResponse")]
        System.IAsyncResult BeginAddExpertises(string name_expertise, System.DateTime date_expertise, int[] arrExperts, System.AsyncCallback callback, object asyncState);
        
        bool EndAddExpertises(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteExpert", ReplyAction="http://tempuri.org/IService1/DeleteExpertResponse")]
        bool DeleteExpert(int id_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DeleteExpert", ReplyAction="http://tempuri.org/IService1/DeleteExpertResponse")]
        System.IAsyncResult BeginDeleteExpert(int id_expert, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteExpert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProject", ReplyAction="http://tempuri.org/IService1/DeleteProjectResponse")]
        bool DeleteProject(int id_project);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DeleteProject", ReplyAction="http://tempuri.org/IService1/DeleteProjectResponse")]
        System.IAsyncResult BeginDeleteProject(int id_project, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExpert", ReplyAction="http://tempuri.org/IService1/AddExpertResponse")]
        void AddExpert(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert, bool comission_chairman);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddExpert", ReplyAction="http://tempuri.org/IService1/AddExpertResponse")]
        System.IAsyncResult BeginAddExpert(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert, bool comission_chairman, System.AsyncCallback callback, object asyncState);
        
        void EndAddExpert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCriterions", ReplyAction="http://tempuri.org/IService1/AddCriterionsResponse")]
        bool AddCriterions(string name_crit, bool qualit_crit, string valid_values, int id_category);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddCriterions", ReplyAction="http://tempuri.org/IService1/AddCriterionsResponse")]
        System.IAsyncResult BeginAddCriterions(string name_crit, bool qualit_crit, string valid_values, int id_category, System.AsyncCallback callback, object asyncState);
        
        bool EndAddCriterions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddFiledsOfScience", ReplyAction="http://tempuri.org/IService1/AddFiledsOfScienceResponse")]
        bool AddFiledsOfScience(string name_fos);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddFiledsOfScience", ReplyAction="http://tempuri.org/IService1/AddFiledsOfScienceResponse")]
        System.IAsyncResult BeginAddFiledsOfScience(string name_fos, System.AsyncCallback callback, object asyncState);
        
        bool EndAddFiledsOfScience(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Authorization", ReplyAction="http://tempuri.org/IService1/AuthorizationResponse")]
        ExpertiseWPFApplication.ServiceReference1.Experts Authorization(string Login, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Authorization", ReplyAction="http://tempuri.org/IService1/AuthorizationResponse")]
        System.IAsyncResult BeginAuthorization(string Login, string Password, System.AsyncCallback callback, object asyncState);
        
        ExpertiseWPFApplication.ServiceReference1.Experts EndAuthorization(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Gethello", ReplyAction="http://tempuri.org/IService1/GethelloResponse")]
        string Gethello();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Gethello", ReplyAction="http://tempuri.org/IService1/GethelloResponse")]
        System.IAsyncResult BeginGethello(System.AsyncCallback callback, object asyncState);
        
        string EndGethello(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ExpertiseWPFApplication.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.CompositeType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.CompositeType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExpertiseExaminationTablesByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExpertiseExaminationTablesByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myExpertiseExaminationTables Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.myExpertiseExaminationTables)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewCritCompareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewCritCompareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditExpertiseExpertStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditExpertiseExpertStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditExpertiseStatusToCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditExpertiseStatusToCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditExpertiseStatusToStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditExpertiseStatusToStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAuthorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAuthorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myAuthors[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.myAuthors[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAuthorsForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAuthorsForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myAuthors[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.myAuthors[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListExpertForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListExpertForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Experts[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Experts[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListCatCritCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListCatCritCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.CatCrit[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Categories[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Categories[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListCriterionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListCriterionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Criterions[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Criterions[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListCritValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListCritValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.CritValues[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.CritValues[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListGRNTICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListGRNTICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.GRNTI[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.GRNTI[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListExpertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListExpertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Experts[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Experts[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListExpertsWithCountExpertiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListExpertsWithCountExpertiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ExpertsWithCountExpertise[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.ExpertsWithCountExpertise[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListFOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListFOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myProject[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.myProject[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListProjectFosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListProjectFosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ProjectFos[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.ProjectFos[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListExpertisesForExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListExpertisesForExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Expertises[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Expertises[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListCurrentExpertisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListCurrentExpertisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myCurrentexpertises[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.myCurrentexpertises[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllAuthorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllAuthorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Authors[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Authors[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllCatCritCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllCatCritCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.CatCrit[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Categories[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Categories[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllCriterionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllCriterionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Criterions[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Criterions[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllCritValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllCritValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.CritValues[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.CritValues[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllExpCritCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllExpCritCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ExpCrit[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.ExpCrit[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllExpertFosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllExpertFosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ExpertFos[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.ExpertFos[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllExpertiseExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllExpertiseExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllExpertiseMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllExpertiseMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllExpertisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllExpertisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Expertises[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Expertises[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllExpertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllExpertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Experts[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Experts[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllFiledsOfScienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllFiledsOfScienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllGRNTICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllGRNTICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.GRNTI[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.GRNTI[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllMarksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllMarksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Marks[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Marks[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllProjectAuthorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllProjectAuthorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllProjectExpertiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllProjectExpertiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllProjectFosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllProjectFosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ProjectFos[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.ProjectFos[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAllProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAllProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Projects[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Projects[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewAuthorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewAuthorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewCatCritCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewCatCritCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewCriterionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewCriterionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewCritValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewCritValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewExpCritCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewExpCritCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewExpertFosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewExpertFosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewExpertiseExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewExpertiseExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewExpertiseMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewExpertiseMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewExpertisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewExpertisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewExpertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewExpertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewFiledsOfScienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewFiledsOfScienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewGRNTICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewGRNTICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewMarksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewMarksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewProjectAuthorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewProjectAuthorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewProjectExpertiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewProjectExpertiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewProjectFosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewProjectFosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateNewExpertiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateNewExpertiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditExpertiseByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditExpertiseByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMyExpertiseForCardByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyExpertiseForCardByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myExpertiseForCard Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.myExpertiseForCard)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListComoletedExpertisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListComoletedExpertisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myCompletedexpertises[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.myCompletedexpertises[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTabelsForEditExpertiseByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTabelsForEditExpertiseByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.TablesForEditExpertise Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.TablesForEditExpertise)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateProjectExpertiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateProjectExpertiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTablesForExpertiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTablesForExpertiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.TablesForExpertise Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.TablesForExpertise)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListRaitingForExpertiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListRaitingForExpertiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myRaitinfExpert[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.myRaitinfExpert[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditCriterionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditCriterionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditCritValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditCritValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditFiledsOfScienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditFiledsOfScienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Expertise_ExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Expertise_ExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Expertise_Expert[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Expertise_Expert[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddAuthorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddAuthorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddExpertisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddExpertisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddCriterionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddCriterionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddFiledsOfScienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddFiledsOfScienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Experts Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ExpertiseWPFApplication.ServiceReference1.Experts)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GethelloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GethelloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ExpertiseWPFApplication.ServiceReference1.IService1>, ExpertiseWPFApplication.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
        
        private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExpertiseExaminationTablesByIDDelegate;
        
        private EndOperationDelegate onEndGetExpertiseExaminationTablesByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetExpertiseExaminationTablesByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewCritCompareDelegate;
        
        private EndOperationDelegate onEndAddNewCritCompareDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewCritCompareCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewMarkDelegate;
        
        private EndOperationDelegate onEndAddNewMarkDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewMarkCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditExpertiseExpertStatusDelegate;
        
        private EndOperationDelegate onEndEditExpertiseExpertStatusDelegate;
        
        private System.Threading.SendOrPostCallback onEditExpertiseExpertStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditExpertiseStatusToCompleteDelegate;
        
        private EndOperationDelegate onEndEditExpertiseStatusToCompleteDelegate;
        
        private System.Threading.SendOrPostCallback onEditExpertiseStatusToCompleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditExpertiseStatusToStartDelegate;
        
        private EndOperationDelegate onEndEditExpertiseStatusToStartDelegate;
        
        private System.Threading.SendOrPostCallback onEditExpertiseStatusToStartCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAuthorsDelegate;
        
        private EndOperationDelegate onEndGetListAuthorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAuthorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAuthorsForProjectDelegate;
        
        private EndOperationDelegate onEndGetListAuthorsForProjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAuthorsForProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListExpertForProjectDelegate;
        
        private EndOperationDelegate onEndGetListExpertForProjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetListExpertForProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListCatCritDelegate;
        
        private EndOperationDelegate onEndGetListCatCritDelegate;
        
        private System.Threading.SendOrPostCallback onGetListCatCritCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListCategoriesDelegate;
        
        private EndOperationDelegate onEndGetListCategoriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetListCategoriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListCriterionsDelegate;
        
        private EndOperationDelegate onEndGetListCriterionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListCriterionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListCritValuesDelegate;
        
        private EndOperationDelegate onEndGetListCritValuesDelegate;
        
        private System.Threading.SendOrPostCallback onGetListCritValuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListGRNTIDelegate;
        
        private EndOperationDelegate onEndGetListGRNTIDelegate;
        
        private System.Threading.SendOrPostCallback onGetListGRNTICompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListExpertsDelegate;
        
        private EndOperationDelegate onEndGetListExpertsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListExpertsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListExpertsWithCountExpertiseDelegate;
        
        private EndOperationDelegate onEndGetListExpertsWithCountExpertiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetListExpertsWithCountExpertiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListFOSDelegate;
        
        private EndOperationDelegate onEndGetListFOSDelegate;
        
        private System.Threading.SendOrPostCallback onGetListFOSCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListProjectsDelegate;
        
        private EndOperationDelegate onEndGetListProjectsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListProjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListProjectFosDelegate;
        
        private EndOperationDelegate onEndGetListProjectFosDelegate;
        
        private System.Threading.SendOrPostCallback onGetListProjectFosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListExpertisesForExpertDelegate;
        
        private EndOperationDelegate onEndGetListExpertisesForExpertDelegate;
        
        private System.Threading.SendOrPostCallback onGetListExpertisesForExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListCurrentExpertisesDelegate;
        
        private EndOperationDelegate onEndGetListCurrentExpertisesDelegate;
        
        private System.Threading.SendOrPostCallback onGetListCurrentExpertisesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllAuthorsDelegate;
        
        private EndOperationDelegate onEndGetListAllAuthorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllAuthorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllCatCritDelegate;
        
        private EndOperationDelegate onEndGetListAllCatCritDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllCatCritCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllCategoriesDelegate;
        
        private EndOperationDelegate onEndGetListAllCategoriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllCategoriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllCriterionsDelegate;
        
        private EndOperationDelegate onEndGetListAllCriterionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllCriterionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllCritValuesDelegate;
        
        private EndOperationDelegate onEndGetListAllCritValuesDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllCritValuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllExpCritDelegate;
        
        private EndOperationDelegate onEndGetListAllExpCritDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllExpCritCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllExpertFosDelegate;
        
        private EndOperationDelegate onEndGetListAllExpertFosDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllExpertFosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllExpertiseExpertDelegate;
        
        private EndOperationDelegate onEndGetListAllExpertiseExpertDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllExpertiseExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllExpertiseMarkDelegate;
        
        private EndOperationDelegate onEndGetListAllExpertiseMarkDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllExpertiseMarkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllExpertisesDelegate;
        
        private EndOperationDelegate onEndGetListAllExpertisesDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllExpertisesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllExpertsDelegate;
        
        private EndOperationDelegate onEndGetListAllExpertsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllExpertsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllFiledsOfScienceDelegate;
        
        private EndOperationDelegate onEndGetListAllFiledsOfScienceDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllFiledsOfScienceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllGRNTIDelegate;
        
        private EndOperationDelegate onEndGetListAllGRNTIDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllGRNTICompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllMarksDelegate;
        
        private EndOperationDelegate onEndGetListAllMarksDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllMarksCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllProjectAuthorsDelegate;
        
        private EndOperationDelegate onEndGetListAllProjectAuthorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllProjectAuthorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllProjectExpertiseDelegate;
        
        private EndOperationDelegate onEndGetListAllProjectExpertiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllProjectExpertiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllProjectFosDelegate;
        
        private EndOperationDelegate onEndGetListAllProjectFosDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllProjectFosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAllProjectsDelegate;
        
        private EndOperationDelegate onEndGetListAllProjectsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAllProjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewAuthorsDelegate;
        
        private EndOperationDelegate onEndAddNewAuthorsDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewAuthorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewCatCritDelegate;
        
        private EndOperationDelegate onEndAddNewCatCritDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewCatCritCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewCategoriesDelegate;
        
        private EndOperationDelegate onEndAddNewCategoriesDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewCategoriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewCriterionsDelegate;
        
        private EndOperationDelegate onEndAddNewCriterionsDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewCriterionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewCritValuesDelegate;
        
        private EndOperationDelegate onEndAddNewCritValuesDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewCritValuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewExpCritDelegate;
        
        private EndOperationDelegate onEndAddNewExpCritDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewExpCritCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewExpertFosDelegate;
        
        private EndOperationDelegate onEndAddNewExpertFosDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewExpertFosCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewExpertiseExpertDelegate;
        
        private EndOperationDelegate onEndAddNewExpertiseExpertDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewExpertiseExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewExpertiseMarkDelegate;
        
        private EndOperationDelegate onEndAddNewExpertiseMarkDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewExpertiseMarkCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewExpertisesDelegate;
        
        private EndOperationDelegate onEndAddNewExpertisesDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewExpertisesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewExpertsDelegate;
        
        private EndOperationDelegate onEndAddNewExpertsDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewExpertsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewFiledsOfScienceDelegate;
        
        private EndOperationDelegate onEndAddNewFiledsOfScienceDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewFiledsOfScienceCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewGRNTIDelegate;
        
        private EndOperationDelegate onEndAddNewGRNTIDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewGRNTICompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewMarksDelegate;
        
        private EndOperationDelegate onEndAddNewMarksDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewMarksCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewProjectAuthorsDelegate;
        
        private EndOperationDelegate onEndAddNewProjectAuthorsDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewProjectAuthorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewProjectExpertiseDelegate;
        
        private EndOperationDelegate onEndAddNewProjectExpertiseDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewProjectExpertiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewProjectFosDelegate;
        
        private EndOperationDelegate onEndAddNewProjectFosDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewProjectFosCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewProjectsDelegate;
        
        private EndOperationDelegate onEndAddNewProjectsDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewProjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateNewExpertiseDelegate;
        
        private EndOperationDelegate onEndCreateNewExpertiseDelegate;
        
        private System.Threading.SendOrPostCallback onCreateNewExpertiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditExpertiseByIDDelegate;
        
        private EndOperationDelegate onEndEditExpertiseByIDDelegate;
        
        private System.Threading.SendOrPostCallback onEditExpertiseByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyExpertiseForCardByIDDelegate;
        
        private EndOperationDelegate onEndGetMyExpertiseForCardByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyExpertiseForCardByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListComoletedExpertisesDelegate;
        
        private EndOperationDelegate onEndGetListComoletedExpertisesDelegate;
        
        private System.Threading.SendOrPostCallback onGetListComoletedExpertisesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTabelsForEditExpertiseByIDDelegate;
        
        private EndOperationDelegate onEndGetTabelsForEditExpertiseByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetTabelsForEditExpertiseByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateProjectExpertiseDelegate;
        
        private EndOperationDelegate onEndUpdateProjectExpertiseDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateProjectExpertiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTablesForExpertiseDelegate;
        
        private EndOperationDelegate onEndGetTablesForExpertiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetTablesForExpertiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListRaitingForExpertiseDelegate;
        
        private EndOperationDelegate onEndGetListRaitingForExpertiseDelegate;
        
        private System.Threading.SendOrPostCallback onGetListRaitingForExpertiseCompletedDelegate;
        
        private BeginOperationDelegate onBegintestDelegate;
        
        private EndOperationDelegate onEndtestDelegate;
        
        private System.Threading.SendOrPostCallback ontestCompletedDelegate;
        
        private BeginOperationDelegate onBegintest2Delegate;
        
        private EndOperationDelegate onEndtest2Delegate;
        
        private System.Threading.SendOrPostCallback ontest2CompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateExpertCardDelegate;
        
        private EndOperationDelegate onEndUpdateExpertCardDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateExpertCardCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditCriterionsDelegate;
        
        private EndOperationDelegate onEndEditCriterionsDelegate;
        
        private System.Threading.SendOrPostCallback onEditCriterionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditCritValuesDelegate;
        
        private EndOperationDelegate onEndEditCritValuesDelegate;
        
        private System.Threading.SendOrPostCallback onEditCritValuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditFiledsOfScienceDelegate;
        
        private EndOperationDelegate onEndEditFiledsOfScienceDelegate;
        
        private System.Threading.SendOrPostCallback onEditFiledsOfScienceCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditProjectDelegate;
        
        private EndOperationDelegate onEndEditProjectDelegate;
        
        private System.Threading.SendOrPostCallback onEditProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginExpertise_ExpertDelegate;
        
        private EndOperationDelegate onEndExpertise_ExpertDelegate;
        
        private System.Threading.SendOrPostCallback onExpertise_ExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddProjectsDelegate;
        
        private EndOperationDelegate onEndAddProjectsDelegate;
        
        private System.Threading.SendOrPostCallback onAddProjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAuthorsDelegate;
        
        private EndOperationDelegate onEndAddAuthorsDelegate;
        
        private System.Threading.SendOrPostCallback onAddAuthorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddCategoriesDelegate;
        
        private EndOperationDelegate onEndAddCategoriesDelegate;
        
        private System.Threading.SendOrPostCallback onAddCategoriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddExpertisesDelegate;
        
        private EndOperationDelegate onEndAddExpertisesDelegate;
        
        private System.Threading.SendOrPostCallback onAddExpertisesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteExpertDelegate;
        
        private EndOperationDelegate onEndDeleteExpertDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProjectDelegate;
        
        private EndOperationDelegate onEndDeleteProjectDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddExpertDelegate;
        
        private EndOperationDelegate onEndAddExpertDelegate;
        
        private System.Threading.SendOrPostCallback onAddExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddCriterionsDelegate;
        
        private EndOperationDelegate onEndAddCriterionsDelegate;
        
        private System.Threading.SendOrPostCallback onAddCriterionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddFiledsOfScienceDelegate;
        
        private EndOperationDelegate onEndAddFiledsOfScienceDelegate;
        
        private System.Threading.SendOrPostCallback onAddFiledsOfScienceCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthorizationDelegate;
        
        private EndOperationDelegate onEndAuthorizationDelegate;
        
        private System.Threading.SendOrPostCallback onAuthorizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGethelloDelegate;
        
        private EndOperationDelegate onEndGethelloDelegate;
        
        private System.Threading.SendOrPostCallback onGethelloCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetExpertiseExaminationTablesByIDCompletedEventArgs> GetExpertiseExaminationTablesByIDCompleted;
        
        public event System.EventHandler<AddNewCritCompareCompletedEventArgs> AddNewCritCompareCompleted;
        
        public event System.EventHandler<AddNewMarkCompletedEventArgs> AddNewMarkCompleted;
        
        public event System.EventHandler<EditExpertiseExpertStatusCompletedEventArgs> EditExpertiseExpertStatusCompleted;
        
        public event System.EventHandler<EditExpertiseStatusToCompleteCompletedEventArgs> EditExpertiseStatusToCompleteCompleted;
        
        public event System.EventHandler<EditExpertiseStatusToStartCompletedEventArgs> EditExpertiseStatusToStartCompleted;
        
        public event System.EventHandler<GetListAuthorsCompletedEventArgs> GetListAuthorsCompleted;
        
        public event System.EventHandler<GetListAuthorsForProjectCompletedEventArgs> GetListAuthorsForProjectCompleted;
        
        public event System.EventHandler<GetListExpertForProjectCompletedEventArgs> GetListExpertForProjectCompleted;
        
        public event System.EventHandler<GetListCatCritCompletedEventArgs> GetListCatCritCompleted;
        
        public event System.EventHandler<GetListCategoriesCompletedEventArgs> GetListCategoriesCompleted;
        
        public event System.EventHandler<GetListCriterionsCompletedEventArgs> GetListCriterionsCompleted;
        
        public event System.EventHandler<GetListCritValuesCompletedEventArgs> GetListCritValuesCompleted;
        
        public event System.EventHandler<GetListGRNTICompletedEventArgs> GetListGRNTICompleted;
        
        public event System.EventHandler<GetListExpertsCompletedEventArgs> GetListExpertsCompleted;
        
        public event System.EventHandler<GetListExpertsWithCountExpertiseCompletedEventArgs> GetListExpertsWithCountExpertiseCompleted;
        
        public event System.EventHandler<GetListFOSCompletedEventArgs> GetListFOSCompleted;
        
        public event System.EventHandler<GetListProjectsCompletedEventArgs> GetListProjectsCompleted;
        
        public event System.EventHandler<GetListProjectFosCompletedEventArgs> GetListProjectFosCompleted;
        
        public event System.EventHandler<GetListExpertisesForExpertCompletedEventArgs> GetListExpertisesForExpertCompleted;
        
        public event System.EventHandler<GetListCurrentExpertisesCompletedEventArgs> GetListCurrentExpertisesCompleted;
        
        public event System.EventHandler<GetListAllAuthorsCompletedEventArgs> GetListAllAuthorsCompleted;
        
        public event System.EventHandler<GetListAllCatCritCompletedEventArgs> GetListAllCatCritCompleted;
        
        public event System.EventHandler<GetListAllCategoriesCompletedEventArgs> GetListAllCategoriesCompleted;
        
        public event System.EventHandler<GetListAllCriterionsCompletedEventArgs> GetListAllCriterionsCompleted;
        
        public event System.EventHandler<GetListAllCritValuesCompletedEventArgs> GetListAllCritValuesCompleted;
        
        public event System.EventHandler<GetListAllExpCritCompletedEventArgs> GetListAllExpCritCompleted;
        
        public event System.EventHandler<GetListAllExpertFosCompletedEventArgs> GetListAllExpertFosCompleted;
        
        public event System.EventHandler<GetListAllExpertiseExpertCompletedEventArgs> GetListAllExpertiseExpertCompleted;
        
        public event System.EventHandler<GetListAllExpertiseMarkCompletedEventArgs> GetListAllExpertiseMarkCompleted;
        
        public event System.EventHandler<GetListAllExpertisesCompletedEventArgs> GetListAllExpertisesCompleted;
        
        public event System.EventHandler<GetListAllExpertsCompletedEventArgs> GetListAllExpertsCompleted;
        
        public event System.EventHandler<GetListAllFiledsOfScienceCompletedEventArgs> GetListAllFiledsOfScienceCompleted;
        
        public event System.EventHandler<GetListAllGRNTICompletedEventArgs> GetListAllGRNTICompleted;
        
        public event System.EventHandler<GetListAllMarksCompletedEventArgs> GetListAllMarksCompleted;
        
        public event System.EventHandler<GetListAllProjectAuthorsCompletedEventArgs> GetListAllProjectAuthorsCompleted;
        
        public event System.EventHandler<GetListAllProjectExpertiseCompletedEventArgs> GetListAllProjectExpertiseCompleted;
        
        public event System.EventHandler<GetListAllProjectFosCompletedEventArgs> GetListAllProjectFosCompleted;
        
        public event System.EventHandler<GetListAllProjectsCompletedEventArgs> GetListAllProjectsCompleted;
        
        public event System.EventHandler<AddNewAuthorsCompletedEventArgs> AddNewAuthorsCompleted;
        
        public event System.EventHandler<AddNewCatCritCompletedEventArgs> AddNewCatCritCompleted;
        
        public event System.EventHandler<AddNewCategoriesCompletedEventArgs> AddNewCategoriesCompleted;
        
        public event System.EventHandler<AddNewCriterionsCompletedEventArgs> AddNewCriterionsCompleted;
        
        public event System.EventHandler<AddNewCritValuesCompletedEventArgs> AddNewCritValuesCompleted;
        
        public event System.EventHandler<AddNewExpCritCompletedEventArgs> AddNewExpCritCompleted;
        
        public event System.EventHandler<AddNewExpertFosCompletedEventArgs> AddNewExpertFosCompleted;
        
        public event System.EventHandler<AddNewExpertiseExpertCompletedEventArgs> AddNewExpertiseExpertCompleted;
        
        public event System.EventHandler<AddNewExpertiseMarkCompletedEventArgs> AddNewExpertiseMarkCompleted;
        
        public event System.EventHandler<AddNewExpertisesCompletedEventArgs> AddNewExpertisesCompleted;
        
        public event System.EventHandler<AddNewExpertsCompletedEventArgs> AddNewExpertsCompleted;
        
        public event System.EventHandler<AddNewFiledsOfScienceCompletedEventArgs> AddNewFiledsOfScienceCompleted;
        
        public event System.EventHandler<AddNewGRNTICompletedEventArgs> AddNewGRNTICompleted;
        
        public event System.EventHandler<AddNewMarksCompletedEventArgs> AddNewMarksCompleted;
        
        public event System.EventHandler<AddNewProjectAuthorsCompletedEventArgs> AddNewProjectAuthorsCompleted;
        
        public event System.EventHandler<AddNewProjectExpertiseCompletedEventArgs> AddNewProjectExpertiseCompleted;
        
        public event System.EventHandler<AddNewProjectFosCompletedEventArgs> AddNewProjectFosCompleted;
        
        public event System.EventHandler<AddNewProjectsCompletedEventArgs> AddNewProjectsCompleted;
        
        public event System.EventHandler<CreateNewExpertiseCompletedEventArgs> CreateNewExpertiseCompleted;
        
        public event System.EventHandler<EditExpertiseByIDCompletedEventArgs> EditExpertiseByIDCompleted;
        
        public event System.EventHandler<GetMyExpertiseForCardByIDCompletedEventArgs> GetMyExpertiseForCardByIDCompleted;
        
        public event System.EventHandler<GetListComoletedExpertisesCompletedEventArgs> GetListComoletedExpertisesCompleted;
        
        public event System.EventHandler<GetTabelsForEditExpertiseByIDCompletedEventArgs> GetTabelsForEditExpertiseByIDCompleted;
        
        public event System.EventHandler<UpdateProjectExpertiseCompletedEventArgs> UpdateProjectExpertiseCompleted;
        
        public event System.EventHandler<GetTablesForExpertiseCompletedEventArgs> GetTablesForExpertiseCompleted;
        
        public event System.EventHandler<GetListRaitingForExpertiseCompletedEventArgs> GetListRaitingForExpertiseCompleted;
        
        public event System.EventHandler<testCompletedEventArgs> testCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> test2Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateExpertCardCompleted;
        
        public event System.EventHandler<EditCriterionsCompletedEventArgs> EditCriterionsCompleted;
        
        public event System.EventHandler<EditCritValuesCompletedEventArgs> EditCritValuesCompleted;
        
        public event System.EventHandler<EditFiledsOfScienceCompletedEventArgs> EditFiledsOfScienceCompleted;
        
        public event System.EventHandler<EditProjectCompletedEventArgs> EditProjectCompleted;
        
        public event System.EventHandler<Expertise_ExpertCompletedEventArgs> Expertise_ExpertCompleted;
        
        public event System.EventHandler<AddProjectsCompletedEventArgs> AddProjectsCompleted;
        
        public event System.EventHandler<AddAuthorsCompletedEventArgs> AddAuthorsCompleted;
        
        public event System.EventHandler<AddCategoriesCompletedEventArgs> AddCategoriesCompleted;
        
        public event System.EventHandler<AddExpertisesCompletedEventArgs> AddExpertisesCompleted;
        
        public event System.EventHandler<DeleteExpertCompletedEventArgs> DeleteExpertCompleted;
        
        public event System.EventHandler<DeleteProjectCompletedEventArgs> DeleteProjectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddExpertCompleted;
        
        public event System.EventHandler<AddCriterionsCompletedEventArgs> AddCriterionsCompleted;
        
        public event System.EventHandler<AddFiledsOfScienceCompletedEventArgs> AddFiledsOfScienceCompleted;
        
        public event System.EventHandler<AuthorizationCompletedEventArgs> AuthorizationCompleted;
        
        public event System.EventHandler<GethelloCompletedEventArgs> GethelloCompleted;
        
        public ExpertiseWPFApplication.ServiceReference1.CompositeType GetDataUsingDataContract(ExpertiseWPFApplication.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDataUsingDataContract(ExpertiseWPFApplication.ServiceReference1.CompositeType composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result) {
            return base.Channel.EndGetDataUsingDataContract(result);
        }
        
        private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ExpertiseWPFApplication.ServiceReference1.CompositeType composite = ((ExpertiseWPFApplication.ServiceReference1.CompositeType)(inValues[0]));
            return this.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.CompositeType retVal = this.EndGetDataUsingDataContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataUsingDataContractCompleted(object state) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataUsingDataContractAsync(ExpertiseWPFApplication.ServiceReference1.CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        public void GetDataUsingDataContractAsync(ExpertiseWPFApplication.ServiceReference1.CompositeType composite, object userState) {
            if ((this.onBeginGetDataUsingDataContractDelegate == null)) {
                this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
            }
            if ((this.onEndGetDataUsingDataContractDelegate == null)) {
                this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
            }
            if ((this.onGetDataUsingDataContractCompletedDelegate == null)) {
                this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                        composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return this.BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = this.EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myExpertiseExaminationTables GetExpertiseExaminationTablesByID(int id_expertise, int id_expert) {
            return base.Channel.GetExpertiseExaminationTablesByID(id_expertise, id_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetExpertiseExaminationTablesByID(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExpertiseExaminationTablesByID(id_expertise, id_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.myExpertiseExaminationTables EndGetExpertiseExaminationTablesByID(System.IAsyncResult result) {
            return base.Channel.EndGetExpertiseExaminationTablesByID(result);
        }
        
        private System.IAsyncResult OnBeginGetExpertiseExaminationTablesByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_expert = ((int)(inValues[1]));
            return this.BeginGetExpertiseExaminationTablesByID(id_expertise, id_expert, callback, asyncState);
        }
        
        private object[] OnEndGetExpertiseExaminationTablesByID(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.myExpertiseExaminationTables retVal = this.EndGetExpertiseExaminationTablesByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExpertiseExaminationTablesByIDCompleted(object state) {
            if ((this.GetExpertiseExaminationTablesByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExpertiseExaminationTablesByIDCompleted(this, new GetExpertiseExaminationTablesByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExpertiseExaminationTablesByIDAsync(int id_expertise, int id_expert) {
            this.GetExpertiseExaminationTablesByIDAsync(id_expertise, id_expert, null);
        }
        
        public void GetExpertiseExaminationTablesByIDAsync(int id_expertise, int id_expert, object userState) {
            if ((this.onBeginGetExpertiseExaminationTablesByIDDelegate == null)) {
                this.onBeginGetExpertiseExaminationTablesByIDDelegate = new BeginOperationDelegate(this.OnBeginGetExpertiseExaminationTablesByID);
            }
            if ((this.onEndGetExpertiseExaminationTablesByIDDelegate == null)) {
                this.onEndGetExpertiseExaminationTablesByIDDelegate = new EndOperationDelegate(this.OnEndGetExpertiseExaminationTablesByID);
            }
            if ((this.onGetExpertiseExaminationTablesByIDCompletedDelegate == null)) {
                this.onGetExpertiseExaminationTablesByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExpertiseExaminationTablesByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetExpertiseExaminationTablesByIDDelegate, new object[] {
                        id_expertise,
                        id_expert}, this.onEndGetExpertiseExaminationTablesByIDDelegate, this.onGetExpertiseExaminationTablesByIDCompletedDelegate, userState);
        }
        
        public bool AddNewCritCompare(ExpertiseWPFApplication.ServiceReference1.CritCompare[] arrCompare) {
            return base.Channel.AddNewCritCompare(arrCompare);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewCritCompare(ExpertiseWPFApplication.ServiceReference1.CritCompare[] arrCompare, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewCritCompare(arrCompare, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewCritCompare(System.IAsyncResult result) {
            return base.Channel.EndAddNewCritCompare(result);
        }
        
        private System.IAsyncResult OnBeginAddNewCritCompare(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ExpertiseWPFApplication.ServiceReference1.CritCompare[] arrCompare = ((ExpertiseWPFApplication.ServiceReference1.CritCompare[])(inValues[0]));
            return this.BeginAddNewCritCompare(arrCompare, callback, asyncState);
        }
        
        private object[] OnEndAddNewCritCompare(System.IAsyncResult result) {
            bool retVal = this.EndAddNewCritCompare(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewCritCompareCompleted(object state) {
            if ((this.AddNewCritCompareCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewCritCompareCompleted(this, new AddNewCritCompareCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewCritCompareAsync(ExpertiseWPFApplication.ServiceReference1.CritCompare[] arrCompare) {
            this.AddNewCritCompareAsync(arrCompare, null);
        }
        
        public void AddNewCritCompareAsync(ExpertiseWPFApplication.ServiceReference1.CritCompare[] arrCompare, object userState) {
            if ((this.onBeginAddNewCritCompareDelegate == null)) {
                this.onBeginAddNewCritCompareDelegate = new BeginOperationDelegate(this.OnBeginAddNewCritCompare);
            }
            if ((this.onEndAddNewCritCompareDelegate == null)) {
                this.onEndAddNewCritCompareDelegate = new EndOperationDelegate(this.OnEndAddNewCritCompare);
            }
            if ((this.onAddNewCritCompareCompletedDelegate == null)) {
                this.onAddNewCritCompareCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewCritCompareCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewCritCompareDelegate, new object[] {
                        arrCompare}, this.onEndAddNewCritCompareDelegate, this.onAddNewCritCompareCompletedDelegate, userState);
        }
        
        public bool AddNewMark(int id_expertise, ExpertiseWPFApplication.ServiceReference1.Marks[] arrMarks) {
            return base.Channel.AddNewMark(id_expertise, arrMarks);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewMark(int id_expertise, ExpertiseWPFApplication.ServiceReference1.Marks[] arrMarks, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewMark(id_expertise, arrMarks, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewMark(System.IAsyncResult result) {
            return base.Channel.EndAddNewMark(result);
        }
        
        private System.IAsyncResult OnBeginAddNewMark(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            ExpertiseWPFApplication.ServiceReference1.Marks[] arrMarks = ((ExpertiseWPFApplication.ServiceReference1.Marks[])(inValues[1]));
            return this.BeginAddNewMark(id_expertise, arrMarks, callback, asyncState);
        }
        
        private object[] OnEndAddNewMark(System.IAsyncResult result) {
            bool retVal = this.EndAddNewMark(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewMarkCompleted(object state) {
            if ((this.AddNewMarkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewMarkCompleted(this, new AddNewMarkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewMarkAsync(int id_expertise, ExpertiseWPFApplication.ServiceReference1.Marks[] arrMarks) {
            this.AddNewMarkAsync(id_expertise, arrMarks, null);
        }
        
        public void AddNewMarkAsync(int id_expertise, ExpertiseWPFApplication.ServiceReference1.Marks[] arrMarks, object userState) {
            if ((this.onBeginAddNewMarkDelegate == null)) {
                this.onBeginAddNewMarkDelegate = new BeginOperationDelegate(this.OnBeginAddNewMark);
            }
            if ((this.onEndAddNewMarkDelegate == null)) {
                this.onEndAddNewMarkDelegate = new EndOperationDelegate(this.OnEndAddNewMark);
            }
            if ((this.onAddNewMarkCompletedDelegate == null)) {
                this.onAddNewMarkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewMarkCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewMarkDelegate, new object[] {
                        id_expertise,
                        arrMarks}, this.onEndAddNewMarkDelegate, this.onAddNewMarkCompletedDelegate, userState);
        }
        
        public bool EditExpertiseExpertStatus(int id_expertise, int id_expert) {
            return base.Channel.EditExpertiseExpertStatus(id_expertise, id_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditExpertiseExpertStatus(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditExpertiseExpertStatus(id_expertise, id_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEditExpertiseExpertStatus(System.IAsyncResult result) {
            return base.Channel.EndEditExpertiseExpertStatus(result);
        }
        
        private System.IAsyncResult OnBeginEditExpertiseExpertStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_expert = ((int)(inValues[1]));
            return this.BeginEditExpertiseExpertStatus(id_expertise, id_expert, callback, asyncState);
        }
        
        private object[] OnEndEditExpertiseExpertStatus(System.IAsyncResult result) {
            bool retVal = this.EndEditExpertiseExpertStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditExpertiseExpertStatusCompleted(object state) {
            if ((this.EditExpertiseExpertStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditExpertiseExpertStatusCompleted(this, new EditExpertiseExpertStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditExpertiseExpertStatusAsync(int id_expertise, int id_expert) {
            this.EditExpertiseExpertStatusAsync(id_expertise, id_expert, null);
        }
        
        public void EditExpertiseExpertStatusAsync(int id_expertise, int id_expert, object userState) {
            if ((this.onBeginEditExpertiseExpertStatusDelegate == null)) {
                this.onBeginEditExpertiseExpertStatusDelegate = new BeginOperationDelegate(this.OnBeginEditExpertiseExpertStatus);
            }
            if ((this.onEndEditExpertiseExpertStatusDelegate == null)) {
                this.onEndEditExpertiseExpertStatusDelegate = new EndOperationDelegate(this.OnEndEditExpertiseExpertStatus);
            }
            if ((this.onEditExpertiseExpertStatusCompletedDelegate == null)) {
                this.onEditExpertiseExpertStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditExpertiseExpertStatusCompleted);
            }
            base.InvokeAsync(this.onBeginEditExpertiseExpertStatusDelegate, new object[] {
                        id_expertise,
                        id_expert}, this.onEndEditExpertiseExpertStatusDelegate, this.onEditExpertiseExpertStatusCompletedDelegate, userState);
        }
        
        public bool EditExpertiseStatusToComplete(int id_expertise) {
            return base.Channel.EditExpertiseStatusToComplete(id_expertise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditExpertiseStatusToComplete(int id_expertise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditExpertiseStatusToComplete(id_expertise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEditExpertiseStatusToComplete(System.IAsyncResult result) {
            return base.Channel.EndEditExpertiseStatusToComplete(result);
        }
        
        private System.IAsyncResult OnBeginEditExpertiseStatusToComplete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            return this.BeginEditExpertiseStatusToComplete(id_expertise, callback, asyncState);
        }
        
        private object[] OnEndEditExpertiseStatusToComplete(System.IAsyncResult result) {
            bool retVal = this.EndEditExpertiseStatusToComplete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditExpertiseStatusToCompleteCompleted(object state) {
            if ((this.EditExpertiseStatusToCompleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditExpertiseStatusToCompleteCompleted(this, new EditExpertiseStatusToCompleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditExpertiseStatusToCompleteAsync(int id_expertise) {
            this.EditExpertiseStatusToCompleteAsync(id_expertise, null);
        }
        
        public void EditExpertiseStatusToCompleteAsync(int id_expertise, object userState) {
            if ((this.onBeginEditExpertiseStatusToCompleteDelegate == null)) {
                this.onBeginEditExpertiseStatusToCompleteDelegate = new BeginOperationDelegate(this.OnBeginEditExpertiseStatusToComplete);
            }
            if ((this.onEndEditExpertiseStatusToCompleteDelegate == null)) {
                this.onEndEditExpertiseStatusToCompleteDelegate = new EndOperationDelegate(this.OnEndEditExpertiseStatusToComplete);
            }
            if ((this.onEditExpertiseStatusToCompleteCompletedDelegate == null)) {
                this.onEditExpertiseStatusToCompleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditExpertiseStatusToCompleteCompleted);
            }
            base.InvokeAsync(this.onBeginEditExpertiseStatusToCompleteDelegate, new object[] {
                        id_expertise}, this.onEndEditExpertiseStatusToCompleteDelegate, this.onEditExpertiseStatusToCompleteCompletedDelegate, userState);
        }
        
        public bool EditExpertiseStatusToStart(int id_expertise) {
            return base.Channel.EditExpertiseStatusToStart(id_expertise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditExpertiseStatusToStart(int id_expertise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditExpertiseStatusToStart(id_expertise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEditExpertiseStatusToStart(System.IAsyncResult result) {
            return base.Channel.EndEditExpertiseStatusToStart(result);
        }
        
        private System.IAsyncResult OnBeginEditExpertiseStatusToStart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            return this.BeginEditExpertiseStatusToStart(id_expertise, callback, asyncState);
        }
        
        private object[] OnEndEditExpertiseStatusToStart(System.IAsyncResult result) {
            bool retVal = this.EndEditExpertiseStatusToStart(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditExpertiseStatusToStartCompleted(object state) {
            if ((this.EditExpertiseStatusToStartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditExpertiseStatusToStartCompleted(this, new EditExpertiseStatusToStartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditExpertiseStatusToStartAsync(int id_expertise) {
            this.EditExpertiseStatusToStartAsync(id_expertise, null);
        }
        
        public void EditExpertiseStatusToStartAsync(int id_expertise, object userState) {
            if ((this.onBeginEditExpertiseStatusToStartDelegate == null)) {
                this.onBeginEditExpertiseStatusToStartDelegate = new BeginOperationDelegate(this.OnBeginEditExpertiseStatusToStart);
            }
            if ((this.onEndEditExpertiseStatusToStartDelegate == null)) {
                this.onEndEditExpertiseStatusToStartDelegate = new EndOperationDelegate(this.OnEndEditExpertiseStatusToStart);
            }
            if ((this.onEditExpertiseStatusToStartCompletedDelegate == null)) {
                this.onEditExpertiseStatusToStartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditExpertiseStatusToStartCompleted);
            }
            base.InvokeAsync(this.onBeginEditExpertiseStatusToStartDelegate, new object[] {
                        id_expertise}, this.onEndEditExpertiseStatusToStartDelegate, this.onEditExpertiseStatusToStartCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myAuthors[] GetListAuthors() {
            return base.Channel.GetListAuthors();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAuthors(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAuthors(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.myAuthors[] EndGetListAuthors(System.IAsyncResult result) {
            return base.Channel.EndGetListAuthors(result);
        }
        
        private System.IAsyncResult OnBeginGetListAuthors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAuthors(callback, asyncState);
        }
        
        private object[] OnEndGetListAuthors(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.myAuthors[] retVal = this.EndGetListAuthors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAuthorsCompleted(object state) {
            if ((this.GetListAuthorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAuthorsCompleted(this, new GetListAuthorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAuthorsAsync() {
            this.GetListAuthorsAsync(null);
        }
        
        public void GetListAuthorsAsync(object userState) {
            if ((this.onBeginGetListAuthorsDelegate == null)) {
                this.onBeginGetListAuthorsDelegate = new BeginOperationDelegate(this.OnBeginGetListAuthors);
            }
            if ((this.onEndGetListAuthorsDelegate == null)) {
                this.onEndGetListAuthorsDelegate = new EndOperationDelegate(this.OnEndGetListAuthors);
            }
            if ((this.onGetListAuthorsCompletedDelegate == null)) {
                this.onGetListAuthorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAuthorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAuthorsDelegate, null, this.onEndGetListAuthorsDelegate, this.onGetListAuthorsCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myAuthors[] GetListAuthorsForProject(int id_project) {
            return base.Channel.GetListAuthorsForProject(id_project);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAuthorsForProject(int id_project, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAuthorsForProject(id_project, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.myAuthors[] EndGetListAuthorsForProject(System.IAsyncResult result) {
            return base.Channel.EndGetListAuthorsForProject(result);
        }
        
        private System.IAsyncResult OnBeginGetListAuthorsForProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_project = ((int)(inValues[0]));
            return this.BeginGetListAuthorsForProject(id_project, callback, asyncState);
        }
        
        private object[] OnEndGetListAuthorsForProject(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.myAuthors[] retVal = this.EndGetListAuthorsForProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAuthorsForProjectCompleted(object state) {
            if ((this.GetListAuthorsForProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAuthorsForProjectCompleted(this, new GetListAuthorsForProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAuthorsForProjectAsync(int id_project) {
            this.GetListAuthorsForProjectAsync(id_project, null);
        }
        
        public void GetListAuthorsForProjectAsync(int id_project, object userState) {
            if ((this.onBeginGetListAuthorsForProjectDelegate == null)) {
                this.onBeginGetListAuthorsForProjectDelegate = new BeginOperationDelegate(this.OnBeginGetListAuthorsForProject);
            }
            if ((this.onEndGetListAuthorsForProjectDelegate == null)) {
                this.onEndGetListAuthorsForProjectDelegate = new EndOperationDelegate(this.OnEndGetListAuthorsForProject);
            }
            if ((this.onGetListAuthorsForProjectCompletedDelegate == null)) {
                this.onGetListAuthorsForProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAuthorsForProjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAuthorsForProjectDelegate, new object[] {
                        id_project}, this.onEndGetListAuthorsForProjectDelegate, this.onGetListAuthorsForProjectCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Experts[] GetListExpertForProject(int id_project) {
            return base.Channel.GetListExpertForProject(id_project);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListExpertForProject(int id_project, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListExpertForProject(id_project, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Experts[] EndGetListExpertForProject(System.IAsyncResult result) {
            return base.Channel.EndGetListExpertForProject(result);
        }
        
        private System.IAsyncResult OnBeginGetListExpertForProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_project = ((int)(inValues[0]));
            return this.BeginGetListExpertForProject(id_project, callback, asyncState);
        }
        
        private object[] OnEndGetListExpertForProject(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Experts[] retVal = this.EndGetListExpertForProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListExpertForProjectCompleted(object state) {
            if ((this.GetListExpertForProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListExpertForProjectCompleted(this, new GetListExpertForProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListExpertForProjectAsync(int id_project) {
            this.GetListExpertForProjectAsync(id_project, null);
        }
        
        public void GetListExpertForProjectAsync(int id_project, object userState) {
            if ((this.onBeginGetListExpertForProjectDelegate == null)) {
                this.onBeginGetListExpertForProjectDelegate = new BeginOperationDelegate(this.OnBeginGetListExpertForProject);
            }
            if ((this.onEndGetListExpertForProjectDelegate == null)) {
                this.onEndGetListExpertForProjectDelegate = new EndOperationDelegate(this.OnEndGetListExpertForProject);
            }
            if ((this.onGetListExpertForProjectCompletedDelegate == null)) {
                this.onGetListExpertForProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListExpertForProjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetListExpertForProjectDelegate, new object[] {
                        id_project}, this.onEndGetListExpertForProjectDelegate, this.onGetListExpertForProjectCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] GetListCatCrit() {
            return base.Channel.GetListCatCrit();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListCatCrit(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListCatCrit(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] EndGetListCatCrit(System.IAsyncResult result) {
            return base.Channel.EndGetListCatCrit(result);
        }
        
        private System.IAsyncResult OnBeginGetListCatCrit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListCatCrit(callback, asyncState);
        }
        
        private object[] OnEndGetListCatCrit(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.CatCrit[] retVal = this.EndGetListCatCrit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListCatCritCompleted(object state) {
            if ((this.GetListCatCritCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListCatCritCompleted(this, new GetListCatCritCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListCatCritAsync() {
            this.GetListCatCritAsync(null);
        }
        
        public void GetListCatCritAsync(object userState) {
            if ((this.onBeginGetListCatCritDelegate == null)) {
                this.onBeginGetListCatCritDelegate = new BeginOperationDelegate(this.OnBeginGetListCatCrit);
            }
            if ((this.onEndGetListCatCritDelegate == null)) {
                this.onEndGetListCatCritDelegate = new EndOperationDelegate(this.OnEndGetListCatCrit);
            }
            if ((this.onGetListCatCritCompletedDelegate == null)) {
                this.onGetListCatCritCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListCatCritCompleted);
            }
            base.InvokeAsync(this.onBeginGetListCatCritDelegate, null, this.onEndGetListCatCritDelegate, this.onGetListCatCritCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Categories[] GetListCategories() {
            return base.Channel.GetListCategories();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListCategories(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListCategories(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Categories[] EndGetListCategories(System.IAsyncResult result) {
            return base.Channel.EndGetListCategories(result);
        }
        
        private System.IAsyncResult OnBeginGetListCategories(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListCategories(callback, asyncState);
        }
        
        private object[] OnEndGetListCategories(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Categories[] retVal = this.EndGetListCategories(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListCategoriesCompleted(object state) {
            if ((this.GetListCategoriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListCategoriesCompleted(this, new GetListCategoriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListCategoriesAsync() {
            this.GetListCategoriesAsync(null);
        }
        
        public void GetListCategoriesAsync(object userState) {
            if ((this.onBeginGetListCategoriesDelegate == null)) {
                this.onBeginGetListCategoriesDelegate = new BeginOperationDelegate(this.OnBeginGetListCategories);
            }
            if ((this.onEndGetListCategoriesDelegate == null)) {
                this.onEndGetListCategoriesDelegate = new EndOperationDelegate(this.OnEndGetListCategories);
            }
            if ((this.onGetListCategoriesCompletedDelegate == null)) {
                this.onGetListCategoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListCategoriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetListCategoriesDelegate, null, this.onEndGetListCategoriesDelegate, this.onGetListCategoriesCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Criterions[] GetListCriterions(int id_category) {
            return base.Channel.GetListCriterions(id_category);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListCriterions(int id_category, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListCriterions(id_category, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Criterions[] EndGetListCriterions(System.IAsyncResult result) {
            return base.Channel.EndGetListCriterions(result);
        }
        
        private System.IAsyncResult OnBeginGetListCriterions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_category = ((int)(inValues[0]));
            return this.BeginGetListCriterions(id_category, callback, asyncState);
        }
        
        private object[] OnEndGetListCriterions(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Criterions[] retVal = this.EndGetListCriterions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListCriterionsCompleted(object state) {
            if ((this.GetListCriterionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListCriterionsCompleted(this, new GetListCriterionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListCriterionsAsync(int id_category) {
            this.GetListCriterionsAsync(id_category, null);
        }
        
        public void GetListCriterionsAsync(int id_category, object userState) {
            if ((this.onBeginGetListCriterionsDelegate == null)) {
                this.onBeginGetListCriterionsDelegate = new BeginOperationDelegate(this.OnBeginGetListCriterions);
            }
            if ((this.onEndGetListCriterionsDelegate == null)) {
                this.onEndGetListCriterionsDelegate = new EndOperationDelegate(this.OnEndGetListCriterions);
            }
            if ((this.onGetListCriterionsCompletedDelegate == null)) {
                this.onGetListCriterionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListCriterionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListCriterionsDelegate, new object[] {
                        id_category}, this.onEndGetListCriterionsDelegate, this.onGetListCriterionsCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.CritValues[] GetListCritValues(int id_crit) {
            return base.Channel.GetListCritValues(id_crit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListCritValues(int id_crit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListCritValues(id_crit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.CritValues[] EndGetListCritValues(System.IAsyncResult result) {
            return base.Channel.EndGetListCritValues(result);
        }
        
        private System.IAsyncResult OnBeginGetListCritValues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_crit = ((int)(inValues[0]));
            return this.BeginGetListCritValues(id_crit, callback, asyncState);
        }
        
        private object[] OnEndGetListCritValues(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.CritValues[] retVal = this.EndGetListCritValues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListCritValuesCompleted(object state) {
            if ((this.GetListCritValuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListCritValuesCompleted(this, new GetListCritValuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListCritValuesAsync(int id_crit) {
            this.GetListCritValuesAsync(id_crit, null);
        }
        
        public void GetListCritValuesAsync(int id_crit, object userState) {
            if ((this.onBeginGetListCritValuesDelegate == null)) {
                this.onBeginGetListCritValuesDelegate = new BeginOperationDelegate(this.OnBeginGetListCritValues);
            }
            if ((this.onEndGetListCritValuesDelegate == null)) {
                this.onEndGetListCritValuesDelegate = new EndOperationDelegate(this.OnEndGetListCritValues);
            }
            if ((this.onGetListCritValuesCompletedDelegate == null)) {
                this.onGetListCritValuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListCritValuesCompleted);
            }
            base.InvokeAsync(this.onBeginGetListCritValuesDelegate, new object[] {
                        id_crit}, this.onEndGetListCritValuesDelegate, this.onGetListCritValuesCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.GRNTI[] GetListGRNTI() {
            return base.Channel.GetListGRNTI();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListGRNTI(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListGRNTI(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.GRNTI[] EndGetListGRNTI(System.IAsyncResult result) {
            return base.Channel.EndGetListGRNTI(result);
        }
        
        private System.IAsyncResult OnBeginGetListGRNTI(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListGRNTI(callback, asyncState);
        }
        
        private object[] OnEndGetListGRNTI(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.GRNTI[] retVal = this.EndGetListGRNTI(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListGRNTICompleted(object state) {
            if ((this.GetListGRNTICompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListGRNTICompleted(this, new GetListGRNTICompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListGRNTIAsync() {
            this.GetListGRNTIAsync(null);
        }
        
        public void GetListGRNTIAsync(object userState) {
            if ((this.onBeginGetListGRNTIDelegate == null)) {
                this.onBeginGetListGRNTIDelegate = new BeginOperationDelegate(this.OnBeginGetListGRNTI);
            }
            if ((this.onEndGetListGRNTIDelegate == null)) {
                this.onEndGetListGRNTIDelegate = new EndOperationDelegate(this.OnEndGetListGRNTI);
            }
            if ((this.onGetListGRNTICompletedDelegate == null)) {
                this.onGetListGRNTICompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListGRNTICompleted);
            }
            base.InvokeAsync(this.onBeginGetListGRNTIDelegate, null, this.onEndGetListGRNTIDelegate, this.onGetListGRNTICompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Experts[] GetListExperts() {
            return base.Channel.GetListExperts();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListExperts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListExperts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Experts[] EndGetListExperts(System.IAsyncResult result) {
            return base.Channel.EndGetListExperts(result);
        }
        
        private System.IAsyncResult OnBeginGetListExperts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListExperts(callback, asyncState);
        }
        
        private object[] OnEndGetListExperts(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Experts[] retVal = this.EndGetListExperts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListExpertsCompleted(object state) {
            if ((this.GetListExpertsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListExpertsCompleted(this, new GetListExpertsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListExpertsAsync() {
            this.GetListExpertsAsync(null);
        }
        
        public void GetListExpertsAsync(object userState) {
            if ((this.onBeginGetListExpertsDelegate == null)) {
                this.onBeginGetListExpertsDelegate = new BeginOperationDelegate(this.OnBeginGetListExperts);
            }
            if ((this.onEndGetListExpertsDelegate == null)) {
                this.onEndGetListExpertsDelegate = new EndOperationDelegate(this.OnEndGetListExperts);
            }
            if ((this.onGetListExpertsCompletedDelegate == null)) {
                this.onGetListExpertsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListExpertsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListExpertsDelegate, null, this.onEndGetListExpertsDelegate, this.onGetListExpertsCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ExpertsWithCountExpertise[] GetListExpertsWithCountExpertise() {
            return base.Channel.GetListExpertsWithCountExpertise();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListExpertsWithCountExpertise(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListExpertsWithCountExpertise(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.ExpertsWithCountExpertise[] EndGetListExpertsWithCountExpertise(System.IAsyncResult result) {
            return base.Channel.EndGetListExpertsWithCountExpertise(result);
        }
        
        private System.IAsyncResult OnBeginGetListExpertsWithCountExpertise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListExpertsWithCountExpertise(callback, asyncState);
        }
        
        private object[] OnEndGetListExpertsWithCountExpertise(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.ExpertsWithCountExpertise[] retVal = this.EndGetListExpertsWithCountExpertise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListExpertsWithCountExpertiseCompleted(object state) {
            if ((this.GetListExpertsWithCountExpertiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListExpertsWithCountExpertiseCompleted(this, new GetListExpertsWithCountExpertiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListExpertsWithCountExpertiseAsync() {
            this.GetListExpertsWithCountExpertiseAsync(null);
        }
        
        public void GetListExpertsWithCountExpertiseAsync(object userState) {
            if ((this.onBeginGetListExpertsWithCountExpertiseDelegate == null)) {
                this.onBeginGetListExpertsWithCountExpertiseDelegate = new BeginOperationDelegate(this.OnBeginGetListExpertsWithCountExpertise);
            }
            if ((this.onEndGetListExpertsWithCountExpertiseDelegate == null)) {
                this.onEndGetListExpertsWithCountExpertiseDelegate = new EndOperationDelegate(this.OnEndGetListExpertsWithCountExpertise);
            }
            if ((this.onGetListExpertsWithCountExpertiseCompletedDelegate == null)) {
                this.onGetListExpertsWithCountExpertiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListExpertsWithCountExpertiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetListExpertsWithCountExpertiseDelegate, null, this.onEndGetListExpertsWithCountExpertiseDelegate, this.onGetListExpertsWithCountExpertiseCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] GetListFOS() {
            return base.Channel.GetListFOS();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListFOS(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListFOS(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] EndGetListFOS(System.IAsyncResult result) {
            return base.Channel.EndGetListFOS(result);
        }
        
        private System.IAsyncResult OnBeginGetListFOS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListFOS(callback, asyncState);
        }
        
        private object[] OnEndGetListFOS(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] retVal = this.EndGetListFOS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListFOSCompleted(object state) {
            if ((this.GetListFOSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListFOSCompleted(this, new GetListFOSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListFOSAsync() {
            this.GetListFOSAsync(null);
        }
        
        public void GetListFOSAsync(object userState) {
            if ((this.onBeginGetListFOSDelegate == null)) {
                this.onBeginGetListFOSDelegate = new BeginOperationDelegate(this.OnBeginGetListFOS);
            }
            if ((this.onEndGetListFOSDelegate == null)) {
                this.onEndGetListFOSDelegate = new EndOperationDelegate(this.OnEndGetListFOS);
            }
            if ((this.onGetListFOSCompletedDelegate == null)) {
                this.onGetListFOSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListFOSCompleted);
            }
            base.InvokeAsync(this.onBeginGetListFOSDelegate, null, this.onEndGetListFOSDelegate, this.onGetListFOSCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myProject[] GetListProjects() {
            return base.Channel.GetListProjects();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListProjects(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListProjects(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.myProject[] EndGetListProjects(System.IAsyncResult result) {
            return base.Channel.EndGetListProjects(result);
        }
        
        private System.IAsyncResult OnBeginGetListProjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListProjects(callback, asyncState);
        }
        
        private object[] OnEndGetListProjects(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.myProject[] retVal = this.EndGetListProjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListProjectsCompleted(object state) {
            if ((this.GetListProjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListProjectsCompleted(this, new GetListProjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListProjectsAsync() {
            this.GetListProjectsAsync(null);
        }
        
        public void GetListProjectsAsync(object userState) {
            if ((this.onBeginGetListProjectsDelegate == null)) {
                this.onBeginGetListProjectsDelegate = new BeginOperationDelegate(this.OnBeginGetListProjects);
            }
            if ((this.onEndGetListProjectsDelegate == null)) {
                this.onEndGetListProjectsDelegate = new EndOperationDelegate(this.OnEndGetListProjects);
            }
            if ((this.onGetListProjectsCompletedDelegate == null)) {
                this.onGetListProjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListProjectsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListProjectsDelegate, null, this.onEndGetListProjectsDelegate, this.onGetListProjectsCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ProjectFos[] GetListProjectFos() {
            return base.Channel.GetListProjectFos();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListProjectFos(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListProjectFos(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.ProjectFos[] EndGetListProjectFos(System.IAsyncResult result) {
            return base.Channel.EndGetListProjectFos(result);
        }
        
        private System.IAsyncResult OnBeginGetListProjectFos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListProjectFos(callback, asyncState);
        }
        
        private object[] OnEndGetListProjectFos(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.ProjectFos[] retVal = this.EndGetListProjectFos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListProjectFosCompleted(object state) {
            if ((this.GetListProjectFosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListProjectFosCompleted(this, new GetListProjectFosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListProjectFosAsync() {
            this.GetListProjectFosAsync(null);
        }
        
        public void GetListProjectFosAsync(object userState) {
            if ((this.onBeginGetListProjectFosDelegate == null)) {
                this.onBeginGetListProjectFosDelegate = new BeginOperationDelegate(this.OnBeginGetListProjectFos);
            }
            if ((this.onEndGetListProjectFosDelegate == null)) {
                this.onEndGetListProjectFosDelegate = new EndOperationDelegate(this.OnEndGetListProjectFos);
            }
            if ((this.onGetListProjectFosCompletedDelegate == null)) {
                this.onGetListProjectFosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListProjectFosCompleted);
            }
            base.InvokeAsync(this.onBeginGetListProjectFosDelegate, null, this.onEndGetListProjectFosDelegate, this.onGetListProjectFosCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Expertises[] GetListExpertisesForExpert(int id_expert) {
            return base.Channel.GetListExpertisesForExpert(id_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListExpertisesForExpert(int id_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListExpertisesForExpert(id_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Expertises[] EndGetListExpertisesForExpert(System.IAsyncResult result) {
            return base.Channel.EndGetListExpertisesForExpert(result);
        }
        
        private System.IAsyncResult OnBeginGetListExpertisesForExpert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expert = ((int)(inValues[0]));
            return this.BeginGetListExpertisesForExpert(id_expert, callback, asyncState);
        }
        
        private object[] OnEndGetListExpertisesForExpert(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Expertises[] retVal = this.EndGetListExpertisesForExpert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListExpertisesForExpertCompleted(object state) {
            if ((this.GetListExpertisesForExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListExpertisesForExpertCompleted(this, new GetListExpertisesForExpertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListExpertisesForExpertAsync(int id_expert) {
            this.GetListExpertisesForExpertAsync(id_expert, null);
        }
        
        public void GetListExpertisesForExpertAsync(int id_expert, object userState) {
            if ((this.onBeginGetListExpertisesForExpertDelegate == null)) {
                this.onBeginGetListExpertisesForExpertDelegate = new BeginOperationDelegate(this.OnBeginGetListExpertisesForExpert);
            }
            if ((this.onEndGetListExpertisesForExpertDelegate == null)) {
                this.onEndGetListExpertisesForExpertDelegate = new EndOperationDelegate(this.OnEndGetListExpertisesForExpert);
            }
            if ((this.onGetListExpertisesForExpertCompletedDelegate == null)) {
                this.onGetListExpertisesForExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListExpertisesForExpertCompleted);
            }
            base.InvokeAsync(this.onBeginGetListExpertisesForExpertDelegate, new object[] {
                        id_expert}, this.onEndGetListExpertisesForExpertDelegate, this.onGetListExpertisesForExpertCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myCurrentexpertises[] GetListCurrentExpertises() {
            return base.Channel.GetListCurrentExpertises();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListCurrentExpertises(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListCurrentExpertises(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.myCurrentexpertises[] EndGetListCurrentExpertises(System.IAsyncResult result) {
            return base.Channel.EndGetListCurrentExpertises(result);
        }
        
        private System.IAsyncResult OnBeginGetListCurrentExpertises(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListCurrentExpertises(callback, asyncState);
        }
        
        private object[] OnEndGetListCurrentExpertises(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.myCurrentexpertises[] retVal = this.EndGetListCurrentExpertises(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListCurrentExpertisesCompleted(object state) {
            if ((this.GetListCurrentExpertisesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListCurrentExpertisesCompleted(this, new GetListCurrentExpertisesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListCurrentExpertisesAsync() {
            this.GetListCurrentExpertisesAsync(null);
        }
        
        public void GetListCurrentExpertisesAsync(object userState) {
            if ((this.onBeginGetListCurrentExpertisesDelegate == null)) {
                this.onBeginGetListCurrentExpertisesDelegate = new BeginOperationDelegate(this.OnBeginGetListCurrentExpertises);
            }
            if ((this.onEndGetListCurrentExpertisesDelegate == null)) {
                this.onEndGetListCurrentExpertisesDelegate = new EndOperationDelegate(this.OnEndGetListCurrentExpertises);
            }
            if ((this.onGetListCurrentExpertisesCompletedDelegate == null)) {
                this.onGetListCurrentExpertisesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListCurrentExpertisesCompleted);
            }
            base.InvokeAsync(this.onBeginGetListCurrentExpertisesDelegate, null, this.onEndGetListCurrentExpertisesDelegate, this.onGetListCurrentExpertisesCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Authors[] GetListAllAuthors() {
            return base.Channel.GetListAllAuthors();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllAuthors(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllAuthors(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Authors[] EndGetListAllAuthors(System.IAsyncResult result) {
            return base.Channel.EndGetListAllAuthors(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllAuthors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllAuthors(callback, asyncState);
        }
        
        private object[] OnEndGetListAllAuthors(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Authors[] retVal = this.EndGetListAllAuthors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllAuthorsCompleted(object state) {
            if ((this.GetListAllAuthorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllAuthorsCompleted(this, new GetListAllAuthorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllAuthorsAsync() {
            this.GetListAllAuthorsAsync(null);
        }
        
        public void GetListAllAuthorsAsync(object userState) {
            if ((this.onBeginGetListAllAuthorsDelegate == null)) {
                this.onBeginGetListAllAuthorsDelegate = new BeginOperationDelegate(this.OnBeginGetListAllAuthors);
            }
            if ((this.onEndGetListAllAuthorsDelegate == null)) {
                this.onEndGetListAllAuthorsDelegate = new EndOperationDelegate(this.OnEndGetListAllAuthors);
            }
            if ((this.onGetListAllAuthorsCompletedDelegate == null)) {
                this.onGetListAllAuthorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllAuthorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllAuthorsDelegate, null, this.onEndGetListAllAuthorsDelegate, this.onGetListAllAuthorsCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] GetListAllCatCrit() {
            return base.Channel.GetListAllCatCrit();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllCatCrit(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllCatCrit(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.CatCrit[] EndGetListAllCatCrit(System.IAsyncResult result) {
            return base.Channel.EndGetListAllCatCrit(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllCatCrit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllCatCrit(callback, asyncState);
        }
        
        private object[] OnEndGetListAllCatCrit(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.CatCrit[] retVal = this.EndGetListAllCatCrit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllCatCritCompleted(object state) {
            if ((this.GetListAllCatCritCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllCatCritCompleted(this, new GetListAllCatCritCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllCatCritAsync() {
            this.GetListAllCatCritAsync(null);
        }
        
        public void GetListAllCatCritAsync(object userState) {
            if ((this.onBeginGetListAllCatCritDelegate == null)) {
                this.onBeginGetListAllCatCritDelegate = new BeginOperationDelegate(this.OnBeginGetListAllCatCrit);
            }
            if ((this.onEndGetListAllCatCritDelegate == null)) {
                this.onEndGetListAllCatCritDelegate = new EndOperationDelegate(this.OnEndGetListAllCatCrit);
            }
            if ((this.onGetListAllCatCritCompletedDelegate == null)) {
                this.onGetListAllCatCritCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllCatCritCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllCatCritDelegate, null, this.onEndGetListAllCatCritDelegate, this.onGetListAllCatCritCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Categories[] GetListAllCategories() {
            return base.Channel.GetListAllCategories();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllCategories(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllCategories(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Categories[] EndGetListAllCategories(System.IAsyncResult result) {
            return base.Channel.EndGetListAllCategories(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllCategories(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllCategories(callback, asyncState);
        }
        
        private object[] OnEndGetListAllCategories(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Categories[] retVal = this.EndGetListAllCategories(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllCategoriesCompleted(object state) {
            if ((this.GetListAllCategoriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllCategoriesCompleted(this, new GetListAllCategoriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllCategoriesAsync() {
            this.GetListAllCategoriesAsync(null);
        }
        
        public void GetListAllCategoriesAsync(object userState) {
            if ((this.onBeginGetListAllCategoriesDelegate == null)) {
                this.onBeginGetListAllCategoriesDelegate = new BeginOperationDelegate(this.OnBeginGetListAllCategories);
            }
            if ((this.onEndGetListAllCategoriesDelegate == null)) {
                this.onEndGetListAllCategoriesDelegate = new EndOperationDelegate(this.OnEndGetListAllCategories);
            }
            if ((this.onGetListAllCategoriesCompletedDelegate == null)) {
                this.onGetListAllCategoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllCategoriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllCategoriesDelegate, null, this.onEndGetListAllCategoriesDelegate, this.onGetListAllCategoriesCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Criterions[] GetListAllCriterions() {
            return base.Channel.GetListAllCriterions();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllCriterions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllCriterions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Criterions[] EndGetListAllCriterions(System.IAsyncResult result) {
            return base.Channel.EndGetListAllCriterions(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllCriterions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllCriterions(callback, asyncState);
        }
        
        private object[] OnEndGetListAllCriterions(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Criterions[] retVal = this.EndGetListAllCriterions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllCriterionsCompleted(object state) {
            if ((this.GetListAllCriterionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllCriterionsCompleted(this, new GetListAllCriterionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllCriterionsAsync() {
            this.GetListAllCriterionsAsync(null);
        }
        
        public void GetListAllCriterionsAsync(object userState) {
            if ((this.onBeginGetListAllCriterionsDelegate == null)) {
                this.onBeginGetListAllCriterionsDelegate = new BeginOperationDelegate(this.OnBeginGetListAllCriterions);
            }
            if ((this.onEndGetListAllCriterionsDelegate == null)) {
                this.onEndGetListAllCriterionsDelegate = new EndOperationDelegate(this.OnEndGetListAllCriterions);
            }
            if ((this.onGetListAllCriterionsCompletedDelegate == null)) {
                this.onGetListAllCriterionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllCriterionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllCriterionsDelegate, null, this.onEndGetListAllCriterionsDelegate, this.onGetListAllCriterionsCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.CritValues[] GetListAllCritValues() {
            return base.Channel.GetListAllCritValues();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllCritValues(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllCritValues(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.CritValues[] EndGetListAllCritValues(System.IAsyncResult result) {
            return base.Channel.EndGetListAllCritValues(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllCritValues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllCritValues(callback, asyncState);
        }
        
        private object[] OnEndGetListAllCritValues(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.CritValues[] retVal = this.EndGetListAllCritValues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllCritValuesCompleted(object state) {
            if ((this.GetListAllCritValuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllCritValuesCompleted(this, new GetListAllCritValuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllCritValuesAsync() {
            this.GetListAllCritValuesAsync(null);
        }
        
        public void GetListAllCritValuesAsync(object userState) {
            if ((this.onBeginGetListAllCritValuesDelegate == null)) {
                this.onBeginGetListAllCritValuesDelegate = new BeginOperationDelegate(this.OnBeginGetListAllCritValues);
            }
            if ((this.onEndGetListAllCritValuesDelegate == null)) {
                this.onEndGetListAllCritValuesDelegate = new EndOperationDelegate(this.OnEndGetListAllCritValues);
            }
            if ((this.onGetListAllCritValuesCompletedDelegate == null)) {
                this.onGetListAllCritValuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllCritValuesCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllCritValuesDelegate, null, this.onEndGetListAllCritValuesDelegate, this.onGetListAllCritValuesCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ExpCrit[] GetListAllExpCrit() {
            return base.Channel.GetListAllExpCrit();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllExpCrit(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllExpCrit(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.ExpCrit[] EndGetListAllExpCrit(System.IAsyncResult result) {
            return base.Channel.EndGetListAllExpCrit(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllExpCrit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllExpCrit(callback, asyncState);
        }
        
        private object[] OnEndGetListAllExpCrit(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.ExpCrit[] retVal = this.EndGetListAllExpCrit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllExpCritCompleted(object state) {
            if ((this.GetListAllExpCritCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllExpCritCompleted(this, new GetListAllExpCritCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllExpCritAsync() {
            this.GetListAllExpCritAsync(null);
        }
        
        public void GetListAllExpCritAsync(object userState) {
            if ((this.onBeginGetListAllExpCritDelegate == null)) {
                this.onBeginGetListAllExpCritDelegate = new BeginOperationDelegate(this.OnBeginGetListAllExpCrit);
            }
            if ((this.onEndGetListAllExpCritDelegate == null)) {
                this.onEndGetListAllExpCritDelegate = new EndOperationDelegate(this.OnEndGetListAllExpCrit);
            }
            if ((this.onGetListAllExpCritCompletedDelegate == null)) {
                this.onGetListAllExpCritCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllExpCritCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllExpCritDelegate, null, this.onEndGetListAllExpCritDelegate, this.onGetListAllExpCritCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ExpertFos[] GetListAllExpertFos() {
            return base.Channel.GetListAllExpertFos();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllExpertFos(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllExpertFos(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.ExpertFos[] EndGetListAllExpertFos(System.IAsyncResult result) {
            return base.Channel.EndGetListAllExpertFos(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllExpertFos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllExpertFos(callback, asyncState);
        }
        
        private object[] OnEndGetListAllExpertFos(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.ExpertFos[] retVal = this.EndGetListAllExpertFos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllExpertFosCompleted(object state) {
            if ((this.GetListAllExpertFosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllExpertFosCompleted(this, new GetListAllExpertFosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllExpertFosAsync() {
            this.GetListAllExpertFosAsync(null);
        }
        
        public void GetListAllExpertFosAsync(object userState) {
            if ((this.onBeginGetListAllExpertFosDelegate == null)) {
                this.onBeginGetListAllExpertFosDelegate = new BeginOperationDelegate(this.OnBeginGetListAllExpertFos);
            }
            if ((this.onEndGetListAllExpertFosDelegate == null)) {
                this.onEndGetListAllExpertFosDelegate = new EndOperationDelegate(this.OnEndGetListAllExpertFos);
            }
            if ((this.onGetListAllExpertFosCompletedDelegate == null)) {
                this.onGetListAllExpertFosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllExpertFosCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllExpertFosDelegate, null, this.onEndGetListAllExpertFosDelegate, this.onGetListAllExpertFosCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] GetListAllExpertiseExpert() {
            return base.Channel.GetListAllExpertiseExpert();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllExpertiseExpert(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllExpertiseExpert(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] EndGetListAllExpertiseExpert(System.IAsyncResult result) {
            return base.Channel.EndGetListAllExpertiseExpert(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllExpertiseExpert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllExpertiseExpert(callback, asyncState);
        }
        
        private object[] OnEndGetListAllExpertiseExpert(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] retVal = this.EndGetListAllExpertiseExpert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllExpertiseExpertCompleted(object state) {
            if ((this.GetListAllExpertiseExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllExpertiseExpertCompleted(this, new GetListAllExpertiseExpertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllExpertiseExpertAsync() {
            this.GetListAllExpertiseExpertAsync(null);
        }
        
        public void GetListAllExpertiseExpertAsync(object userState) {
            if ((this.onBeginGetListAllExpertiseExpertDelegate == null)) {
                this.onBeginGetListAllExpertiseExpertDelegate = new BeginOperationDelegate(this.OnBeginGetListAllExpertiseExpert);
            }
            if ((this.onEndGetListAllExpertiseExpertDelegate == null)) {
                this.onEndGetListAllExpertiseExpertDelegate = new EndOperationDelegate(this.OnEndGetListAllExpertiseExpert);
            }
            if ((this.onGetListAllExpertiseExpertCompletedDelegate == null)) {
                this.onGetListAllExpertiseExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllExpertiseExpertCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllExpertiseExpertDelegate, null, this.onEndGetListAllExpertiseExpertDelegate, this.onGetListAllExpertiseExpertCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[] GetListAllExpertiseMark() {
            return base.Channel.GetListAllExpertiseMark();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllExpertiseMark(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllExpertiseMark(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[] EndGetListAllExpertiseMark(System.IAsyncResult result) {
            return base.Channel.EndGetListAllExpertiseMark(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllExpertiseMark(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllExpertiseMark(callback, asyncState);
        }
        
        private object[] OnEndGetListAllExpertiseMark(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.ExpertiseMark[] retVal = this.EndGetListAllExpertiseMark(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllExpertiseMarkCompleted(object state) {
            if ((this.GetListAllExpertiseMarkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllExpertiseMarkCompleted(this, new GetListAllExpertiseMarkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllExpertiseMarkAsync() {
            this.GetListAllExpertiseMarkAsync(null);
        }
        
        public void GetListAllExpertiseMarkAsync(object userState) {
            if ((this.onBeginGetListAllExpertiseMarkDelegate == null)) {
                this.onBeginGetListAllExpertiseMarkDelegate = new BeginOperationDelegate(this.OnBeginGetListAllExpertiseMark);
            }
            if ((this.onEndGetListAllExpertiseMarkDelegate == null)) {
                this.onEndGetListAllExpertiseMarkDelegate = new EndOperationDelegate(this.OnEndGetListAllExpertiseMark);
            }
            if ((this.onGetListAllExpertiseMarkCompletedDelegate == null)) {
                this.onGetListAllExpertiseMarkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllExpertiseMarkCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllExpertiseMarkDelegate, null, this.onEndGetListAllExpertiseMarkDelegate, this.onGetListAllExpertiseMarkCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Expertises[] GetListAllExpertises() {
            return base.Channel.GetListAllExpertises();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllExpertises(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllExpertises(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Expertises[] EndGetListAllExpertises(System.IAsyncResult result) {
            return base.Channel.EndGetListAllExpertises(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllExpertises(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllExpertises(callback, asyncState);
        }
        
        private object[] OnEndGetListAllExpertises(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Expertises[] retVal = this.EndGetListAllExpertises(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllExpertisesCompleted(object state) {
            if ((this.GetListAllExpertisesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllExpertisesCompleted(this, new GetListAllExpertisesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllExpertisesAsync() {
            this.GetListAllExpertisesAsync(null);
        }
        
        public void GetListAllExpertisesAsync(object userState) {
            if ((this.onBeginGetListAllExpertisesDelegate == null)) {
                this.onBeginGetListAllExpertisesDelegate = new BeginOperationDelegate(this.OnBeginGetListAllExpertises);
            }
            if ((this.onEndGetListAllExpertisesDelegate == null)) {
                this.onEndGetListAllExpertisesDelegate = new EndOperationDelegate(this.OnEndGetListAllExpertises);
            }
            if ((this.onGetListAllExpertisesCompletedDelegate == null)) {
                this.onGetListAllExpertisesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllExpertisesCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllExpertisesDelegate, null, this.onEndGetListAllExpertisesDelegate, this.onGetListAllExpertisesCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Experts[] GetListAllExperts() {
            return base.Channel.GetListAllExperts();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllExperts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllExperts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Experts[] EndGetListAllExperts(System.IAsyncResult result) {
            return base.Channel.EndGetListAllExperts(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllExperts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllExperts(callback, asyncState);
        }
        
        private object[] OnEndGetListAllExperts(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Experts[] retVal = this.EndGetListAllExperts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllExpertsCompleted(object state) {
            if ((this.GetListAllExpertsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllExpertsCompleted(this, new GetListAllExpertsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllExpertsAsync() {
            this.GetListAllExpertsAsync(null);
        }
        
        public void GetListAllExpertsAsync(object userState) {
            if ((this.onBeginGetListAllExpertsDelegate == null)) {
                this.onBeginGetListAllExpertsDelegate = new BeginOperationDelegate(this.OnBeginGetListAllExperts);
            }
            if ((this.onEndGetListAllExpertsDelegate == null)) {
                this.onEndGetListAllExpertsDelegate = new EndOperationDelegate(this.OnEndGetListAllExperts);
            }
            if ((this.onGetListAllExpertsCompletedDelegate == null)) {
                this.onGetListAllExpertsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllExpertsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllExpertsDelegate, null, this.onEndGetListAllExpertsDelegate, this.onGetListAllExpertsCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] GetListAllFiledsOfScience() {
            return base.Channel.GetListAllFiledsOfScience();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllFiledsOfScience(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllFiledsOfScience(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] EndGetListAllFiledsOfScience(System.IAsyncResult result) {
            return base.Channel.EndGetListAllFiledsOfScience(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllFiledsOfScience(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllFiledsOfScience(callback, asyncState);
        }
        
        private object[] OnEndGetListAllFiledsOfScience(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.FiledsOfScience[] retVal = this.EndGetListAllFiledsOfScience(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllFiledsOfScienceCompleted(object state) {
            if ((this.GetListAllFiledsOfScienceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllFiledsOfScienceCompleted(this, new GetListAllFiledsOfScienceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllFiledsOfScienceAsync() {
            this.GetListAllFiledsOfScienceAsync(null);
        }
        
        public void GetListAllFiledsOfScienceAsync(object userState) {
            if ((this.onBeginGetListAllFiledsOfScienceDelegate == null)) {
                this.onBeginGetListAllFiledsOfScienceDelegate = new BeginOperationDelegate(this.OnBeginGetListAllFiledsOfScience);
            }
            if ((this.onEndGetListAllFiledsOfScienceDelegate == null)) {
                this.onEndGetListAllFiledsOfScienceDelegate = new EndOperationDelegate(this.OnEndGetListAllFiledsOfScience);
            }
            if ((this.onGetListAllFiledsOfScienceCompletedDelegate == null)) {
                this.onGetListAllFiledsOfScienceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllFiledsOfScienceCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllFiledsOfScienceDelegate, null, this.onEndGetListAllFiledsOfScienceDelegate, this.onGetListAllFiledsOfScienceCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.GRNTI[] GetListAllGRNTI() {
            return base.Channel.GetListAllGRNTI();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllGRNTI(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllGRNTI(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.GRNTI[] EndGetListAllGRNTI(System.IAsyncResult result) {
            return base.Channel.EndGetListAllGRNTI(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllGRNTI(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllGRNTI(callback, asyncState);
        }
        
        private object[] OnEndGetListAllGRNTI(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.GRNTI[] retVal = this.EndGetListAllGRNTI(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllGRNTICompleted(object state) {
            if ((this.GetListAllGRNTICompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllGRNTICompleted(this, new GetListAllGRNTICompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllGRNTIAsync() {
            this.GetListAllGRNTIAsync(null);
        }
        
        public void GetListAllGRNTIAsync(object userState) {
            if ((this.onBeginGetListAllGRNTIDelegate == null)) {
                this.onBeginGetListAllGRNTIDelegate = new BeginOperationDelegate(this.OnBeginGetListAllGRNTI);
            }
            if ((this.onEndGetListAllGRNTIDelegate == null)) {
                this.onEndGetListAllGRNTIDelegate = new EndOperationDelegate(this.OnEndGetListAllGRNTI);
            }
            if ((this.onGetListAllGRNTICompletedDelegate == null)) {
                this.onGetListAllGRNTICompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllGRNTICompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllGRNTIDelegate, null, this.onEndGetListAllGRNTIDelegate, this.onGetListAllGRNTICompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Marks[] GetListAllMarks() {
            return base.Channel.GetListAllMarks();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllMarks(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllMarks(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Marks[] EndGetListAllMarks(System.IAsyncResult result) {
            return base.Channel.EndGetListAllMarks(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllMarks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllMarks(callback, asyncState);
        }
        
        private object[] OnEndGetListAllMarks(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Marks[] retVal = this.EndGetListAllMarks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllMarksCompleted(object state) {
            if ((this.GetListAllMarksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllMarksCompleted(this, new GetListAllMarksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllMarksAsync() {
            this.GetListAllMarksAsync(null);
        }
        
        public void GetListAllMarksAsync(object userState) {
            if ((this.onBeginGetListAllMarksDelegate == null)) {
                this.onBeginGetListAllMarksDelegate = new BeginOperationDelegate(this.OnBeginGetListAllMarks);
            }
            if ((this.onEndGetListAllMarksDelegate == null)) {
                this.onEndGetListAllMarksDelegate = new EndOperationDelegate(this.OnEndGetListAllMarks);
            }
            if ((this.onGetListAllMarksCompletedDelegate == null)) {
                this.onGetListAllMarksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllMarksCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllMarksDelegate, null, this.onEndGetListAllMarksDelegate, this.onGetListAllMarksCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[] GetListAllProjectAuthors() {
            return base.Channel.GetListAllProjectAuthors();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllProjectAuthors(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllProjectAuthors(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[] EndGetListAllProjectAuthors(System.IAsyncResult result) {
            return base.Channel.EndGetListAllProjectAuthors(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllProjectAuthors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllProjectAuthors(callback, asyncState);
        }
        
        private object[] OnEndGetListAllProjectAuthors(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.ProjectAuthors[] retVal = this.EndGetListAllProjectAuthors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllProjectAuthorsCompleted(object state) {
            if ((this.GetListAllProjectAuthorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllProjectAuthorsCompleted(this, new GetListAllProjectAuthorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllProjectAuthorsAsync() {
            this.GetListAllProjectAuthorsAsync(null);
        }
        
        public void GetListAllProjectAuthorsAsync(object userState) {
            if ((this.onBeginGetListAllProjectAuthorsDelegate == null)) {
                this.onBeginGetListAllProjectAuthorsDelegate = new BeginOperationDelegate(this.OnBeginGetListAllProjectAuthors);
            }
            if ((this.onEndGetListAllProjectAuthorsDelegate == null)) {
                this.onEndGetListAllProjectAuthorsDelegate = new EndOperationDelegate(this.OnEndGetListAllProjectAuthors);
            }
            if ((this.onGetListAllProjectAuthorsCompletedDelegate == null)) {
                this.onGetListAllProjectAuthorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllProjectAuthorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllProjectAuthorsDelegate, null, this.onEndGetListAllProjectAuthorsDelegate, this.onGetListAllProjectAuthorsCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] GetListAllProjectExpertise() {
            return base.Channel.GetListAllProjectExpertise();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllProjectExpertise(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllProjectExpertise(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] EndGetListAllProjectExpertise(System.IAsyncResult result) {
            return base.Channel.EndGetListAllProjectExpertise(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllProjectExpertise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllProjectExpertise(callback, asyncState);
        }
        
        private object[] OnEndGetListAllProjectExpertise(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] retVal = this.EndGetListAllProjectExpertise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllProjectExpertiseCompleted(object state) {
            if ((this.GetListAllProjectExpertiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllProjectExpertiseCompleted(this, new GetListAllProjectExpertiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllProjectExpertiseAsync() {
            this.GetListAllProjectExpertiseAsync(null);
        }
        
        public void GetListAllProjectExpertiseAsync(object userState) {
            if ((this.onBeginGetListAllProjectExpertiseDelegate == null)) {
                this.onBeginGetListAllProjectExpertiseDelegate = new BeginOperationDelegate(this.OnBeginGetListAllProjectExpertise);
            }
            if ((this.onEndGetListAllProjectExpertiseDelegate == null)) {
                this.onEndGetListAllProjectExpertiseDelegate = new EndOperationDelegate(this.OnEndGetListAllProjectExpertise);
            }
            if ((this.onGetListAllProjectExpertiseCompletedDelegate == null)) {
                this.onGetListAllProjectExpertiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllProjectExpertiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllProjectExpertiseDelegate, null, this.onEndGetListAllProjectExpertiseDelegate, this.onGetListAllProjectExpertiseCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ProjectFos[] GetListAllProjectFos() {
            return base.Channel.GetListAllProjectFos();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllProjectFos(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllProjectFos(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.ProjectFos[] EndGetListAllProjectFos(System.IAsyncResult result) {
            return base.Channel.EndGetListAllProjectFos(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllProjectFos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllProjectFos(callback, asyncState);
        }
        
        private object[] OnEndGetListAllProjectFos(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.ProjectFos[] retVal = this.EndGetListAllProjectFos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllProjectFosCompleted(object state) {
            if ((this.GetListAllProjectFosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllProjectFosCompleted(this, new GetListAllProjectFosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllProjectFosAsync() {
            this.GetListAllProjectFosAsync(null);
        }
        
        public void GetListAllProjectFosAsync(object userState) {
            if ((this.onBeginGetListAllProjectFosDelegate == null)) {
                this.onBeginGetListAllProjectFosDelegate = new BeginOperationDelegate(this.OnBeginGetListAllProjectFos);
            }
            if ((this.onEndGetListAllProjectFosDelegate == null)) {
                this.onEndGetListAllProjectFosDelegate = new EndOperationDelegate(this.OnEndGetListAllProjectFos);
            }
            if ((this.onGetListAllProjectFosCompletedDelegate == null)) {
                this.onGetListAllProjectFosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllProjectFosCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllProjectFosDelegate, null, this.onEndGetListAllProjectFosDelegate, this.onGetListAllProjectFosCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Projects[] GetListAllProjects() {
            return base.Channel.GetListAllProjects();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAllProjects(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAllProjects(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Projects[] EndGetListAllProjects(System.IAsyncResult result) {
            return base.Channel.EndGetListAllProjects(result);
        }
        
        private System.IAsyncResult OnBeginGetListAllProjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAllProjects(callback, asyncState);
        }
        
        private object[] OnEndGetListAllProjects(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Projects[] retVal = this.EndGetListAllProjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAllProjectsCompleted(object state) {
            if ((this.GetListAllProjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAllProjectsCompleted(this, new GetListAllProjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAllProjectsAsync() {
            this.GetListAllProjectsAsync(null);
        }
        
        public void GetListAllProjectsAsync(object userState) {
            if ((this.onBeginGetListAllProjectsDelegate == null)) {
                this.onBeginGetListAllProjectsDelegate = new BeginOperationDelegate(this.OnBeginGetListAllProjects);
            }
            if ((this.onEndGetListAllProjectsDelegate == null)) {
                this.onEndGetListAllProjectsDelegate = new EndOperationDelegate(this.OnEndGetListAllProjects);
            }
            if ((this.onGetListAllProjectsCompletedDelegate == null)) {
                this.onGetListAllProjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAllProjectsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAllProjectsDelegate, null, this.onEndGetListAllProjectsDelegate, this.onGetListAllProjectsCompletedDelegate, userState);
        }
        
        public bool AddNewAuthors(string surname_author, string name_author, string patronymic_author) {
            return base.Channel.AddNewAuthors(surname_author, name_author, patronymic_author);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewAuthors(string surname_author, string name_author, string patronymic_author, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewAuthors(surname_author, name_author, patronymic_author, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewAuthors(System.IAsyncResult result) {
            return base.Channel.EndAddNewAuthors(result);
        }
        
        private System.IAsyncResult OnBeginAddNewAuthors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string surname_author = ((string)(inValues[0]));
            string name_author = ((string)(inValues[1]));
            string patronymic_author = ((string)(inValues[2]));
            return this.BeginAddNewAuthors(surname_author, name_author, patronymic_author, callback, asyncState);
        }
        
        private object[] OnEndAddNewAuthors(System.IAsyncResult result) {
            bool retVal = this.EndAddNewAuthors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewAuthorsCompleted(object state) {
            if ((this.AddNewAuthorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewAuthorsCompleted(this, new AddNewAuthorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewAuthorsAsync(string surname_author, string name_author, string patronymic_author) {
            this.AddNewAuthorsAsync(surname_author, name_author, patronymic_author, null);
        }
        
        public void AddNewAuthorsAsync(string surname_author, string name_author, string patronymic_author, object userState) {
            if ((this.onBeginAddNewAuthorsDelegate == null)) {
                this.onBeginAddNewAuthorsDelegate = new BeginOperationDelegate(this.OnBeginAddNewAuthors);
            }
            if ((this.onEndAddNewAuthorsDelegate == null)) {
                this.onEndAddNewAuthorsDelegate = new EndOperationDelegate(this.OnEndAddNewAuthors);
            }
            if ((this.onAddNewAuthorsCompletedDelegate == null)) {
                this.onAddNewAuthorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewAuthorsCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewAuthorsDelegate, new object[] {
                        surname_author,
                        name_author,
                        patronymic_author}, this.onEndAddNewAuthorsDelegate, this.onAddNewAuthorsCompletedDelegate, userState);
        }
        
        public bool AddNewCatCrit(int id_cat, int id_crit) {
            return base.Channel.AddNewCatCrit(id_cat, id_crit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewCatCrit(int id_cat, int id_crit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewCatCrit(id_cat, id_crit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewCatCrit(System.IAsyncResult result) {
            return base.Channel.EndAddNewCatCrit(result);
        }
        
        private System.IAsyncResult OnBeginAddNewCatCrit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_cat = ((int)(inValues[0]));
            int id_crit = ((int)(inValues[1]));
            return this.BeginAddNewCatCrit(id_cat, id_crit, callback, asyncState);
        }
        
        private object[] OnEndAddNewCatCrit(System.IAsyncResult result) {
            bool retVal = this.EndAddNewCatCrit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewCatCritCompleted(object state) {
            if ((this.AddNewCatCritCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewCatCritCompleted(this, new AddNewCatCritCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewCatCritAsync(int id_cat, int id_crit) {
            this.AddNewCatCritAsync(id_cat, id_crit, null);
        }
        
        public void AddNewCatCritAsync(int id_cat, int id_crit, object userState) {
            if ((this.onBeginAddNewCatCritDelegate == null)) {
                this.onBeginAddNewCatCritDelegate = new BeginOperationDelegate(this.OnBeginAddNewCatCrit);
            }
            if ((this.onEndAddNewCatCritDelegate == null)) {
                this.onEndAddNewCatCritDelegate = new EndOperationDelegate(this.OnEndAddNewCatCrit);
            }
            if ((this.onAddNewCatCritCompletedDelegate == null)) {
                this.onAddNewCatCritCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewCatCritCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewCatCritDelegate, new object[] {
                        id_cat,
                        id_crit}, this.onEndAddNewCatCritDelegate, this.onAddNewCatCritCompletedDelegate, userState);
        }
        
        public bool AddNewCategories(string name_category) {
            return base.Channel.AddNewCategories(name_category);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewCategories(string name_category, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewCategories(name_category, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewCategories(System.IAsyncResult result) {
            return base.Channel.EndAddNewCategories(result);
        }
        
        private System.IAsyncResult OnBeginAddNewCategories(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_category = ((string)(inValues[0]));
            return this.BeginAddNewCategories(name_category, callback, asyncState);
        }
        
        private object[] OnEndAddNewCategories(System.IAsyncResult result) {
            bool retVal = this.EndAddNewCategories(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewCategoriesCompleted(object state) {
            if ((this.AddNewCategoriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewCategoriesCompleted(this, new AddNewCategoriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewCategoriesAsync(string name_category) {
            this.AddNewCategoriesAsync(name_category, null);
        }
        
        public void AddNewCategoriesAsync(string name_category, object userState) {
            if ((this.onBeginAddNewCategoriesDelegate == null)) {
                this.onBeginAddNewCategoriesDelegate = new BeginOperationDelegate(this.OnBeginAddNewCategories);
            }
            if ((this.onEndAddNewCategoriesDelegate == null)) {
                this.onEndAddNewCategoriesDelegate = new EndOperationDelegate(this.OnEndAddNewCategories);
            }
            if ((this.onAddNewCategoriesCompletedDelegate == null)) {
                this.onAddNewCategoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewCategoriesCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewCategoriesDelegate, new object[] {
                        name_category}, this.onEndAddNewCategoriesDelegate, this.onAddNewCategoriesCompletedDelegate, userState);
        }
        
        public bool AddNewCriterions(string name_crit, bool qualit_crit) {
            return base.Channel.AddNewCriterions(name_crit, qualit_crit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewCriterions(string name_crit, bool qualit_crit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewCriterions(name_crit, qualit_crit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewCriterions(System.IAsyncResult result) {
            return base.Channel.EndAddNewCriterions(result);
        }
        
        private System.IAsyncResult OnBeginAddNewCriterions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_crit = ((string)(inValues[0]));
            bool qualit_crit = ((bool)(inValues[1]));
            return this.BeginAddNewCriterions(name_crit, qualit_crit, callback, asyncState);
        }
        
        private object[] OnEndAddNewCriterions(System.IAsyncResult result) {
            bool retVal = this.EndAddNewCriterions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewCriterionsCompleted(object state) {
            if ((this.AddNewCriterionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewCriterionsCompleted(this, new AddNewCriterionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewCriterionsAsync(string name_crit, bool qualit_crit) {
            this.AddNewCriterionsAsync(name_crit, qualit_crit, null);
        }
        
        public void AddNewCriterionsAsync(string name_crit, bool qualit_crit, object userState) {
            if ((this.onBeginAddNewCriterionsDelegate == null)) {
                this.onBeginAddNewCriterionsDelegate = new BeginOperationDelegate(this.OnBeginAddNewCriterions);
            }
            if ((this.onEndAddNewCriterionsDelegate == null)) {
                this.onEndAddNewCriterionsDelegate = new EndOperationDelegate(this.OnEndAddNewCriterions);
            }
            if ((this.onAddNewCriterionsCompletedDelegate == null)) {
                this.onAddNewCriterionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewCriterionsCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewCriterionsDelegate, new object[] {
                        name_crit,
                        qualit_crit}, this.onEndAddNewCriterionsDelegate, this.onAddNewCriterionsCompletedDelegate, userState);
        }
        
        public bool AddNewCritValues(int id_crit, string valid_values) {
            return base.Channel.AddNewCritValues(id_crit, valid_values);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewCritValues(int id_crit, string valid_values, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewCritValues(id_crit, valid_values, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewCritValues(System.IAsyncResult result) {
            return base.Channel.EndAddNewCritValues(result);
        }
        
        private System.IAsyncResult OnBeginAddNewCritValues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_crit = ((int)(inValues[0]));
            string valid_values = ((string)(inValues[1]));
            return this.BeginAddNewCritValues(id_crit, valid_values, callback, asyncState);
        }
        
        private object[] OnEndAddNewCritValues(System.IAsyncResult result) {
            bool retVal = this.EndAddNewCritValues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewCritValuesCompleted(object state) {
            if ((this.AddNewCritValuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewCritValuesCompleted(this, new AddNewCritValuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewCritValuesAsync(int id_crit, string valid_values) {
            this.AddNewCritValuesAsync(id_crit, valid_values, null);
        }
        
        public void AddNewCritValuesAsync(int id_crit, string valid_values, object userState) {
            if ((this.onBeginAddNewCritValuesDelegate == null)) {
                this.onBeginAddNewCritValuesDelegate = new BeginOperationDelegate(this.OnBeginAddNewCritValues);
            }
            if ((this.onEndAddNewCritValuesDelegate == null)) {
                this.onEndAddNewCritValuesDelegate = new EndOperationDelegate(this.OnEndAddNewCritValues);
            }
            if ((this.onAddNewCritValuesCompletedDelegate == null)) {
                this.onAddNewCritValuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewCritValuesCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewCritValuesDelegate, new object[] {
                        id_crit,
                        valid_values}, this.onEndAddNewCritValuesDelegate, this.onAddNewCritValuesCompletedDelegate, userState);
        }
        
        public bool AddNewExpCrit(int id_exp, int id_crit) {
            return base.Channel.AddNewExpCrit(id_exp, id_crit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewExpCrit(int id_exp, int id_crit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewExpCrit(id_exp, id_crit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewExpCrit(System.IAsyncResult result) {
            return base.Channel.EndAddNewExpCrit(result);
        }
        
        private System.IAsyncResult OnBeginAddNewExpCrit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_exp = ((int)(inValues[0]));
            int id_crit = ((int)(inValues[1]));
            return this.BeginAddNewExpCrit(id_exp, id_crit, callback, asyncState);
        }
        
        private object[] OnEndAddNewExpCrit(System.IAsyncResult result) {
            bool retVal = this.EndAddNewExpCrit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewExpCritCompleted(object state) {
            if ((this.AddNewExpCritCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewExpCritCompleted(this, new AddNewExpCritCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewExpCritAsync(int id_exp, int id_crit) {
            this.AddNewExpCritAsync(id_exp, id_crit, null);
        }
        
        public void AddNewExpCritAsync(int id_exp, int id_crit, object userState) {
            if ((this.onBeginAddNewExpCritDelegate == null)) {
                this.onBeginAddNewExpCritDelegate = new BeginOperationDelegate(this.OnBeginAddNewExpCrit);
            }
            if ((this.onEndAddNewExpCritDelegate == null)) {
                this.onEndAddNewExpCritDelegate = new EndOperationDelegate(this.OnEndAddNewExpCrit);
            }
            if ((this.onAddNewExpCritCompletedDelegate == null)) {
                this.onAddNewExpCritCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewExpCritCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewExpCritDelegate, new object[] {
                        id_exp,
                        id_crit}, this.onEndAddNewExpCritDelegate, this.onAddNewExpCritCompletedDelegate, userState);
        }
        
        public bool AddNewExpertFos(int id_expert, int id_fos) {
            return base.Channel.AddNewExpertFos(id_expert, id_fos);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewExpertFos(int id_expert, int id_fos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewExpertFos(id_expert, id_fos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewExpertFos(System.IAsyncResult result) {
            return base.Channel.EndAddNewExpertFos(result);
        }
        
        private System.IAsyncResult OnBeginAddNewExpertFos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expert = ((int)(inValues[0]));
            int id_fos = ((int)(inValues[1]));
            return this.BeginAddNewExpertFos(id_expert, id_fos, callback, asyncState);
        }
        
        private object[] OnEndAddNewExpertFos(System.IAsyncResult result) {
            bool retVal = this.EndAddNewExpertFos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewExpertFosCompleted(object state) {
            if ((this.AddNewExpertFosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewExpertFosCompleted(this, new AddNewExpertFosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewExpertFosAsync(int id_expert, int id_fos) {
            this.AddNewExpertFosAsync(id_expert, id_fos, null);
        }
        
        public void AddNewExpertFosAsync(int id_expert, int id_fos, object userState) {
            if ((this.onBeginAddNewExpertFosDelegate == null)) {
                this.onBeginAddNewExpertFosDelegate = new BeginOperationDelegate(this.OnBeginAddNewExpertFos);
            }
            if ((this.onEndAddNewExpertFosDelegate == null)) {
                this.onEndAddNewExpertFosDelegate = new EndOperationDelegate(this.OnEndAddNewExpertFos);
            }
            if ((this.onAddNewExpertFosCompletedDelegate == null)) {
                this.onAddNewExpertFosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewExpertFosCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewExpertFosDelegate, new object[] {
                        id_expert,
                        id_fos}, this.onEndAddNewExpertFosDelegate, this.onAddNewExpertFosCompletedDelegate, userState);
        }
        
        public bool AddNewExpertiseExpert(int id_expertise, int id_expert) {
            return base.Channel.AddNewExpertiseExpert(id_expertise, id_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewExpertiseExpert(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewExpertiseExpert(id_expertise, id_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewExpertiseExpert(System.IAsyncResult result) {
            return base.Channel.EndAddNewExpertiseExpert(result);
        }
        
        private System.IAsyncResult OnBeginAddNewExpertiseExpert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_expert = ((int)(inValues[1]));
            return this.BeginAddNewExpertiseExpert(id_expertise, id_expert, callback, asyncState);
        }
        
        private object[] OnEndAddNewExpertiseExpert(System.IAsyncResult result) {
            bool retVal = this.EndAddNewExpertiseExpert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewExpertiseExpertCompleted(object state) {
            if ((this.AddNewExpertiseExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewExpertiseExpertCompleted(this, new AddNewExpertiseExpertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewExpertiseExpertAsync(int id_expertise, int id_expert) {
            this.AddNewExpertiseExpertAsync(id_expertise, id_expert, null);
        }
        
        public void AddNewExpertiseExpertAsync(int id_expertise, int id_expert, object userState) {
            if ((this.onBeginAddNewExpertiseExpertDelegate == null)) {
                this.onBeginAddNewExpertiseExpertDelegate = new BeginOperationDelegate(this.OnBeginAddNewExpertiseExpert);
            }
            if ((this.onEndAddNewExpertiseExpertDelegate == null)) {
                this.onEndAddNewExpertiseExpertDelegate = new EndOperationDelegate(this.OnEndAddNewExpertiseExpert);
            }
            if ((this.onAddNewExpertiseExpertCompletedDelegate == null)) {
                this.onAddNewExpertiseExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewExpertiseExpertCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewExpertiseExpertDelegate, new object[] {
                        id_expertise,
                        id_expert}, this.onEndAddNewExpertiseExpertDelegate, this.onAddNewExpertiseExpertCompletedDelegate, userState);
        }
        
        public bool AddNewExpertiseMark(int id_expertise, int id_mark) {
            return base.Channel.AddNewExpertiseMark(id_expertise, id_mark);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewExpertiseMark(int id_expertise, int id_mark, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewExpertiseMark(id_expertise, id_mark, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewExpertiseMark(System.IAsyncResult result) {
            return base.Channel.EndAddNewExpertiseMark(result);
        }
        
        private System.IAsyncResult OnBeginAddNewExpertiseMark(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_mark = ((int)(inValues[1]));
            return this.BeginAddNewExpertiseMark(id_expertise, id_mark, callback, asyncState);
        }
        
        private object[] OnEndAddNewExpertiseMark(System.IAsyncResult result) {
            bool retVal = this.EndAddNewExpertiseMark(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewExpertiseMarkCompleted(object state) {
            if ((this.AddNewExpertiseMarkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewExpertiseMarkCompleted(this, new AddNewExpertiseMarkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewExpertiseMarkAsync(int id_expertise, int id_mark) {
            this.AddNewExpertiseMarkAsync(id_expertise, id_mark, null);
        }
        
        public void AddNewExpertiseMarkAsync(int id_expertise, int id_mark, object userState) {
            if ((this.onBeginAddNewExpertiseMarkDelegate == null)) {
                this.onBeginAddNewExpertiseMarkDelegate = new BeginOperationDelegate(this.OnBeginAddNewExpertiseMark);
            }
            if ((this.onEndAddNewExpertiseMarkDelegate == null)) {
                this.onEndAddNewExpertiseMarkDelegate = new EndOperationDelegate(this.OnEndAddNewExpertiseMark);
            }
            if ((this.onAddNewExpertiseMarkCompletedDelegate == null)) {
                this.onAddNewExpertiseMarkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewExpertiseMarkCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewExpertiseMarkDelegate, new object[] {
                        id_expertise,
                        id_mark}, this.onEndAddNewExpertiseMarkDelegate, this.onAddNewExpertiseMarkCompletedDelegate, userState);
        }
        
        public bool AddNewExpertises(string name_expertise, System.DateTime date_expertise) {
            return base.Channel.AddNewExpertises(name_expertise, date_expertise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewExpertises(string name_expertise, System.DateTime date_expertise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewExpertises(name_expertise, date_expertise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewExpertises(System.IAsyncResult result) {
            return base.Channel.EndAddNewExpertises(result);
        }
        
        private System.IAsyncResult OnBeginAddNewExpertises(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_expertise = ((string)(inValues[0]));
            System.DateTime date_expertise = ((System.DateTime)(inValues[1]));
            return this.BeginAddNewExpertises(name_expertise, date_expertise, callback, asyncState);
        }
        
        private object[] OnEndAddNewExpertises(System.IAsyncResult result) {
            bool retVal = this.EndAddNewExpertises(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewExpertisesCompleted(object state) {
            if ((this.AddNewExpertisesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewExpertisesCompleted(this, new AddNewExpertisesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewExpertisesAsync(string name_expertise, System.DateTime date_expertise) {
            this.AddNewExpertisesAsync(name_expertise, date_expertise, null);
        }
        
        public void AddNewExpertisesAsync(string name_expertise, System.DateTime date_expertise, object userState) {
            if ((this.onBeginAddNewExpertisesDelegate == null)) {
                this.onBeginAddNewExpertisesDelegate = new BeginOperationDelegate(this.OnBeginAddNewExpertises);
            }
            if ((this.onEndAddNewExpertisesDelegate == null)) {
                this.onEndAddNewExpertisesDelegate = new EndOperationDelegate(this.OnEndAddNewExpertises);
            }
            if ((this.onAddNewExpertisesCompletedDelegate == null)) {
                this.onAddNewExpertisesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewExpertisesCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewExpertisesDelegate, new object[] {
                        name_expertise,
                        date_expertise}, this.onEndAddNewExpertisesDelegate, this.onAddNewExpertisesCompletedDelegate, userState);
        }
        
        public bool AddNewExperts(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert) {
            return base.Channel.AddNewExperts(surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, contacts_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewExperts(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewExperts(surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, contacts_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewExperts(System.IAsyncResult result) {
            return base.Channel.EndAddNewExperts(result);
        }
        
        private System.IAsyncResult OnBeginAddNewExperts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string surname_expert = ((string)(inValues[0]));
            string name_expert = ((string)(inValues[1]));
            string patronymic_expert = ((string)(inValues[2]));
            string job_expert = ((string)(inValues[3]));
            string post_expert = ((string)(inValues[4]));
            string degree_expert = ((string)(inValues[5]));
            string rank_expert = ((string)(inValues[6]));
            string contacts_expert = ((string)(inValues[7]));
            return this.BeginAddNewExperts(surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, contacts_expert, callback, asyncState);
        }
        
        private object[] OnEndAddNewExperts(System.IAsyncResult result) {
            bool retVal = this.EndAddNewExperts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewExpertsCompleted(object state) {
            if ((this.AddNewExpertsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewExpertsCompleted(this, new AddNewExpertsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewExpertsAsync(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert) {
            this.AddNewExpertsAsync(surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, contacts_expert, null);
        }
        
        public void AddNewExpertsAsync(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert, object userState) {
            if ((this.onBeginAddNewExpertsDelegate == null)) {
                this.onBeginAddNewExpertsDelegate = new BeginOperationDelegate(this.OnBeginAddNewExperts);
            }
            if ((this.onEndAddNewExpertsDelegate == null)) {
                this.onEndAddNewExpertsDelegate = new EndOperationDelegate(this.OnEndAddNewExperts);
            }
            if ((this.onAddNewExpertsCompletedDelegate == null)) {
                this.onAddNewExpertsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewExpertsCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewExpertsDelegate, new object[] {
                        surname_expert,
                        name_expert,
                        patronymic_expert,
                        job_expert,
                        post_expert,
                        degree_expert,
                        rank_expert,
                        contacts_expert}, this.onEndAddNewExpertsDelegate, this.onAddNewExpertsCompletedDelegate, userState);
        }
        
        public bool AddNewFiledsOfScience(string name_fos) {
            return base.Channel.AddNewFiledsOfScience(name_fos);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewFiledsOfScience(string name_fos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewFiledsOfScience(name_fos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewFiledsOfScience(System.IAsyncResult result) {
            return base.Channel.EndAddNewFiledsOfScience(result);
        }
        
        private System.IAsyncResult OnBeginAddNewFiledsOfScience(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_fos = ((string)(inValues[0]));
            return this.BeginAddNewFiledsOfScience(name_fos, callback, asyncState);
        }
        
        private object[] OnEndAddNewFiledsOfScience(System.IAsyncResult result) {
            bool retVal = this.EndAddNewFiledsOfScience(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewFiledsOfScienceCompleted(object state) {
            if ((this.AddNewFiledsOfScienceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewFiledsOfScienceCompleted(this, new AddNewFiledsOfScienceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewFiledsOfScienceAsync(string name_fos) {
            this.AddNewFiledsOfScienceAsync(name_fos, null);
        }
        
        public void AddNewFiledsOfScienceAsync(string name_fos, object userState) {
            if ((this.onBeginAddNewFiledsOfScienceDelegate == null)) {
                this.onBeginAddNewFiledsOfScienceDelegate = new BeginOperationDelegate(this.OnBeginAddNewFiledsOfScience);
            }
            if ((this.onEndAddNewFiledsOfScienceDelegate == null)) {
                this.onEndAddNewFiledsOfScienceDelegate = new EndOperationDelegate(this.OnEndAddNewFiledsOfScience);
            }
            if ((this.onAddNewFiledsOfScienceCompletedDelegate == null)) {
                this.onAddNewFiledsOfScienceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewFiledsOfScienceCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewFiledsOfScienceDelegate, new object[] {
                        name_fos}, this.onEndAddNewFiledsOfScienceDelegate, this.onAddNewFiledsOfScienceCompletedDelegate, userState);
        }
        
        public bool AddNewGRNTI(string name_grnti) {
            return base.Channel.AddNewGRNTI(name_grnti);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewGRNTI(string name_grnti, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewGRNTI(name_grnti, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewGRNTI(System.IAsyncResult result) {
            return base.Channel.EndAddNewGRNTI(result);
        }
        
        private System.IAsyncResult OnBeginAddNewGRNTI(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_grnti = ((string)(inValues[0]));
            return this.BeginAddNewGRNTI(name_grnti, callback, asyncState);
        }
        
        private object[] OnEndAddNewGRNTI(System.IAsyncResult result) {
            bool retVal = this.EndAddNewGRNTI(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewGRNTICompleted(object state) {
            if ((this.AddNewGRNTICompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewGRNTICompleted(this, new AddNewGRNTICompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewGRNTIAsync(string name_grnti) {
            this.AddNewGRNTIAsync(name_grnti, null);
        }
        
        public void AddNewGRNTIAsync(string name_grnti, object userState) {
            if ((this.onBeginAddNewGRNTIDelegate == null)) {
                this.onBeginAddNewGRNTIDelegate = new BeginOperationDelegate(this.OnBeginAddNewGRNTI);
            }
            if ((this.onEndAddNewGRNTIDelegate == null)) {
                this.onEndAddNewGRNTIDelegate = new EndOperationDelegate(this.OnEndAddNewGRNTI);
            }
            if ((this.onAddNewGRNTICompletedDelegate == null)) {
                this.onAddNewGRNTICompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewGRNTICompleted);
            }
            base.InvokeAsync(this.onBeginAddNewGRNTIDelegate, new object[] {
                        name_grnti}, this.onEndAddNewGRNTIDelegate, this.onAddNewGRNTICompletedDelegate, userState);
        }
        
        public bool AddNewMarks(int id_expert, int id_crit, int id_project, int rating) {
            return base.Channel.AddNewMarks(id_expert, id_crit, id_project, rating);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewMarks(int id_expert, int id_crit, int id_project, int rating, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewMarks(id_expert, id_crit, id_project, rating, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewMarks(System.IAsyncResult result) {
            return base.Channel.EndAddNewMarks(result);
        }
        
        private System.IAsyncResult OnBeginAddNewMarks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expert = ((int)(inValues[0]));
            int id_crit = ((int)(inValues[1]));
            int id_project = ((int)(inValues[2]));
            int rating = ((int)(inValues[3]));
            return this.BeginAddNewMarks(id_expert, id_crit, id_project, rating, callback, asyncState);
        }
        
        private object[] OnEndAddNewMarks(System.IAsyncResult result) {
            bool retVal = this.EndAddNewMarks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewMarksCompleted(object state) {
            if ((this.AddNewMarksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewMarksCompleted(this, new AddNewMarksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewMarksAsync(int id_expert, int id_crit, int id_project, int rating) {
            this.AddNewMarksAsync(id_expert, id_crit, id_project, rating, null);
        }
        
        public void AddNewMarksAsync(int id_expert, int id_crit, int id_project, int rating, object userState) {
            if ((this.onBeginAddNewMarksDelegate == null)) {
                this.onBeginAddNewMarksDelegate = new BeginOperationDelegate(this.OnBeginAddNewMarks);
            }
            if ((this.onEndAddNewMarksDelegate == null)) {
                this.onEndAddNewMarksDelegate = new EndOperationDelegate(this.OnEndAddNewMarks);
            }
            if ((this.onAddNewMarksCompletedDelegate == null)) {
                this.onAddNewMarksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewMarksCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewMarksDelegate, new object[] {
                        id_expert,
                        id_crit,
                        id_project,
                        rating}, this.onEndAddNewMarksDelegate, this.onAddNewMarksCompletedDelegate, userState);
        }
        
        public bool AddNewProjectAuthors(int id_proj, int id_author) {
            return base.Channel.AddNewProjectAuthors(id_proj, id_author);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewProjectAuthors(int id_proj, int id_author, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewProjectAuthors(id_proj, id_author, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewProjectAuthors(System.IAsyncResult result) {
            return base.Channel.EndAddNewProjectAuthors(result);
        }
        
        private System.IAsyncResult OnBeginAddNewProjectAuthors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_proj = ((int)(inValues[0]));
            int id_author = ((int)(inValues[1]));
            return this.BeginAddNewProjectAuthors(id_proj, id_author, callback, asyncState);
        }
        
        private object[] OnEndAddNewProjectAuthors(System.IAsyncResult result) {
            bool retVal = this.EndAddNewProjectAuthors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewProjectAuthorsCompleted(object state) {
            if ((this.AddNewProjectAuthorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewProjectAuthorsCompleted(this, new AddNewProjectAuthorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewProjectAuthorsAsync(int id_proj, int id_author) {
            this.AddNewProjectAuthorsAsync(id_proj, id_author, null);
        }
        
        public void AddNewProjectAuthorsAsync(int id_proj, int id_author, object userState) {
            if ((this.onBeginAddNewProjectAuthorsDelegate == null)) {
                this.onBeginAddNewProjectAuthorsDelegate = new BeginOperationDelegate(this.OnBeginAddNewProjectAuthors);
            }
            if ((this.onEndAddNewProjectAuthorsDelegate == null)) {
                this.onEndAddNewProjectAuthorsDelegate = new EndOperationDelegate(this.OnEndAddNewProjectAuthors);
            }
            if ((this.onAddNewProjectAuthorsCompletedDelegate == null)) {
                this.onAddNewProjectAuthorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewProjectAuthorsCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewProjectAuthorsDelegate, new object[] {
                        id_proj,
                        id_author}, this.onEndAddNewProjectAuthorsDelegate, this.onAddNewProjectAuthorsCompletedDelegate, userState);
        }
        
        public bool AddNewProjectExpertise(int id_expertise, int id_project, bool accept) {
            return base.Channel.AddNewProjectExpertise(id_expertise, id_project, accept);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewProjectExpertise(int id_expertise, int id_project, bool accept, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewProjectExpertise(id_expertise, id_project, accept, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewProjectExpertise(System.IAsyncResult result) {
            return base.Channel.EndAddNewProjectExpertise(result);
        }
        
        private System.IAsyncResult OnBeginAddNewProjectExpertise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_project = ((int)(inValues[1]));
            bool accept = ((bool)(inValues[2]));
            return this.BeginAddNewProjectExpertise(id_expertise, id_project, accept, callback, asyncState);
        }
        
        private object[] OnEndAddNewProjectExpertise(System.IAsyncResult result) {
            bool retVal = this.EndAddNewProjectExpertise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewProjectExpertiseCompleted(object state) {
            if ((this.AddNewProjectExpertiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewProjectExpertiseCompleted(this, new AddNewProjectExpertiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewProjectExpertiseAsync(int id_expertise, int id_project, bool accept) {
            this.AddNewProjectExpertiseAsync(id_expertise, id_project, accept, null);
        }
        
        public void AddNewProjectExpertiseAsync(int id_expertise, int id_project, bool accept, object userState) {
            if ((this.onBeginAddNewProjectExpertiseDelegate == null)) {
                this.onBeginAddNewProjectExpertiseDelegate = new BeginOperationDelegate(this.OnBeginAddNewProjectExpertise);
            }
            if ((this.onEndAddNewProjectExpertiseDelegate == null)) {
                this.onEndAddNewProjectExpertiseDelegate = new EndOperationDelegate(this.OnEndAddNewProjectExpertise);
            }
            if ((this.onAddNewProjectExpertiseCompletedDelegate == null)) {
                this.onAddNewProjectExpertiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewProjectExpertiseCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewProjectExpertiseDelegate, new object[] {
                        id_expertise,
                        id_project,
                        accept}, this.onEndAddNewProjectExpertiseDelegate, this.onAddNewProjectExpertiseCompletedDelegate, userState);
        }
        
        public bool AddNewProjectFos(int id_project, int id_fos) {
            return base.Channel.AddNewProjectFos(id_project, id_fos);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewProjectFos(int id_project, int id_fos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewProjectFos(id_project, id_fos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewProjectFos(System.IAsyncResult result) {
            return base.Channel.EndAddNewProjectFos(result);
        }
        
        private System.IAsyncResult OnBeginAddNewProjectFos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_project = ((int)(inValues[0]));
            int id_fos = ((int)(inValues[1]));
            return this.BeginAddNewProjectFos(id_project, id_fos, callback, asyncState);
        }
        
        private object[] OnEndAddNewProjectFos(System.IAsyncResult result) {
            bool retVal = this.EndAddNewProjectFos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewProjectFosCompleted(object state) {
            if ((this.AddNewProjectFosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewProjectFosCompleted(this, new AddNewProjectFosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewProjectFosAsync(int id_project, int id_fos) {
            this.AddNewProjectFosAsync(id_project, id_fos, null);
        }
        
        public void AddNewProjectFosAsync(int id_project, int id_fos, object userState) {
            if ((this.onBeginAddNewProjectFosDelegate == null)) {
                this.onBeginAddNewProjectFosDelegate = new BeginOperationDelegate(this.OnBeginAddNewProjectFos);
            }
            if ((this.onEndAddNewProjectFosDelegate == null)) {
                this.onEndAddNewProjectFosDelegate = new EndOperationDelegate(this.OnEndAddNewProjectFos);
            }
            if ((this.onAddNewProjectFosCompletedDelegate == null)) {
                this.onAddNewProjectFosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewProjectFosCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewProjectFosDelegate, new object[] {
                        id_project,
                        id_fos}, this.onEndAddNewProjectFosDelegate, this.onAddNewProjectFosCompletedDelegate, userState);
        }
        
        public bool AddNewProjects(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project) {
            return base.Channel.AddNewProjects(name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewProjects(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewProjects(name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddNewProjects(System.IAsyncResult result) {
            return base.Channel.EndAddNewProjects(result);
        }
        
        private System.IAsyncResult OnBeginAddNewProjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_project = ((string)(inValues[0]));
            string lead_project = ((string)(inValues[1]));
            string grnti_project = ((string)(inValues[2]));
            System.DateTime begin_project = ((System.DateTime)(inValues[3]));
            System.DateTime end_project = ((System.DateTime)(inValues[4]));
            string money_project = ((string)(inValues[5]));
            string email_project = ((string)(inValues[6]));
            return this.BeginAddNewProjects(name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, callback, asyncState);
        }
        
        private object[] OnEndAddNewProjects(System.IAsyncResult result) {
            bool retVal = this.EndAddNewProjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewProjectsCompleted(object state) {
            if ((this.AddNewProjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewProjectsCompleted(this, new AddNewProjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewProjectsAsync(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project) {
            this.AddNewProjectsAsync(name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, null);
        }
        
        public void AddNewProjectsAsync(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, object userState) {
            if ((this.onBeginAddNewProjectsDelegate == null)) {
                this.onBeginAddNewProjectsDelegate = new BeginOperationDelegate(this.OnBeginAddNewProjects);
            }
            if ((this.onEndAddNewProjectsDelegate == null)) {
                this.onEndAddNewProjectsDelegate = new EndOperationDelegate(this.OnEndAddNewProjects);
            }
            if ((this.onAddNewProjectsCompletedDelegate == null)) {
                this.onAddNewProjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewProjectsCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewProjectsDelegate, new object[] {
                        name_project,
                        lead_project,
                        grnti_project,
                        begin_project,
                        end_project,
                        money_project,
                        email_project}, this.onEndAddNewProjectsDelegate, this.onAddNewProjectsCompletedDelegate, userState);
        }
        
        public bool CreateNewExpertise(string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, int[] projectsId, int[] critsId, int[] expertsId) {
            return base.Channel.CreateNewExpertise(name_expertise, date_expertise, id_fos, count_proj_expertise, projectsId, critsId, expertsId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateNewExpertise(string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, int[] projectsId, int[] critsId, int[] expertsId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateNewExpertise(name_expertise, date_expertise, id_fos, count_proj_expertise, projectsId, critsId, expertsId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCreateNewExpertise(System.IAsyncResult result) {
            return base.Channel.EndCreateNewExpertise(result);
        }
        
        private System.IAsyncResult OnBeginCreateNewExpertise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_expertise = ((string)(inValues[0]));
            System.DateTime date_expertise = ((System.DateTime)(inValues[1]));
            int id_fos = ((int)(inValues[2]));
            int count_proj_expertise = ((int)(inValues[3]));
            int[] projectsId = ((int[])(inValues[4]));
            int[] critsId = ((int[])(inValues[5]));
            int[] expertsId = ((int[])(inValues[6]));
            return this.BeginCreateNewExpertise(name_expertise, date_expertise, id_fos, count_proj_expertise, projectsId, critsId, expertsId, callback, asyncState);
        }
        
        private object[] OnEndCreateNewExpertise(System.IAsyncResult result) {
            bool retVal = this.EndCreateNewExpertise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateNewExpertiseCompleted(object state) {
            if ((this.CreateNewExpertiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateNewExpertiseCompleted(this, new CreateNewExpertiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateNewExpertiseAsync(string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, int[] projectsId, int[] critsId, int[] expertsId) {
            this.CreateNewExpertiseAsync(name_expertise, date_expertise, id_fos, count_proj_expertise, projectsId, critsId, expertsId, null);
        }
        
        public void CreateNewExpertiseAsync(string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, int[] projectsId, int[] critsId, int[] expertsId, object userState) {
            if ((this.onBeginCreateNewExpertiseDelegate == null)) {
                this.onBeginCreateNewExpertiseDelegate = new BeginOperationDelegate(this.OnBeginCreateNewExpertise);
            }
            if ((this.onEndCreateNewExpertiseDelegate == null)) {
                this.onEndCreateNewExpertiseDelegate = new EndOperationDelegate(this.OnEndCreateNewExpertise);
            }
            if ((this.onCreateNewExpertiseCompletedDelegate == null)) {
                this.onCreateNewExpertiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateNewExpertiseCompleted);
            }
            base.InvokeAsync(this.onBeginCreateNewExpertiseDelegate, new object[] {
                        name_expertise,
                        date_expertise,
                        id_fos,
                        count_proj_expertise,
                        projectsId,
                        critsId,
                        expertsId}, this.onEndCreateNewExpertiseDelegate, this.onCreateNewExpertiseCompletedDelegate, userState);
        }
        
        public bool EditExpertiseByID(int id_expertise, string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] lprojects, ExpertiseWPFApplication.ServiceReference1.ExpCrit[] lcrits, ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] lexperts) {
            return base.Channel.EditExpertiseByID(id_expertise, name_expertise, date_expertise, id_fos, count_proj_expertise, lprojects, lcrits, lexperts);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditExpertiseByID(int id_expertise, string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] lprojects, ExpertiseWPFApplication.ServiceReference1.ExpCrit[] lcrits, ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] lexperts, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditExpertiseByID(id_expertise, name_expertise, date_expertise, id_fos, count_proj_expertise, lprojects, lcrits, lexperts, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEditExpertiseByID(System.IAsyncResult result) {
            return base.Channel.EndEditExpertiseByID(result);
        }
        
        private System.IAsyncResult OnBeginEditExpertiseByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            string name_expertise = ((string)(inValues[1]));
            System.DateTime date_expertise = ((System.DateTime)(inValues[2]));
            int id_fos = ((int)(inValues[3]));
            int count_proj_expertise = ((int)(inValues[4]));
            ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] lprojects = ((ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[])(inValues[5]));
            ExpertiseWPFApplication.ServiceReference1.ExpCrit[] lcrits = ((ExpertiseWPFApplication.ServiceReference1.ExpCrit[])(inValues[6]));
            ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] lexperts = ((ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[])(inValues[7]));
            return this.BeginEditExpertiseByID(id_expertise, name_expertise, date_expertise, id_fos, count_proj_expertise, lprojects, lcrits, lexperts, callback, asyncState);
        }
        
        private object[] OnEndEditExpertiseByID(System.IAsyncResult result) {
            bool retVal = this.EndEditExpertiseByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditExpertiseByIDCompleted(object state) {
            if ((this.EditExpertiseByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditExpertiseByIDCompleted(this, new EditExpertiseByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditExpertiseByIDAsync(int id_expertise, string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] lprojects, ExpertiseWPFApplication.ServiceReference1.ExpCrit[] lcrits, ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] lexperts) {
            this.EditExpertiseByIDAsync(id_expertise, name_expertise, date_expertise, id_fos, count_proj_expertise, lprojects, lcrits, lexperts, null);
        }
        
        public void EditExpertiseByIDAsync(int id_expertise, string name_expertise, System.DateTime date_expertise, int id_fos, int count_proj_expertise, ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] lprojects, ExpertiseWPFApplication.ServiceReference1.ExpCrit[] lcrits, ExpertiseWPFApplication.ServiceReference1.ExpertiseExpert[] lexperts, object userState) {
            if ((this.onBeginEditExpertiseByIDDelegate == null)) {
                this.onBeginEditExpertiseByIDDelegate = new BeginOperationDelegate(this.OnBeginEditExpertiseByID);
            }
            if ((this.onEndEditExpertiseByIDDelegate == null)) {
                this.onEndEditExpertiseByIDDelegate = new EndOperationDelegate(this.OnEndEditExpertiseByID);
            }
            if ((this.onEditExpertiseByIDCompletedDelegate == null)) {
                this.onEditExpertiseByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditExpertiseByIDCompleted);
            }
            base.InvokeAsync(this.onBeginEditExpertiseByIDDelegate, new object[] {
                        id_expertise,
                        name_expertise,
                        date_expertise,
                        id_fos,
                        count_proj_expertise,
                        lprojects,
                        lcrits,
                        lexperts}, this.onEndEditExpertiseByIDDelegate, this.onEditExpertiseByIDCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myExpertiseForCard GetMyExpertiseForCardByID(int id_expertise) {
            return base.Channel.GetMyExpertiseForCardByID(id_expertise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMyExpertiseForCardByID(int id_expertise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyExpertiseForCardByID(id_expertise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.myExpertiseForCard EndGetMyExpertiseForCardByID(System.IAsyncResult result) {
            return base.Channel.EndGetMyExpertiseForCardByID(result);
        }
        
        private System.IAsyncResult OnBeginGetMyExpertiseForCardByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            return this.BeginGetMyExpertiseForCardByID(id_expertise, callback, asyncState);
        }
        
        private object[] OnEndGetMyExpertiseForCardByID(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.myExpertiseForCard retVal = this.EndGetMyExpertiseForCardByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyExpertiseForCardByIDCompleted(object state) {
            if ((this.GetMyExpertiseForCardByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyExpertiseForCardByIDCompleted(this, new GetMyExpertiseForCardByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyExpertiseForCardByIDAsync(int id_expertise) {
            this.GetMyExpertiseForCardByIDAsync(id_expertise, null);
        }
        
        public void GetMyExpertiseForCardByIDAsync(int id_expertise, object userState) {
            if ((this.onBeginGetMyExpertiseForCardByIDDelegate == null)) {
                this.onBeginGetMyExpertiseForCardByIDDelegate = new BeginOperationDelegate(this.OnBeginGetMyExpertiseForCardByID);
            }
            if ((this.onEndGetMyExpertiseForCardByIDDelegate == null)) {
                this.onEndGetMyExpertiseForCardByIDDelegate = new EndOperationDelegate(this.OnEndGetMyExpertiseForCardByID);
            }
            if ((this.onGetMyExpertiseForCardByIDCompletedDelegate == null)) {
                this.onGetMyExpertiseForCardByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyExpertiseForCardByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyExpertiseForCardByIDDelegate, new object[] {
                        id_expertise}, this.onEndGetMyExpertiseForCardByIDDelegate, this.onGetMyExpertiseForCardByIDCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myCompletedexpertises[] GetListComoletedExpertises() {
            return base.Channel.GetListComoletedExpertises();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListComoletedExpertises(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListComoletedExpertises(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.myCompletedexpertises[] EndGetListComoletedExpertises(System.IAsyncResult result) {
            return base.Channel.EndGetListComoletedExpertises(result);
        }
        
        private System.IAsyncResult OnBeginGetListComoletedExpertises(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListComoletedExpertises(callback, asyncState);
        }
        
        private object[] OnEndGetListComoletedExpertises(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.myCompletedexpertises[] retVal = this.EndGetListComoletedExpertises(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListComoletedExpertisesCompleted(object state) {
            if ((this.GetListComoletedExpertisesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListComoletedExpertisesCompleted(this, new GetListComoletedExpertisesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListComoletedExpertisesAsync() {
            this.GetListComoletedExpertisesAsync(null);
        }
        
        public void GetListComoletedExpertisesAsync(object userState) {
            if ((this.onBeginGetListComoletedExpertisesDelegate == null)) {
                this.onBeginGetListComoletedExpertisesDelegate = new BeginOperationDelegate(this.OnBeginGetListComoletedExpertises);
            }
            if ((this.onEndGetListComoletedExpertisesDelegate == null)) {
                this.onEndGetListComoletedExpertisesDelegate = new EndOperationDelegate(this.OnEndGetListComoletedExpertises);
            }
            if ((this.onGetListComoletedExpertisesCompletedDelegate == null)) {
                this.onGetListComoletedExpertisesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListComoletedExpertisesCompleted);
            }
            base.InvokeAsync(this.onBeginGetListComoletedExpertisesDelegate, null, this.onEndGetListComoletedExpertisesDelegate, this.onGetListComoletedExpertisesCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.TablesForEditExpertise GetTabelsForEditExpertiseByID(int id_expertise) {
            return base.Channel.GetTabelsForEditExpertiseByID(id_expertise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTabelsForEditExpertiseByID(int id_expertise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTabelsForEditExpertiseByID(id_expertise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.TablesForEditExpertise EndGetTabelsForEditExpertiseByID(System.IAsyncResult result) {
            return base.Channel.EndGetTabelsForEditExpertiseByID(result);
        }
        
        private System.IAsyncResult OnBeginGetTabelsForEditExpertiseByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            return this.BeginGetTabelsForEditExpertiseByID(id_expertise, callback, asyncState);
        }
        
        private object[] OnEndGetTabelsForEditExpertiseByID(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.TablesForEditExpertise retVal = this.EndGetTabelsForEditExpertiseByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTabelsForEditExpertiseByIDCompleted(object state) {
            if ((this.GetTabelsForEditExpertiseByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTabelsForEditExpertiseByIDCompleted(this, new GetTabelsForEditExpertiseByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTabelsForEditExpertiseByIDAsync(int id_expertise) {
            this.GetTabelsForEditExpertiseByIDAsync(id_expertise, null);
        }
        
        public void GetTabelsForEditExpertiseByIDAsync(int id_expertise, object userState) {
            if ((this.onBeginGetTabelsForEditExpertiseByIDDelegate == null)) {
                this.onBeginGetTabelsForEditExpertiseByIDDelegate = new BeginOperationDelegate(this.OnBeginGetTabelsForEditExpertiseByID);
            }
            if ((this.onEndGetTabelsForEditExpertiseByIDDelegate == null)) {
                this.onEndGetTabelsForEditExpertiseByIDDelegate = new EndOperationDelegate(this.OnEndGetTabelsForEditExpertiseByID);
            }
            if ((this.onGetTabelsForEditExpertiseByIDCompletedDelegate == null)) {
                this.onGetTabelsForEditExpertiseByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTabelsForEditExpertiseByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetTabelsForEditExpertiseByIDDelegate, new object[] {
                        id_expertise}, this.onEndGetTabelsForEditExpertiseByIDDelegate, this.onGetTabelsForEditExpertiseByIDCompletedDelegate, userState);
        }
        
        public bool UpdateProjectExpertise(int id_project_expertise, int id_expertise, int id_project, bool accept) {
            return base.Channel.UpdateProjectExpertise(id_project_expertise, id_expertise, id_project, accept);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateProjectExpertise(int id_project_expertise, int id_expertise, int id_project, bool accept, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateProjectExpertise(id_project_expertise, id_expertise, id_project, accept, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateProjectExpertise(System.IAsyncResult result) {
            return base.Channel.EndUpdateProjectExpertise(result);
        }
        
        private System.IAsyncResult OnBeginUpdateProjectExpertise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_project_expertise = ((int)(inValues[0]));
            int id_expertise = ((int)(inValues[1]));
            int id_project = ((int)(inValues[2]));
            bool accept = ((bool)(inValues[3]));
            return this.BeginUpdateProjectExpertise(id_project_expertise, id_expertise, id_project, accept, callback, asyncState);
        }
        
        private object[] OnEndUpdateProjectExpertise(System.IAsyncResult result) {
            bool retVal = this.EndUpdateProjectExpertise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateProjectExpertiseCompleted(object state) {
            if ((this.UpdateProjectExpertiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateProjectExpertiseCompleted(this, new UpdateProjectExpertiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateProjectExpertiseAsync(int id_project_expertise, int id_expertise, int id_project, bool accept) {
            this.UpdateProjectExpertiseAsync(id_project_expertise, id_expertise, id_project, accept, null);
        }
        
        public void UpdateProjectExpertiseAsync(int id_project_expertise, int id_expertise, int id_project, bool accept, object userState) {
            if ((this.onBeginUpdateProjectExpertiseDelegate == null)) {
                this.onBeginUpdateProjectExpertiseDelegate = new BeginOperationDelegate(this.OnBeginUpdateProjectExpertise);
            }
            if ((this.onEndUpdateProjectExpertiseDelegate == null)) {
                this.onEndUpdateProjectExpertiseDelegate = new EndOperationDelegate(this.OnEndUpdateProjectExpertise);
            }
            if ((this.onUpdateProjectExpertiseCompletedDelegate == null)) {
                this.onUpdateProjectExpertiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateProjectExpertiseCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateProjectExpertiseDelegate, new object[] {
                        id_project_expertise,
                        id_expertise,
                        id_project,
                        accept}, this.onEndUpdateProjectExpertiseDelegate, this.onUpdateProjectExpertiseCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.TablesForExpertise GetTablesForExpertise() {
            return base.Channel.GetTablesForExpertise();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTablesForExpertise(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTablesForExpertise(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.TablesForExpertise EndGetTablesForExpertise(System.IAsyncResult result) {
            return base.Channel.EndGetTablesForExpertise(result);
        }
        
        private System.IAsyncResult OnBeginGetTablesForExpertise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetTablesForExpertise(callback, asyncState);
        }
        
        private object[] OnEndGetTablesForExpertise(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.TablesForExpertise retVal = this.EndGetTablesForExpertise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTablesForExpertiseCompleted(object state) {
            if ((this.GetTablesForExpertiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTablesForExpertiseCompleted(this, new GetTablesForExpertiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTablesForExpertiseAsync() {
            this.GetTablesForExpertiseAsync(null);
        }
        
        public void GetTablesForExpertiseAsync(object userState) {
            if ((this.onBeginGetTablesForExpertiseDelegate == null)) {
                this.onBeginGetTablesForExpertiseDelegate = new BeginOperationDelegate(this.OnBeginGetTablesForExpertise);
            }
            if ((this.onEndGetTablesForExpertiseDelegate == null)) {
                this.onEndGetTablesForExpertiseDelegate = new EndOperationDelegate(this.OnEndGetTablesForExpertise);
            }
            if ((this.onGetTablesForExpertiseCompletedDelegate == null)) {
                this.onGetTablesForExpertiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTablesForExpertiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetTablesForExpertiseDelegate, null, this.onEndGetTablesForExpertiseDelegate, this.onGetTablesForExpertiseCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.myRaitinfExpert[] GetListRaitingForExpertise(int id_project) {
            return base.Channel.GetListRaitingForExpertise(id_project);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListRaitingForExpertise(int id_project, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListRaitingForExpertise(id_project, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.myRaitinfExpert[] EndGetListRaitingForExpertise(System.IAsyncResult result) {
            return base.Channel.EndGetListRaitingForExpertise(result);
        }
        
        private System.IAsyncResult OnBeginGetListRaitingForExpertise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_project = ((int)(inValues[0]));
            return this.BeginGetListRaitingForExpertise(id_project, callback, asyncState);
        }
        
        private object[] OnEndGetListRaitingForExpertise(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.myRaitinfExpert[] retVal = this.EndGetListRaitingForExpertise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListRaitingForExpertiseCompleted(object state) {
            if ((this.GetListRaitingForExpertiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListRaitingForExpertiseCompleted(this, new GetListRaitingForExpertiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListRaitingForExpertiseAsync(int id_project) {
            this.GetListRaitingForExpertiseAsync(id_project, null);
        }
        
        public void GetListRaitingForExpertiseAsync(int id_project, object userState) {
            if ((this.onBeginGetListRaitingForExpertiseDelegate == null)) {
                this.onBeginGetListRaitingForExpertiseDelegate = new BeginOperationDelegate(this.OnBeginGetListRaitingForExpertise);
            }
            if ((this.onEndGetListRaitingForExpertiseDelegate == null)) {
                this.onEndGetListRaitingForExpertiseDelegate = new EndOperationDelegate(this.OnEndGetListRaitingForExpertise);
            }
            if ((this.onGetListRaitingForExpertiseCompletedDelegate == null)) {
                this.onGetListRaitingForExpertiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListRaitingForExpertiseCompleted);
            }
            base.InvokeAsync(this.onBeginGetListRaitingForExpertiseDelegate, new object[] {
                        id_project}, this.onEndGetListRaitingForExpertiseDelegate, this.onGetListRaitingForExpertiseCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] test() {
            return base.Channel.test();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Begintest(System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begintest(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] Endtest(System.IAsyncResult result) {
            return base.Channel.Endtest(result);
        }
        
        private System.IAsyncResult OnBegintest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.Begintest(callback, asyncState);
        }
        
        private object[] OnEndtest(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.ProjectExpertise[] retVal = this.Endtest(result);
            return new object[] {
                    retVal};
        }
        
        private void OntestCompleted(object state) {
            if ((this.testCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.testCompleted(this, new testCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void testAsync() {
            this.testAsync(null);
        }
        
        public void testAsync(object userState) {
            if ((this.onBegintestDelegate == null)) {
                this.onBegintestDelegate = new BeginOperationDelegate(this.OnBegintest);
            }
            if ((this.onEndtestDelegate == null)) {
                this.onEndtestDelegate = new EndOperationDelegate(this.OnEndtest);
            }
            if ((this.ontestCompletedDelegate == null)) {
                this.ontestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OntestCompleted);
            }
            base.InvokeAsync(this.onBegintestDelegate, null, this.onEndtestDelegate, this.ontestCompletedDelegate, userState);
        }
        
        public void test2() {
            base.Channel.test2();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Begintest2(System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begintest2(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void Endtest2(System.IAsyncResult result) {
            base.Channel.Endtest2(result);
        }
        
        private System.IAsyncResult OnBegintest2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.Begintest2(callback, asyncState);
        }
        
        private object[] OnEndtest2(System.IAsyncResult result) {
            this.Endtest2(result);
            return null;
        }
        
        private void Ontest2Completed(object state) {
            if ((this.test2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.test2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void test2Async() {
            this.test2Async(null);
        }
        
        public void test2Async(object userState) {
            if ((this.onBegintest2Delegate == null)) {
                this.onBegintest2Delegate = new BeginOperationDelegate(this.OnBegintest2);
            }
            if ((this.onEndtest2Delegate == null)) {
                this.onEndtest2Delegate = new EndOperationDelegate(this.OnEndtest2);
            }
            if ((this.ontest2CompletedDelegate == null)) {
                this.ontest2CompletedDelegate = new System.Threading.SendOrPostCallback(this.Ontest2Completed);
            }
            base.InvokeAsync(this.onBegintest2Delegate, null, this.onEndtest2Delegate, this.ontest2CompletedDelegate, userState);
        }
        
        public void UpdateExpertCard(int id_expert, string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, bool delete_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert) {
            base.Channel.UpdateExpertCard(id_expert, surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, delete_expert, contacts_expert, ListFOS, login_expert, password_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateExpertCard(int id_expert, string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, bool delete_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateExpertCard(id_expert, surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, delete_expert, contacts_expert, ListFOS, login_expert, password_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateExpertCard(System.IAsyncResult result) {
            base.Channel.EndUpdateExpertCard(result);
        }
        
        private System.IAsyncResult OnBeginUpdateExpertCard(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expert = ((int)(inValues[0]));
            string surname_expert = ((string)(inValues[1]));
            string name_expert = ((string)(inValues[2]));
            string patronymic_expert = ((string)(inValues[3]));
            string job_expert = ((string)(inValues[4]));
            string post_expert = ((string)(inValues[5]));
            string degree_expert = ((string)(inValues[6]));
            string rank_expert = ((string)(inValues[7]));
            bool delete_expert = ((bool)(inValues[8]));
            string contacts_expert = ((string)(inValues[9]));
            int[] ListFOS = ((int[])(inValues[10]));
            string login_expert = ((string)(inValues[11]));
            string password_expert = ((string)(inValues[12]));
            return this.BeginUpdateExpertCard(id_expert, surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, delete_expert, contacts_expert, ListFOS, login_expert, password_expert, callback, asyncState);
        }
        
        private object[] OnEndUpdateExpertCard(System.IAsyncResult result) {
            this.EndUpdateExpertCard(result);
            return null;
        }
        
        private void OnUpdateExpertCardCompleted(object state) {
            if ((this.UpdateExpertCardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateExpertCardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateExpertCardAsync(int id_expert, string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, bool delete_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert) {
            this.UpdateExpertCardAsync(id_expert, surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, delete_expert, contacts_expert, ListFOS, login_expert, password_expert, null);
        }
        
        public void UpdateExpertCardAsync(int id_expert, string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, bool delete_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert, object userState) {
            if ((this.onBeginUpdateExpertCardDelegate == null)) {
                this.onBeginUpdateExpertCardDelegate = new BeginOperationDelegate(this.OnBeginUpdateExpertCard);
            }
            if ((this.onEndUpdateExpertCardDelegate == null)) {
                this.onEndUpdateExpertCardDelegate = new EndOperationDelegate(this.OnEndUpdateExpertCard);
            }
            if ((this.onUpdateExpertCardCompletedDelegate == null)) {
                this.onUpdateExpertCardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateExpertCardCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateExpertCardDelegate, new object[] {
                        id_expert,
                        surname_expert,
                        name_expert,
                        patronymic_expert,
                        job_expert,
                        post_expert,
                        degree_expert,
                        rank_expert,
                        delete_expert,
                        contacts_expert,
                        ListFOS,
                        login_expert,
                        password_expert}, this.onEndUpdateExpertCardDelegate, this.onUpdateExpertCardCompletedDelegate, userState);
        }
        
        public bool EditCriterions(int id_crit, string name_crit, bool qualit_crit) {
            return base.Channel.EditCriterions(id_crit, name_crit, qualit_crit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditCriterions(int id_crit, string name_crit, bool qualit_crit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditCriterions(id_crit, name_crit, qualit_crit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEditCriterions(System.IAsyncResult result) {
            return base.Channel.EndEditCriterions(result);
        }
        
        private System.IAsyncResult OnBeginEditCriterions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_crit = ((int)(inValues[0]));
            string name_crit = ((string)(inValues[1]));
            bool qualit_crit = ((bool)(inValues[2]));
            return this.BeginEditCriterions(id_crit, name_crit, qualit_crit, callback, asyncState);
        }
        
        private object[] OnEndEditCriterions(System.IAsyncResult result) {
            bool retVal = this.EndEditCriterions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditCriterionsCompleted(object state) {
            if ((this.EditCriterionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditCriterionsCompleted(this, new EditCriterionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditCriterionsAsync(int id_crit, string name_crit, bool qualit_crit) {
            this.EditCriterionsAsync(id_crit, name_crit, qualit_crit, null);
        }
        
        public void EditCriterionsAsync(int id_crit, string name_crit, bool qualit_crit, object userState) {
            if ((this.onBeginEditCriterionsDelegate == null)) {
                this.onBeginEditCriterionsDelegate = new BeginOperationDelegate(this.OnBeginEditCriterions);
            }
            if ((this.onEndEditCriterionsDelegate == null)) {
                this.onEndEditCriterionsDelegate = new EndOperationDelegate(this.OnEndEditCriterions);
            }
            if ((this.onEditCriterionsCompletedDelegate == null)) {
                this.onEditCriterionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditCriterionsCompleted);
            }
            base.InvokeAsync(this.onBeginEditCriterionsDelegate, new object[] {
                        id_crit,
                        name_crit,
                        qualit_crit}, this.onEndEditCriterionsDelegate, this.onEditCriterionsCompletedDelegate, userState);
        }
        
        public bool EditCritValues(int id_value, int id_crit, string valid_values) {
            return base.Channel.EditCritValues(id_value, id_crit, valid_values);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditCritValues(int id_value, int id_crit, string valid_values, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditCritValues(id_value, id_crit, valid_values, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEditCritValues(System.IAsyncResult result) {
            return base.Channel.EndEditCritValues(result);
        }
        
        private System.IAsyncResult OnBeginEditCritValues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_value = ((int)(inValues[0]));
            int id_crit = ((int)(inValues[1]));
            string valid_values = ((string)(inValues[2]));
            return this.BeginEditCritValues(id_value, id_crit, valid_values, callback, asyncState);
        }
        
        private object[] OnEndEditCritValues(System.IAsyncResult result) {
            bool retVal = this.EndEditCritValues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditCritValuesCompleted(object state) {
            if ((this.EditCritValuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditCritValuesCompleted(this, new EditCritValuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditCritValuesAsync(int id_value, int id_crit, string valid_values) {
            this.EditCritValuesAsync(id_value, id_crit, valid_values, null);
        }
        
        public void EditCritValuesAsync(int id_value, int id_crit, string valid_values, object userState) {
            if ((this.onBeginEditCritValuesDelegate == null)) {
                this.onBeginEditCritValuesDelegate = new BeginOperationDelegate(this.OnBeginEditCritValues);
            }
            if ((this.onEndEditCritValuesDelegate == null)) {
                this.onEndEditCritValuesDelegate = new EndOperationDelegate(this.OnEndEditCritValues);
            }
            if ((this.onEditCritValuesCompletedDelegate == null)) {
                this.onEditCritValuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditCritValuesCompleted);
            }
            base.InvokeAsync(this.onBeginEditCritValuesDelegate, new object[] {
                        id_value,
                        id_crit,
                        valid_values}, this.onEndEditCritValuesDelegate, this.onEditCritValuesCompletedDelegate, userState);
        }
        
        public bool EditFiledsOfScience(int id_fos, string name_fos) {
            return base.Channel.EditFiledsOfScience(id_fos, name_fos);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditFiledsOfScience(int id_fos, string name_fos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditFiledsOfScience(id_fos, name_fos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEditFiledsOfScience(System.IAsyncResult result) {
            return base.Channel.EndEditFiledsOfScience(result);
        }
        
        private System.IAsyncResult OnBeginEditFiledsOfScience(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_fos = ((int)(inValues[0]));
            string name_fos = ((string)(inValues[1]));
            return this.BeginEditFiledsOfScience(id_fos, name_fos, callback, asyncState);
        }
        
        private object[] OnEndEditFiledsOfScience(System.IAsyncResult result) {
            bool retVal = this.EndEditFiledsOfScience(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditFiledsOfScienceCompleted(object state) {
            if ((this.EditFiledsOfScienceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditFiledsOfScienceCompleted(this, new EditFiledsOfScienceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditFiledsOfScienceAsync(int id_fos, string name_fos) {
            this.EditFiledsOfScienceAsync(id_fos, name_fos, null);
        }
        
        public void EditFiledsOfScienceAsync(int id_fos, string name_fos, object userState) {
            if ((this.onBeginEditFiledsOfScienceDelegate == null)) {
                this.onBeginEditFiledsOfScienceDelegate = new BeginOperationDelegate(this.OnBeginEditFiledsOfScience);
            }
            if ((this.onEndEditFiledsOfScienceDelegate == null)) {
                this.onEndEditFiledsOfScienceDelegate = new EndOperationDelegate(this.OnEndEditFiledsOfScience);
            }
            if ((this.onEditFiledsOfScienceCompletedDelegate == null)) {
                this.onEditFiledsOfScienceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditFiledsOfScienceCompleted);
            }
            base.InvokeAsync(this.onBeginEditFiledsOfScienceDelegate, new object[] {
                        id_fos,
                        name_fos}, this.onEndEditFiledsOfScienceDelegate, this.onEditFiledsOfScienceCompletedDelegate, userState);
        }
        
        public bool EditProject(int id_project, string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos) {
            return base.Channel.EditProject(id_project, name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, listauthor, fos);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditProject(int id_project, string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditProject(id_project, name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, listauthor, fos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEditProject(System.IAsyncResult result) {
            return base.Channel.EndEditProject(result);
        }
        
        private System.IAsyncResult OnBeginEditProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_project = ((int)(inValues[0]));
            string name_project = ((string)(inValues[1]));
            string lead_project = ((string)(inValues[2]));
            string grnti_project = ((string)(inValues[3]));
            System.DateTime begin_project = ((System.DateTime)(inValues[4]));
            System.DateTime end_project = ((System.DateTime)(inValues[5]));
            string money_project = ((string)(inValues[6]));
            string email_project = ((string)(inValues[7]));
            int[] listauthor = ((int[])(inValues[8]));
            int fos = ((int)(inValues[9]));
            return this.BeginEditProject(id_project, name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, listauthor, fos, callback, asyncState);
        }
        
        private object[] OnEndEditProject(System.IAsyncResult result) {
            bool retVal = this.EndEditProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditProjectCompleted(object state) {
            if ((this.EditProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditProjectCompleted(this, new EditProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditProjectAsync(int id_project, string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos) {
            this.EditProjectAsync(id_project, name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, listauthor, fos, null);
        }
        
        public void EditProjectAsync(int id_project, string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos, object userState) {
            if ((this.onBeginEditProjectDelegate == null)) {
                this.onBeginEditProjectDelegate = new BeginOperationDelegate(this.OnBeginEditProject);
            }
            if ((this.onEndEditProjectDelegate == null)) {
                this.onEndEditProjectDelegate = new EndOperationDelegate(this.OnEndEditProject);
            }
            if ((this.onEditProjectCompletedDelegate == null)) {
                this.onEditProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditProjectCompleted);
            }
            base.InvokeAsync(this.onBeginEditProjectDelegate, new object[] {
                        id_project,
                        name_project,
                        lead_project,
                        grnti_project,
                        begin_project,
                        end_project,
                        money_project,
                        email_project,
                        listauthor,
                        fos}, this.onEndEditProjectDelegate, this.onEditProjectCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Expertise_Expert[] Expertise_Expert(int id_expert) {
            return base.Channel.Expertise_Expert(id_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExpertise_Expert(int id_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExpertise_Expert(id_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Expertise_Expert[] EndExpertise_Expert(System.IAsyncResult result) {
            return base.Channel.EndExpertise_Expert(result);
        }
        
        private System.IAsyncResult OnBeginExpertise_Expert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expert = ((int)(inValues[0]));
            return this.BeginExpertise_Expert(id_expert, callback, asyncState);
        }
        
        private object[] OnEndExpertise_Expert(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Expertise_Expert[] retVal = this.EndExpertise_Expert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExpertise_ExpertCompleted(object state) {
            if ((this.Expertise_ExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Expertise_ExpertCompleted(this, new Expertise_ExpertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Expertise_ExpertAsync(int id_expert) {
            this.Expertise_ExpertAsync(id_expert, null);
        }
        
        public void Expertise_ExpertAsync(int id_expert, object userState) {
            if ((this.onBeginExpertise_ExpertDelegate == null)) {
                this.onBeginExpertise_ExpertDelegate = new BeginOperationDelegate(this.OnBeginExpertise_Expert);
            }
            if ((this.onEndExpertise_ExpertDelegate == null)) {
                this.onEndExpertise_ExpertDelegate = new EndOperationDelegate(this.OnEndExpertise_Expert);
            }
            if ((this.onExpertise_ExpertCompletedDelegate == null)) {
                this.onExpertise_ExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExpertise_ExpertCompleted);
            }
            base.InvokeAsync(this.onBeginExpertise_ExpertDelegate, new object[] {
                        id_expert}, this.onEndExpertise_ExpertDelegate, this.onExpertise_ExpertCompletedDelegate, userState);
        }
        
        public bool AddProjects(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos) {
            return base.Channel.AddProjects(name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, listauthor, fos);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddProjects(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddProjects(name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, listauthor, fos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddProjects(System.IAsyncResult result) {
            return base.Channel.EndAddProjects(result);
        }
        
        private System.IAsyncResult OnBeginAddProjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_project = ((string)(inValues[0]));
            string lead_project = ((string)(inValues[1]));
            string grnti_project = ((string)(inValues[2]));
            System.DateTime begin_project = ((System.DateTime)(inValues[3]));
            System.DateTime end_project = ((System.DateTime)(inValues[4]));
            string money_project = ((string)(inValues[5]));
            string email_project = ((string)(inValues[6]));
            int[] listauthor = ((int[])(inValues[7]));
            int fos = ((int)(inValues[8]));
            return this.BeginAddProjects(name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, listauthor, fos, callback, asyncState);
        }
        
        private object[] OnEndAddProjects(System.IAsyncResult result) {
            bool retVal = this.EndAddProjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddProjectsCompleted(object state) {
            if ((this.AddProjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddProjectsCompleted(this, new AddProjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddProjectsAsync(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos) {
            this.AddProjectsAsync(name_project, lead_project, grnti_project, begin_project, end_project, money_project, email_project, listauthor, fos, null);
        }
        
        public void AddProjectsAsync(string name_project, string lead_project, string grnti_project, System.DateTime begin_project, System.DateTime end_project, string money_project, string email_project, int[] listauthor, int fos, object userState) {
            if ((this.onBeginAddProjectsDelegate == null)) {
                this.onBeginAddProjectsDelegate = new BeginOperationDelegate(this.OnBeginAddProjects);
            }
            if ((this.onEndAddProjectsDelegate == null)) {
                this.onEndAddProjectsDelegate = new EndOperationDelegate(this.OnEndAddProjects);
            }
            if ((this.onAddProjectsCompletedDelegate == null)) {
                this.onAddProjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddProjectsCompleted);
            }
            base.InvokeAsync(this.onBeginAddProjectsDelegate, new object[] {
                        name_project,
                        lead_project,
                        grnti_project,
                        begin_project,
                        end_project,
                        money_project,
                        email_project,
                        listauthor,
                        fos}, this.onEndAddProjectsDelegate, this.onAddProjectsCompletedDelegate, userState);
        }
        
        public bool AddAuthors(string surname_author, string name_author, string patronymic_author) {
            return base.Channel.AddAuthors(surname_author, name_author, patronymic_author);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddAuthors(string surname_author, string name_author, string patronymic_author, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAuthors(surname_author, name_author, patronymic_author, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddAuthors(System.IAsyncResult result) {
            return base.Channel.EndAddAuthors(result);
        }
        
        private System.IAsyncResult OnBeginAddAuthors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string surname_author = ((string)(inValues[0]));
            string name_author = ((string)(inValues[1]));
            string patronymic_author = ((string)(inValues[2]));
            return this.BeginAddAuthors(surname_author, name_author, patronymic_author, callback, asyncState);
        }
        
        private object[] OnEndAddAuthors(System.IAsyncResult result) {
            bool retVal = this.EndAddAuthors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddAuthorsCompleted(object state) {
            if ((this.AddAuthorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAuthorsCompleted(this, new AddAuthorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAuthorsAsync(string surname_author, string name_author, string patronymic_author) {
            this.AddAuthorsAsync(surname_author, name_author, patronymic_author, null);
        }
        
        public void AddAuthorsAsync(string surname_author, string name_author, string patronymic_author, object userState) {
            if ((this.onBeginAddAuthorsDelegate == null)) {
                this.onBeginAddAuthorsDelegate = new BeginOperationDelegate(this.OnBeginAddAuthors);
            }
            if ((this.onEndAddAuthorsDelegate == null)) {
                this.onEndAddAuthorsDelegate = new EndOperationDelegate(this.OnEndAddAuthors);
            }
            if ((this.onAddAuthorsCompletedDelegate == null)) {
                this.onAddAuthorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAuthorsCompleted);
            }
            base.InvokeAsync(this.onBeginAddAuthorsDelegate, new object[] {
                        surname_author,
                        name_author,
                        patronymic_author}, this.onEndAddAuthorsDelegate, this.onAddAuthorsCompletedDelegate, userState);
        }
        
        public bool AddCategories(string name_category) {
            return base.Channel.AddCategories(name_category);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddCategories(string name_category, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddCategories(name_category, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddCategories(System.IAsyncResult result) {
            return base.Channel.EndAddCategories(result);
        }
        
        private System.IAsyncResult OnBeginAddCategories(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_category = ((string)(inValues[0]));
            return this.BeginAddCategories(name_category, callback, asyncState);
        }
        
        private object[] OnEndAddCategories(System.IAsyncResult result) {
            bool retVal = this.EndAddCategories(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddCategoriesCompleted(object state) {
            if ((this.AddCategoriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCategoriesCompleted(this, new AddCategoriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddCategoriesAsync(string name_category) {
            this.AddCategoriesAsync(name_category, null);
        }
        
        public void AddCategoriesAsync(string name_category, object userState) {
            if ((this.onBeginAddCategoriesDelegate == null)) {
                this.onBeginAddCategoriesDelegate = new BeginOperationDelegate(this.OnBeginAddCategories);
            }
            if ((this.onEndAddCategoriesDelegate == null)) {
                this.onEndAddCategoriesDelegate = new EndOperationDelegate(this.OnEndAddCategories);
            }
            if ((this.onAddCategoriesCompletedDelegate == null)) {
                this.onAddCategoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCategoriesCompleted);
            }
            base.InvokeAsync(this.onBeginAddCategoriesDelegate, new object[] {
                        name_category}, this.onEndAddCategoriesDelegate, this.onAddCategoriesCompletedDelegate, userState);
        }
        
        public bool AddExpertises(string name_expertise, System.DateTime date_expertise, int[] arrExperts) {
            return base.Channel.AddExpertises(name_expertise, date_expertise, arrExperts);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddExpertises(string name_expertise, System.DateTime date_expertise, int[] arrExperts, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddExpertises(name_expertise, date_expertise, arrExperts, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddExpertises(System.IAsyncResult result) {
            return base.Channel.EndAddExpertises(result);
        }
        
        private System.IAsyncResult OnBeginAddExpertises(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_expertise = ((string)(inValues[0]));
            System.DateTime date_expertise = ((System.DateTime)(inValues[1]));
            int[] arrExperts = ((int[])(inValues[2]));
            return this.BeginAddExpertises(name_expertise, date_expertise, arrExperts, callback, asyncState);
        }
        
        private object[] OnEndAddExpertises(System.IAsyncResult result) {
            bool retVal = this.EndAddExpertises(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddExpertisesCompleted(object state) {
            if ((this.AddExpertisesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddExpertisesCompleted(this, new AddExpertisesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddExpertisesAsync(string name_expertise, System.DateTime date_expertise, int[] arrExperts) {
            this.AddExpertisesAsync(name_expertise, date_expertise, arrExperts, null);
        }
        
        public void AddExpertisesAsync(string name_expertise, System.DateTime date_expertise, int[] arrExperts, object userState) {
            if ((this.onBeginAddExpertisesDelegate == null)) {
                this.onBeginAddExpertisesDelegate = new BeginOperationDelegate(this.OnBeginAddExpertises);
            }
            if ((this.onEndAddExpertisesDelegate == null)) {
                this.onEndAddExpertisesDelegate = new EndOperationDelegate(this.OnEndAddExpertises);
            }
            if ((this.onAddExpertisesCompletedDelegate == null)) {
                this.onAddExpertisesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddExpertisesCompleted);
            }
            base.InvokeAsync(this.onBeginAddExpertisesDelegate, new object[] {
                        name_expertise,
                        date_expertise,
                        arrExperts}, this.onEndAddExpertisesDelegate, this.onAddExpertisesCompletedDelegate, userState);
        }
        
        public bool DeleteExpert(int id_expert) {
            return base.Channel.DeleteExpert(id_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteExpert(int id_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteExpert(id_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteExpert(System.IAsyncResult result) {
            return base.Channel.EndDeleteExpert(result);
        }
        
        private System.IAsyncResult OnBeginDeleteExpert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expert = ((int)(inValues[0]));
            return this.BeginDeleteExpert(id_expert, callback, asyncState);
        }
        
        private object[] OnEndDeleteExpert(System.IAsyncResult result) {
            bool retVal = this.EndDeleteExpert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteExpertCompleted(object state) {
            if ((this.DeleteExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteExpertCompleted(this, new DeleteExpertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteExpertAsync(int id_expert) {
            this.DeleteExpertAsync(id_expert, null);
        }
        
        public void DeleteExpertAsync(int id_expert, object userState) {
            if ((this.onBeginDeleteExpertDelegate == null)) {
                this.onBeginDeleteExpertDelegate = new BeginOperationDelegate(this.OnBeginDeleteExpert);
            }
            if ((this.onEndDeleteExpertDelegate == null)) {
                this.onEndDeleteExpertDelegate = new EndOperationDelegate(this.OnEndDeleteExpert);
            }
            if ((this.onDeleteExpertCompletedDelegate == null)) {
                this.onDeleteExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteExpertCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteExpertDelegate, new object[] {
                        id_expert}, this.onEndDeleteExpertDelegate, this.onDeleteExpertCompletedDelegate, userState);
        }
        
        public bool DeleteProject(int id_project) {
            return base.Channel.DeleteProject(id_project);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteProject(int id_project, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProject(id_project, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteProject(System.IAsyncResult result) {
            return base.Channel.EndDeleteProject(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_project = ((int)(inValues[0]));
            return this.BeginDeleteProject(id_project, callback, asyncState);
        }
        
        private object[] OnEndDeleteProject(System.IAsyncResult result) {
            bool retVal = this.EndDeleteProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteProjectCompleted(object state) {
            if ((this.DeleteProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProjectCompleted(this, new DeleteProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProjectAsync(int id_project) {
            this.DeleteProjectAsync(id_project, null);
        }
        
        public void DeleteProjectAsync(int id_project, object userState) {
            if ((this.onBeginDeleteProjectDelegate == null)) {
                this.onBeginDeleteProjectDelegate = new BeginOperationDelegate(this.OnBeginDeleteProject);
            }
            if ((this.onEndDeleteProjectDelegate == null)) {
                this.onEndDeleteProjectDelegate = new EndOperationDelegate(this.OnEndDeleteProject);
            }
            if ((this.onDeleteProjectCompletedDelegate == null)) {
                this.onDeleteProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProjectCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProjectDelegate, new object[] {
                        id_project}, this.onEndDeleteProjectDelegate, this.onDeleteProjectCompletedDelegate, userState);
        }
        
        public void AddExpert(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert, bool comission_chairman) {
            base.Channel.AddExpert(surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, contacts_expert, ListFOS, login_expert, password_expert, comission_chairman);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddExpert(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert, bool comission_chairman, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddExpert(surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, contacts_expert, ListFOS, login_expert, password_expert, comission_chairman, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddExpert(System.IAsyncResult result) {
            base.Channel.EndAddExpert(result);
        }
        
        private System.IAsyncResult OnBeginAddExpert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string surname_expert = ((string)(inValues[0]));
            string name_expert = ((string)(inValues[1]));
            string patronymic_expert = ((string)(inValues[2]));
            string job_expert = ((string)(inValues[3]));
            string post_expert = ((string)(inValues[4]));
            string degree_expert = ((string)(inValues[5]));
            string rank_expert = ((string)(inValues[6]));
            string contacts_expert = ((string)(inValues[7]));
            int[] ListFOS = ((int[])(inValues[8]));
            string login_expert = ((string)(inValues[9]));
            string password_expert = ((string)(inValues[10]));
            bool comission_chairman = ((bool)(inValues[11]));
            return this.BeginAddExpert(surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, contacts_expert, ListFOS, login_expert, password_expert, comission_chairman, callback, asyncState);
        }
        
        private object[] OnEndAddExpert(System.IAsyncResult result) {
            this.EndAddExpert(result);
            return null;
        }
        
        private void OnAddExpertCompleted(object state) {
            if ((this.AddExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddExpertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddExpertAsync(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert, bool comission_chairman) {
            this.AddExpertAsync(surname_expert, name_expert, patronymic_expert, job_expert, post_expert, degree_expert, rank_expert, contacts_expert, ListFOS, login_expert, password_expert, comission_chairman, null);
        }
        
        public void AddExpertAsync(string surname_expert, string name_expert, string patronymic_expert, string job_expert, string post_expert, string degree_expert, string rank_expert, string contacts_expert, int[] ListFOS, string login_expert, string password_expert, bool comission_chairman, object userState) {
            if ((this.onBeginAddExpertDelegate == null)) {
                this.onBeginAddExpertDelegate = new BeginOperationDelegate(this.OnBeginAddExpert);
            }
            if ((this.onEndAddExpertDelegate == null)) {
                this.onEndAddExpertDelegate = new EndOperationDelegate(this.OnEndAddExpert);
            }
            if ((this.onAddExpertCompletedDelegate == null)) {
                this.onAddExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddExpertCompleted);
            }
            base.InvokeAsync(this.onBeginAddExpertDelegate, new object[] {
                        surname_expert,
                        name_expert,
                        patronymic_expert,
                        job_expert,
                        post_expert,
                        degree_expert,
                        rank_expert,
                        contacts_expert,
                        ListFOS,
                        login_expert,
                        password_expert,
                        comission_chairman}, this.onEndAddExpertDelegate, this.onAddExpertCompletedDelegate, userState);
        }
        
        public bool AddCriterions(string name_crit, bool qualit_crit, string valid_values, int id_category) {
            return base.Channel.AddCriterions(name_crit, qualit_crit, valid_values, id_category);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddCriterions(string name_crit, bool qualit_crit, string valid_values, int id_category, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddCriterions(name_crit, qualit_crit, valid_values, id_category, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddCriterions(System.IAsyncResult result) {
            return base.Channel.EndAddCriterions(result);
        }
        
        private System.IAsyncResult OnBeginAddCriterions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_crit = ((string)(inValues[0]));
            bool qualit_crit = ((bool)(inValues[1]));
            string valid_values = ((string)(inValues[2]));
            int id_category = ((int)(inValues[3]));
            return this.BeginAddCriterions(name_crit, qualit_crit, valid_values, id_category, callback, asyncState);
        }
        
        private object[] OnEndAddCriterions(System.IAsyncResult result) {
            bool retVal = this.EndAddCriterions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddCriterionsCompleted(object state) {
            if ((this.AddCriterionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCriterionsCompleted(this, new AddCriterionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddCriterionsAsync(string name_crit, bool qualit_crit, string valid_values, int id_category) {
            this.AddCriterionsAsync(name_crit, qualit_crit, valid_values, id_category, null);
        }
        
        public void AddCriterionsAsync(string name_crit, bool qualit_crit, string valid_values, int id_category, object userState) {
            if ((this.onBeginAddCriterionsDelegate == null)) {
                this.onBeginAddCriterionsDelegate = new BeginOperationDelegate(this.OnBeginAddCriterions);
            }
            if ((this.onEndAddCriterionsDelegate == null)) {
                this.onEndAddCriterionsDelegate = new EndOperationDelegate(this.OnEndAddCriterions);
            }
            if ((this.onAddCriterionsCompletedDelegate == null)) {
                this.onAddCriterionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCriterionsCompleted);
            }
            base.InvokeAsync(this.onBeginAddCriterionsDelegate, new object[] {
                        name_crit,
                        qualit_crit,
                        valid_values,
                        id_category}, this.onEndAddCriterionsDelegate, this.onAddCriterionsCompletedDelegate, userState);
        }
        
        public bool AddFiledsOfScience(string name_fos) {
            return base.Channel.AddFiledsOfScience(name_fos);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddFiledsOfScience(string name_fos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddFiledsOfScience(name_fos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddFiledsOfScience(System.IAsyncResult result) {
            return base.Channel.EndAddFiledsOfScience(result);
        }
        
        private System.IAsyncResult OnBeginAddFiledsOfScience(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name_fos = ((string)(inValues[0]));
            return this.BeginAddFiledsOfScience(name_fos, callback, asyncState);
        }
        
        private object[] OnEndAddFiledsOfScience(System.IAsyncResult result) {
            bool retVal = this.EndAddFiledsOfScience(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddFiledsOfScienceCompleted(object state) {
            if ((this.AddFiledsOfScienceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddFiledsOfScienceCompleted(this, new AddFiledsOfScienceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddFiledsOfScienceAsync(string name_fos) {
            this.AddFiledsOfScienceAsync(name_fos, null);
        }
        
        public void AddFiledsOfScienceAsync(string name_fos, object userState) {
            if ((this.onBeginAddFiledsOfScienceDelegate == null)) {
                this.onBeginAddFiledsOfScienceDelegate = new BeginOperationDelegate(this.OnBeginAddFiledsOfScience);
            }
            if ((this.onEndAddFiledsOfScienceDelegate == null)) {
                this.onEndAddFiledsOfScienceDelegate = new EndOperationDelegate(this.OnEndAddFiledsOfScience);
            }
            if ((this.onAddFiledsOfScienceCompletedDelegate == null)) {
                this.onAddFiledsOfScienceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddFiledsOfScienceCompleted);
            }
            base.InvokeAsync(this.onBeginAddFiledsOfScienceDelegate, new object[] {
                        name_fos}, this.onEndAddFiledsOfScienceDelegate, this.onAddFiledsOfScienceCompletedDelegate, userState);
        }
        
        public ExpertiseWPFApplication.ServiceReference1.Experts Authorization(string Login, string Password) {
            return base.Channel.Authorization(Login, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthorization(string Login, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthorization(Login, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ExpertiseWPFApplication.ServiceReference1.Experts EndAuthorization(System.IAsyncResult result) {
            return base.Channel.EndAuthorization(result);
        }
        
        private System.IAsyncResult OnBeginAuthorization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Login = ((string)(inValues[0]));
            string Password = ((string)(inValues[1]));
            return this.BeginAuthorization(Login, Password, callback, asyncState);
        }
        
        private object[] OnEndAuthorization(System.IAsyncResult result) {
            ExpertiseWPFApplication.ServiceReference1.Experts retVal = this.EndAuthorization(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthorizationCompleted(object state) {
            if ((this.AuthorizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthorizationCompleted(this, new AuthorizationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthorizationAsync(string Login, string Password) {
            this.AuthorizationAsync(Login, Password, null);
        }
        
        public void AuthorizationAsync(string Login, string Password, object userState) {
            if ((this.onBeginAuthorizationDelegate == null)) {
                this.onBeginAuthorizationDelegate = new BeginOperationDelegate(this.OnBeginAuthorization);
            }
            if ((this.onEndAuthorizationDelegate == null)) {
                this.onEndAuthorizationDelegate = new EndOperationDelegate(this.OnEndAuthorization);
            }
            if ((this.onAuthorizationCompletedDelegate == null)) {
                this.onAuthorizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthorizationCompleted);
            }
            base.InvokeAsync(this.onBeginAuthorizationDelegate, new object[] {
                        Login,
                        Password}, this.onEndAuthorizationDelegate, this.onAuthorizationCompletedDelegate, userState);
        }
        
        public string Gethello() {
            return base.Channel.Gethello();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGethello(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGethello(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGethello(System.IAsyncResult result) {
            return base.Channel.EndGethello(result);
        }
        
        private System.IAsyncResult OnBeginGethello(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGethello(callback, asyncState);
        }
        
        private object[] OnEndGethello(System.IAsyncResult result) {
            string retVal = this.EndGethello(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGethelloCompleted(object state) {
            if ((this.GethelloCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GethelloCompleted(this, new GethelloCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GethelloAsync() {
            this.GethelloAsync(null);
        }
        
        public void GethelloAsync(object userState) {
            if ((this.onBeginGethelloDelegate == null)) {
                this.onBeginGethelloDelegate = new BeginOperationDelegate(this.OnBeginGethello);
            }
            if ((this.onEndGethelloDelegate == null)) {
                this.onEndGethelloDelegate = new EndOperationDelegate(this.OnEndGethello);
            }
            if ((this.onGethelloCompletedDelegate == null)) {
                this.onGethelloCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGethelloCompleted);
            }
            base.InvokeAsync(this.onBeginGethelloDelegate, null, this.onEndGethelloDelegate, this.onGethelloCompletedDelegate, userState);
        }
    }
}
